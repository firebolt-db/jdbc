name: Release new version

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name to publish'
        required: true

jobs:
  pre-release-testing:
    uses: ./.github/workflows/pre-release-test.yml
    secrets:
      FIREBOLT_STG_USERNAME: ${{ secrets.FIREBOLT_STG_USERNAME }}
      FIREBOLT_STG_PASSWORD: ${{ secrets.FIREBOLT_STG_PASSWORD }}
      FIREBOLT_CLIENT_ID_STG_NEW_IDN: ${{ secrets.FIREBOLT_CLIENT_ID_STG_NEW_IDN }}
      FIREBOLT_CLIENT_SECRET_STG_NEW_IDN: ${{ secrets.FIREBOLT_CLIENT_SECRET_STG_NEW_IDN }}
      
  bump-version:
    runs-on: ubuntu-latest
    env:
      newVersion: ${{ github.event.inputs.tag_name }}
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.RELEASE_PAT }}

    - name: Bump version in gradle.properties
      run: |
        newVersion=$(echo $newVersion | sed 's/^v//')
        sed -i.bak "s/^version=.*/version=$newVersion/" gradle.properties
        rm gradle.properties.bak

    - name: Setup git config
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"

    - name: Commit version bump
      run: |
        git add gradle.properties
        git commit -m "chore: Bump version to $newVersion"

    - name: Tag version
      run: |
        git tag $newVersion

    - name: Push changes
      run: |
        git push origin master
        # Push tag
        git push origin $newVersion


  build:
    needs: bump-version
    uses: ./.github/workflows/build.yml
    with:
      branch: ${{ github.event.inputs.tag_name }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.tag_name}}
    - name: Download uber-jar
      uses: actions/download-artifact@v4.1.7
      with:
        name: ${{ needs.build.outputs.uber-jar }}
    - name: Download sources-jar
      uses: actions/download-artifact@v4.1.7
      with:
        name: ${{ needs.build.outputs.sources-jar }}
    - uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: ${{ needs.build.outputs.uber-jar }}
        tags: true
        draft: false
        tag_name: ${{ github.event.inputs.tag_name }}
    - name: Deploy to Maven Central repository
      run: ./gradlew publish
      env:
        MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USERNAME }}
        MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PASSWORD }}
        GRADLE_SIGNING_KEY: ${{ secrets.GRADLE_SIGNING_KEY }}
        GRADLE_SIGNING_PASSWORD: ${{ secrets.GRADLE_SIGNING_PASSWORD }}
