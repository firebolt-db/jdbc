name: Release new version

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name to publish'
        required: true

jobs:
  pre-release-testing:
    uses: ./.github/workflows/pre-release-test.yml
    secrets:
      FIREBOLT_STG_USERNAME: ${{ secrets.FIREBOLT_STG_USERNAME }}
      FIREBOLT_STG_PASSWORD: ${{ secrets.FIREBOLT_STG_PASSWORD }}
      FIREBOLT_CLIENT_ID_STG_NEW_IDN: ${{ secrets.FIREBOLT_CLIENT_ID_STG_NEW_IDN }}
      FIREBOLT_CLIENT_SECRET_STG_NEW_IDN: ${{ secrets.FIREBOLT_CLIENT_SECRET_STG_NEW_IDN }}
      FIREBOLT_CORE_DEV_CERT_PRIVATE_KEY: ${{ secrets.FIREBOLT_CORE_DEV_CERT_PRIVATE_KEY }}
      FIREBOLT_CORE_DEV_CERT: ${{ secrets.FIREBOLT_CORE_DEV_CERT }}

  bump-version:
    needs: pre-release-testing
    runs-on: ubuntu-latest
    env:
      newVersion: ${{ github.event.inputs.tag_name }}
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.RELEASE_PAT }}

    - name: Bump version in gradle.properties
      run: |
        newVersion=$(echo $newVersion | sed 's/^v//')
        sed -i.bak "s/^version=.*/version=$newVersion/" gradle.properties
        rm gradle.properties.bak

    - name: Setup git config
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"

    - name: Commit version bump
      run: |
        git add gradle.properties
        git commit -m "chore: Bump version to $newVersion"

    - name: Tag version
      run: |
        git tag $newVersion

    - name: Push changes
      run: |
        git push origin master
        # Push tag
        git push origin $newVersion

  build:
    needs: bump-version
    uses: ./.github/workflows/build.yml
    with:
      branch: ${{ github.event.inputs.tag_name }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.tag_name}}
    - name: Download uber-jar
      uses: actions/download-artifact@v4.1.7
      with:
        name: ${{ needs.build.outputs.uber-jar }}
    - name: Download sources-jar
      uses: actions/download-artifact@v4.1.7
      with:
        name: ${{ needs.build.outputs.sources-jar }}
    - uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: ${{ needs.build.outputs.uber-jar }}
        tags: true
        draft: false
        tag_name: ${{ github.event.inputs.tag_name }}
    - name: Deploy to Maven Central repository
      run: ./gradlew publish
      env:
        MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USERNAME }}
        MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PASSWORD }}
        GRADLE_SIGNING_KEY: ${{ secrets.GRADLE_SIGNING_KEY }}
        GRADLE_SIGNING_PASSWORD: ${{ secrets.GRADLE_SIGNING_PASSWORD }}

    - name: Trigger manual package upload via API
      run: ./gradlew manualUploadToMavenCentral
      env:
        MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USERNAME }}
        MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PASSWORD }}

    - name: Close and release Sonatype staging repository
      run: ./gradlew closeAndReleaseSonatypeStagingRepository
      env:
        MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USERNAME }}
        MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PASSWORD }}

    - name: Generate and update GitHub release notes
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const tag = `${{ github.event.inputs.tag_name }}`;
          const { owner, repo } = context.repo;
          // Fetch existing release by tag (created earlier by upload step)
          const release = await github.rest.repos.getReleaseByTag({ owner, repo, tag });
          // Generate notes based on PRs/commits between last release and this tag
          const notes = await github.rest.repos.generateReleaseNotes({ owner, repo, tag_name: tag });
          // Sanitize internal JIRA links: [FIR-1234](...) -> `FIR-1234`, and wrap bare FIR-1234 in backticks
          let body = notes.data.body || '';
          body = body.replace(/\[(FIR-\d+)\]\([^)]*\)/g, '`$1`');
          body = body.replace(/(?<!`)\bFIR-\d+\b(?!`)/g, (m) => `\`${m}\``);
          // Update the release body with sanitized notes
          await github.rest.repos.updateRelease({ owner, repo, release_id: release.data.id, body });

    - name: Derive release version
      id: release_version
      run: |
        ver=$(echo "${{ github.event.inputs.tag_name }}" | sed 's/^v//')
        echo "value=$ver" >> $GITHUB_OUTPUT

    - name: Notify Slack of JDBC release
      uses: slackapi/slack-github-action@v1
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      with:
        payload: |
          {
            "channel": "ecosystem-team",
            "text": "Firebolt JDBC driver ${{ steps.release_version.outputs.value }} has been released: <https://github.com/${{ github.repository }}/releases/tag/${{ github.event.inputs.tag_name }}|Release notes>"
          }
