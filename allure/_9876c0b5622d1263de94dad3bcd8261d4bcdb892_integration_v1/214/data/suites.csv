"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Oct 16 11:41:01 GMT 2025","Thu Oct 16 11:41:03 GMT 2025","1850","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Thu Oct 16 11:40:12 GMT 2025","Thu Oct 16 11:40:14 GMT 2025","1806","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Thu Oct 16 11:38:45 GMT 2025","Thu Oct 16 11:38:47 GMT 2025","1986","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:39:18 GMT 2025","Thu Oct 16 11:39:20 GMT 2025","2047","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Thu Oct 16 11:39:03 GMT 2025","Thu Oct 16 11:39:04 GMT 2025","707","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Thu Oct 16 11:40:55 GMT 2025","Thu Oct 16 11:40:57 GMT 2025","2091","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Thu Oct 16 11:41:10 GMT 2025","Thu Oct 16 11:41:12 GMT 2025","1856","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Thu Oct 16 11:38:21 GMT 2025","Thu Oct 16 11:38:21 GMT 2025","72","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Thu Oct 16 11:38:09 GMT 2025","Thu Oct 16 11:38:09 GMT 2025","694","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","33","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Thu Oct 16 11:40:36 GMT 2025","Thu Oct 16 11:40:38 GMT 2025","1850","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Thu Oct 16 11:40:53 GMT 2025","Thu Oct 16 11:40:55 GMT 2025","1910","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Thu Oct 16 11:40:18 GMT 2025","Thu Oct 16 11:40:19 GMT 2025","708","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Thu Oct 16 11:38:34 GMT 2025","Thu Oct 16 11:38:36 GMT 2025","2109","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:39:20 GMT 2025","Thu Oct 16 11:39:22 GMT 2025","2246","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Thu Oct 16 11:38:36 GMT 2025","Thu Oct 16 11:38:38 GMT 2025","2240","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:38:04 GMT 2025","Thu Oct 16 11:38:06 GMT 2025","2149","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Thu Oct 16 11:48:25 GMT 2025","Thu Oct 16 11:48:25 GMT 2025","280","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Thu Oct 16 11:38:32 GMT 2025","Thu Oct 16 11:38:34 GMT 2025","2151","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:38:07 GMT 2025","Thu Oct 16 11:38:08 GMT 2025","826","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"skipped","Thu Oct 16 11:39:36 GMT 2025","Thu Oct 16 11:39:36 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Thu Oct 16 11:39:04 GMT 2025","Thu Oct 16 11:39:07 GMT 2025","3145","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","36","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Thu Oct 16 11:41:03 GMT 2025","Thu Oct 16 11:41:05 GMT 2025","1753","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Thu Oct 16 11:38:59 GMT 2025","Thu Oct 16 11:39:00 GMT 2025","752","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Thu Oct 16 11:38:13 GMT 2025","Thu Oct 16 11:38:13 GMT 2025","83","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Thu Oct 16 11:38:38 GMT 2025","Thu Oct 16 11:38:40 GMT 2025","1875","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Thu Oct 16 11:38:12 GMT 2025","Thu Oct 16 11:38:12 GMT 2025","125","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Thu Oct 16 11:39:07 GMT 2025","Thu Oct 16 11:39:09 GMT 2025","2265","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Thu Oct 16 11:38:47 GMT 2025","Thu Oct 16 11:38:49 GMT 2025","2159","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Thu Oct 16 11:38:12 GMT 2025","Thu Oct 16 11:38:13 GMT 2025","134","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Thu Oct 16 11:40:16 GMT 2025","Thu Oct 16 11:40:17 GMT 2025","725","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Thu Oct 16 11:39:09 GMT 2025","Thu Oct 16 11:39:11 GMT 2025","2141","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Thu Oct 16 11:41:12 GMT 2025","Thu Oct 16 11:41:14 GMT 2025","2026","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Thu Oct 16 11:48:25 GMT 2025","Thu Oct 16 11:48:25 GMT 2025","6","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Thu Oct 16 11:38:06 GMT 2025","Thu Oct 16 11:38:07 GMT 2025","735","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Thu Oct 16 11:38:11 GMT 2025","Thu Oct 16 11:38:11 GMT 2025","123","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Thu Oct 16 11:39:25 GMT 2025","Thu Oct 16 11:39:27 GMT 2025","1949","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Thu Oct 16 11:38:40 GMT 2025","Thu Oct 16 11:38:42 GMT 2025","2171","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Thu Oct 16 11:41:17 GMT 2025","Thu Oct 16 11:41:17 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Thu Oct 16 11:40:24 GMT 2025","Thu Oct 16 11:40:26 GMT 2025","1802","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Thu Oct 16 11:48:25 GMT 2025","Thu Oct 16 11:48:25 GMT 2025","10","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Thu Oct 16 11:48:21 GMT 2025","Thu Oct 16 11:48:21 GMT 2025","252","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Thu Oct 16 11:40:40 GMT 2025","Thu Oct 16 11:40:40 GMT 2025","769","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Thu Oct 16 11:38:21 GMT 2025","Thu Oct 16 11:38:23 GMT 2025","1979","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:41:07 GMT 2025","Thu Oct 16 11:41:08 GMT 2025","1151","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Thu Oct 16 11:40:02 GMT 2025","Thu Oct 16 11:40:04 GMT 2025","1838","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","39","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Thu Oct 16 11:48:23 GMT 2025","Thu Oct 16 11:48:24 GMT 2025","1661","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Thu Oct 16 11:38:44 GMT 2025","Thu Oct 16 11:38:45 GMT 2025","1003","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:38:12 GMT 2025","Thu Oct 16 11:38:12 GMT 2025","134","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Thu Oct 16 11:48:22 GMT 2025","Thu Oct 16 11:48:22 GMT 2025","299","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Thu Oct 16 11:38:11 GMT 2025","Thu Oct 16 11:38:12 GMT 2025","125","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Thu Oct 16 11:39:24 GMT 2025","Thu Oct 16 11:39:25 GMT 2025","1065","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:40:02 GMT 2025","22239","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Thu Oct 16 11:38:11 GMT 2025","Thu Oct 16 11:38:11 GMT 2025","137","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Thu Oct 16 11:38:10 GMT 2025","Thu Oct 16 11:38:11 GMT 2025","127","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Thu Oct 16 11:38:25 GMT 2025","Thu Oct 16 11:38:27 GMT 2025","2130","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:38:11 GMT 2025","Thu Oct 16 11:38:11 GMT 2025","126","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Thu Oct 16 11:38:23 GMT 2025","Thu Oct 16 11:38:25 GMT 2025","2326","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:40:21 GMT 2025","Thu Oct 16 11:40:23 GMT 2025","2030","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Thu Oct 16 11:40:26 GMT 2025","Thu Oct 16 11:40:27 GMT 2025","727","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Thu Oct 16 11:41:05 GMT 2025","Thu Oct 16 11:41:07 GMT 2025","2379","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Thu Oct 16 11:38:15 GMT 2025","Thu Oct 16 11:38:18 GMT 2025","2325","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Thu Oct 16 11:40:38 GMT 2025","Thu Oct 16 11:40:40 GMT 2025","1812","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Thu Oct 16 11:40:06 GMT 2025","Thu Oct 16 11:40:08 GMT 2025","1844","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Thu Oct 16 11:40:34 GMT 2025","Thu Oct 16 11:40:35 GMT 2025","668","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","36","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Thu Oct 16 11:40:57 GMT 2025","Thu Oct 16 11:40:58 GMT 2025","744","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Thu Oct 16 11:38:27 GMT 2025","Thu Oct 16 11:38:30 GMT 2025","2312","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:40:28 GMT 2025","Thu Oct 16 11:40:30 GMT 2025","1871","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Thu Oct 16 11:38:21 GMT 2025","Thu Oct 16 11:38:21 GMT 2025","97","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Thu Oct 16 11:48:21 GMT 2025","Thu Oct 16 11:48:21 GMT 2025","127","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Thu Oct 16 11:38:10 GMT 2025","Thu Oct 16 11:38:10 GMT 2025","253","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Thu Oct 16 11:39:22 GMT 2025","Thu Oct 16 11:39:24 GMT 2025","2223","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Thu Oct 16 11:38:49 GMT 2025","Thu Oct 16 11:38:53 GMT 2025","3296","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Thu Oct 16 11:38:10 GMT 2025","Thu Oct 16 11:38:10 GMT 2025","145","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Thu Oct 16 11:38:12 GMT 2025","Thu Oct 16 11:38:12 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Thu Oct 16 11:40:23 GMT 2025","Thu Oct 16 11:40:24 GMT 2025","1778","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Thu Oct 16 11:38:11 GMT 2025","Thu Oct 16 11:38:11 GMT 2025","123","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Thu Oct 16 11:40:40 GMT 2025","Thu Oct 16 11:40:53 GMT 2025","12933","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Thu Oct 16 11:38:30 GMT 2025","Thu Oct 16 11:38:32 GMT 2025","1907","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:40:17 GMT 2025","Thu Oct 16 11:40:18 GMT 2025","1557","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Thu Oct 16 11:41:08 GMT 2025","Thu Oct 16 11:41:10 GMT 2025","1999","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Thu Oct 16 11:40:32 GMT 2025","Thu Oct 16 11:40:34 GMT 2025","1849","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Thu Oct 16 11:39:27 GMT 2025","Thu Oct 16 11:39:29 GMT 2025","2241","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Thu Oct 16 11:40:02 GMT 2025","Thu Oct 16 11:40:02 GMT 2025","804","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Thu Oct 16 11:38:42 GMT 2025","Thu Oct 16 11:38:44 GMT 2025","2204","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:38:53 GMT 2025","Thu Oct 16 11:38:55 GMT 2025","2655","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Thu Oct 16 11:40:14 GMT 2025","Thu Oct 16 11:40:16 GMT 2025","2309","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Thu Oct 16 11:38:13 GMT 2025","Thu Oct 16 11:38:15 GMT 2025","2547","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Thu Oct 16 11:48:25 GMT 2025","Thu Oct 16 11:48:25 GMT 2025","48","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Thu Oct 16 11:39:29 GMT 2025","Thu Oct 16 11:39:32 GMT 2025","2190","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Thu Oct 16 11:39:00 GMT 2025","Thu Oct 16 11:39:03 GMT 2025","3544","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Thu Oct 16 11:40:04 GMT 2025","Thu Oct 16 11:40:06 GMT 2025","1850","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Thu Oct 16 11:38:08 GMT 2025","Thu Oct 16 11:38:09 GMT 2025","833","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Thu Oct 16 11:39:11 GMT 2025","Thu Oct 16 11:39:15 GMT 2025","3771","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Thu Oct 16 11:40:19 GMT 2025","Thu Oct 16 11:40:21 GMT 2025","1347","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Thu Oct 16 11:41:17 GMT 2025","Thu Oct 16 11:48:17 GMT 2025","420833","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Thu Oct 16 11:40:58 GMT 2025","Thu Oct 16 11:41:00 GMT 2025","2200","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Thu Oct 16 11:40:09 GMT 2025","Thu Oct 16 11:40:10 GMT 2025","1466","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Thu Oct 16 11:40:30 GMT 2025","Thu Oct 16 11:40:32 GMT 2025","1757","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Thu Oct 16 11:48:21 GMT 2025","Thu Oct 16 11:48:22 GMT 2025","123","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Thu Oct 16 11:48:22 GMT 2025","Thu Oct 16 11:48:22 GMT 2025","166","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Thu Oct 16 11:38:12 GMT 2025","Thu Oct 16 11:38:12 GMT 2025","127","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Thu Oct 16 11:38:11 GMT 2025","Thu Oct 16 11:38:11 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Thu Oct 16 11:38:12 GMT 2025","Thu Oct 16 11:38:12 GMT 2025","121","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Thu Oct 16 11:39:34 GMT 2025","Thu Oct 16 11:39:36 GMT 2025","2438","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Thu Oct 16 11:48:22 GMT 2025","Thu Oct 16 11:48:22 GMT 2025","229","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Thu Oct 16 11:38:11 GMT 2025","Thu Oct 16 11:38:11 GMT 2025","125","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Thu Oct 16 11:48:22 GMT 2025","Thu Oct 16 11:48:23 GMT 2025","185","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Thu Oct 16 11:41:14 GMT 2025","Thu Oct 16 11:41:17 GMT 2025","2426","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","36","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Thu Oct 16 11:38:10 GMT 2025","Thu Oct 16 11:38:10 GMT 2025","129","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Thu Oct 16 11:39:15 GMT 2025","Thu Oct 16 11:39:18 GMT 2025","2427","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Thu Oct 16 11:38:12 GMT 2025","Thu Oct 16 11:38:12 GMT 2025","122","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Thu Oct 16 11:48:24 GMT 2025","Thu Oct 16 11:48:24 GMT 2025","144","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Thu Oct 16 11:38:19 GMT 2025","Thu Oct 16 11:38:21 GMT 2025","1904","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Thu Oct 16 11:40:08 GMT 2025","Thu Oct 16 11:40:09 GMT 2025","751","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Thu Oct 16 11:38:55 GMT 2025","Thu Oct 16 11:38:59 GMT 2025","3425","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Thu Oct 16 11:38:12 GMT 2025","Thu Oct 16 11:38:12 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Thu Oct 16 11:39:36 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","2215","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Thu Oct 16 11:40:10 GMT 2025","Thu Oct 16 11:40:12 GMT 2025","1840","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Thu Oct 16 11:38:09 GMT 2025","Thu Oct 16 11:38:10 GMT 2025","130","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Thu Oct 16 11:40:35 GMT 2025","Thu Oct 16 11:40:36 GMT 2025","1497","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Thu Oct 16 11:38:18 GMT 2025","Thu Oct 16 11:38:19 GMT 2025","1083","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Thu Oct 16 11:39:39 GMT 2025","Thu Oct 16 11:39:39 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Thu Oct 16 11:40:27 GMT 2025","Thu Oct 16 11:40:28 GMT 2025","1491","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Thu Oct 16 11:39:32 GMT 2025","Thu Oct 16 11:39:34 GMT 2025","2297","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Thu Oct 16 11:41:00 GMT 2025","Thu Oct 16 11:41:01 GMT 2025","732","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Thu Oct 16 11:48:21 GMT 2025","Thu Oct 16 11:48:21 GMT 2025","267","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
