"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Oct 16 11:22:11 GMT 2025","Thu Oct 16 11:22:13 GMT 2025","1359","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Thu Oct 16 11:19:51 GMT 2025","Thu Oct 16 11:19:51 GMT 2025","171","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Thu Oct 16 11:21:14 GMT 2025","Thu Oct 16 11:21:17 GMT 2025","3259","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Thu Oct 16 11:23:08 GMT 2025","Thu Oct 16 11:23:11 GMT 2025","3103","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Thu Oct 16 11:21:24 GMT 2025","Thu Oct 16 11:21:27 GMT 2025","2566","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Thu Oct 16 11:20:50 GMT 2025","Thu Oct 16 11:20:54 GMT 2025","4101","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Thu Oct 16 11:19:52 GMT 2025","Thu Oct 16 11:19:52 GMT 2025","118","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Thu Oct 16 11:19:53 GMT 2025","Thu Oct 16 11:19:53 GMT 2025","118","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Thu Oct 16 11:23:21 GMT 2025","Thu Oct 16 11:30:23 GMT 2025","422711","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Thu Oct 16 11:23:07 GMT 2025","Thu Oct 16 11:23:08 GMT 2025","1224","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Thu Oct 16 11:19:57 GMT 2025","Thu Oct 16 11:19:59 GMT 2025","2697","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Thu Oct 16 11:21:27 GMT 2025","Thu Oct 16 11:21:29 GMT 2025","2806","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Thu Oct 16 11:30:27 GMT 2025","Thu Oct 16 11:30:27 GMT 2025","120","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Thu Oct 16 11:20:32 GMT 2025","Thu Oct 16 11:20:32 GMT 2025","710","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Thu Oct 16 11:19:52 GMT 2025","Thu Oct 16 11:19:52 GMT 2025","111","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Thu Oct 16 11:21:37 GMT 2025","Thu Oct 16 11:21:39 GMT 2025","2602","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Thu Oct 16 11:22:16 GMT 2025","Thu Oct 16 11:22:17 GMT 2025","1336","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Thu Oct 16 11:21:21 GMT 2025","Thu Oct 16 11:21:24 GMT 2025","2817","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Thu Oct 16 11:22:09 GMT 2025","Thu Oct 16 11:22:10 GMT 2025","1549","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Thu Oct 16 11:30:28 GMT 2025","Thu Oct 16 11:30:28 GMT 2025","137","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Thu Oct 16 11:21:17 GMT 2025","Thu Oct 16 11:21:21 GMT 2025","4101","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Thu Oct 16 11:19:53 GMT 2025","Thu Oct 16 11:19:53 GMT 2025","112","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Thu Oct 16 11:19:52 GMT 2025","Thu Oct 16 11:19:52 GMT 2025","117","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Thu Oct 16 11:21:11 GMT 2025","Thu Oct 16 11:21:14 GMT 2025","2407","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Thu Oct 16 11:20:14 GMT 2025","Thu Oct 16 11:20:17 GMT 2025","2931","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:22:17 GMT 2025","Thu Oct 16 11:22:18 GMT 2025","1216","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Thu Oct 16 11:19:47 GMT 2025","Thu Oct 16 11:19:48 GMT 2025","1847","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Thu Oct 16 11:22:37 GMT 2025","Thu Oct 16 11:22:39 GMT 2025","1263","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Thu Oct 16 11:20:56 GMT 2025","Thu Oct 16 11:20:58 GMT 2025","1414","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Thu Oct 16 11:21:07 GMT 2025","Thu Oct 16 11:21:11 GMT 2025","4393","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Thu Oct 16 11:23:17 GMT 2025","Thu Oct 16 11:23:18 GMT 2025","1250","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Thu Oct 16 11:22:10 GMT 2025","Thu Oct 16 11:22:11 GMT 2025","1277","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Thu Oct 16 11:30:27 GMT 2025","Thu Oct 16 11:30:27 GMT 2025","117","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Thu Oct 16 11:20:25 GMT 2025","Thu Oct 16 11:20:28 GMT 2025","2666","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:20:05 GMT 2025","Thu Oct 16 11:20:05 GMT 2025","91","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Thu Oct 16 11:22:35 GMT 2025","Thu Oct 16 11:22:36 GMT 2025","1400","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Thu Oct 16 11:21:29 GMT 2025","Thu Oct 16 11:21:34 GMT 2025","4620","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Thu Oct 16 11:20:11 GMT 2025","Thu Oct 16 11:20:14 GMT 2025","2499","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:22:36 GMT 2025","Thu Oct 16 11:22:37 GMT 2025","1335","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Thu Oct 16 11:22:26 GMT 2025","Thu Oct 16 11:22:28 GMT 2025","1523","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Thu Oct 16 11:30:27 GMT 2025","Thu Oct 16 11:30:27 GMT 2025","228","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Thu Oct 16 11:20:02 GMT 2025","Thu Oct 16 11:20:05 GMT 2025","2477","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Thu Oct 16 11:19:51 GMT 2025","Thu Oct 16 11:19:52 GMT 2025","123","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Thu Oct 16 11:19:53 GMT 2025","Thu Oct 16 11:19:54 GMT 2025","77","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Thu Oct 16 11:19:52 GMT 2025","Thu Oct 16 11:19:52 GMT 2025","118","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Thu Oct 16 11:20:32 GMT 2025","Thu Oct 16 11:20:35 GMT 2025","2513","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:20:58 GMT 2025","Thu Oct 16 11:21:02 GMT 2025","3635","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Thu Oct 16 11:21:42 GMT 2025","Thu Oct 16 11:21:44 GMT 2025","2171","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Thu Oct 16 11:22:24 GMT 2025","Thu Oct 16 11:22:25 GMT 2025","1332","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Thu Oct 16 11:23:02 GMT 2025","Thu Oct 16 11:23:03 GMT 2025","1348","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Thu Oct 16 11:22:32 GMT 2025","Thu Oct 16 11:22:33 GMT 2025","1201","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Thu Oct 16 11:22:22 GMT 2025","Thu Oct 16 11:22:24 GMT 2025","1380","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Thu Oct 16 11:23:06 GMT 2025","Thu Oct 16 11:23:07 GMT 2025","1362","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Thu Oct 16 11:19:49 GMT 2025","Thu Oct 16 11:19:49 GMT 2025","442","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","53","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Thu Oct 16 11:21:39 GMT 2025","Thu Oct 16 11:21:42 GMT 2025","2649","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Thu Oct 16 11:23:15 GMT 2025","Thu Oct 16 11:23:17 GMT 2025","1424","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Thu Oct 16 11:20:08 GMT 2025","Thu Oct 16 11:20:11 GMT 2025","3118","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Thu Oct 16 11:30:27 GMT 2025","Thu Oct 16 11:30:27 GMT 2025","106","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Thu Oct 16 11:20:35 GMT 2025","Thu Oct 16 11:20:38 GMT 2025","2852","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:19:53 GMT 2025","Thu Oct 16 11:19:53 GMT 2025","111","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Thu Oct 16 11:19:51 GMT 2025","Thu Oct 16 11:19:51 GMT 2025","135","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Thu Oct 16 11:21:34 GMT 2025","Thu Oct 16 11:21:37 GMT 2025","2774","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Thu Oct 16 11:30:29 GMT 2025","Thu Oct 16 11:30:30 GMT 2025","107","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Thu Oct 16 11:30:30 GMT 2025","Thu Oct 16 11:30:30 GMT 2025","72","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Thu Oct 16 11:30:30 GMT 2025","Thu Oct 16 11:30:30 GMT 2025","9","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Thu Oct 16 11:19:52 GMT 2025","Thu Oct 16 11:19:53 GMT 2025","114","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Thu Oct 16 11:22:44 GMT 2025","Thu Oct 16 11:22:59 GMT 2025","14674","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Thu Oct 16 11:23:00 GMT 2025","Thu Oct 16 11:23:02 GMT 2025","1407","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","36","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Thu Oct 16 11:19:50 GMT 2025","Thu Oct 16 11:19:51 GMT 2025","584","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Thu Oct 16 11:22:08 GMT 2025","Thu Oct 16 11:22:09 GMT 2025","758","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Thu Oct 16 11:23:18 GMT 2025","Thu Oct 16 11:23:20 GMT 2025","2581","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Thu Oct 16 11:19:51 GMT 2025","Thu Oct 16 11:19:51 GMT 2025","113","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Thu Oct 16 11:23:11 GMT 2025","Thu Oct 16 11:23:14 GMT 2025","2645","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Thu Oct 16 11:22:33 GMT 2025","Thu Oct 16 11:22:35 GMT 2025","1284","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Thu Oct 16 11:19:53 GMT 2025","Thu Oct 16 11:19:53 GMT 2025","115","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Thu Oct 16 11:22:41 GMT 2025","Thu Oct 16 11:22:43 GMT 2025","1417","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Thu Oct 16 11:23:03 GMT 2025","Thu Oct 16 11:23:04 GMT 2025","1259","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Thu Oct 16 11:21:03 GMT 2025","Thu Oct 16 11:21:07 GMT 2025","4209","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Thu Oct 16 11:30:30 GMT 2025","Thu Oct 16 11:30:30 GMT 2025","10","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","33","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Thu Oct 16 11:19:54 GMT 2025","Thu Oct 16 11:19:57 GMT 2025","3046","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"skipped","Thu Oct 16 11:21:47 GMT 2025","Thu Oct 16 11:21:47 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Thu Oct 16 11:22:29 GMT 2025","Thu Oct 16 11:22:31 GMT 2025","1397","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Thu Oct 16 11:30:30 GMT 2025","Thu Oct 16 11:30:30 GMT 2025","322","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Thu Oct 16 11:20:38 GMT 2025","Thu Oct 16 11:20:40 GMT 2025","2653","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:23:14 GMT 2025","Thu Oct 16 11:23:15 GMT 2025","1347","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Thu Oct 16 11:20:47 GMT 2025","Thu Oct 16 11:20:50 GMT 2025","2572","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Thu Oct 16 11:22:40 GMT 2025","Thu Oct 16 11:22:41 GMT 2025","1300","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Thu Oct 16 11:30:27 GMT 2025","Thu Oct 16 11:30:27 GMT 2025","149","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Thu Oct 16 11:19:59 GMT 2025","Thu Oct 16 11:20:02 GMT 2025","2760","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Thu Oct 16 11:30:27 GMT 2025","Thu Oct 16 11:30:28 GMT 2025","181","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Thu Oct 16 11:20:40 GMT 2025","Thu Oct 16 11:20:43 GMT 2025","2819","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:22:25 GMT 2025","Thu Oct 16 11:22:26 GMT 2025","1278","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Thu Oct 16 11:21:44 GMT 2025","Thu Oct 16 11:21:47 GMT 2025","2315","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Thu Oct 16 11:19:49 GMT 2025","Thu Oct 16 11:19:49 GMT 2025","418","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Thu Oct 16 11:30:28 GMT 2025","Thu Oct 16 11:30:29 GMT 2025","1591","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Thu Oct 16 11:20:05 GMT 2025","Thu Oct 16 11:20:08 GMT 2025","3415","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:19:52 GMT 2025","Thu Oct 16 11:19:52 GMT 2025","112","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Thu Oct 16 11:23:04 GMT 2025","Thu Oct 16 11:23:06 GMT 2025","1283","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Thu Oct 16 11:20:43 GMT 2025","Thu Oct 16 11:20:47 GMT 2025","4010","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Thu Oct 16 11:20:17 GMT 2025","Thu Oct 16 11:20:21 GMT 2025","4300","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 16 11:20:21 GMT 2025","Thu Oct 16 11:20:25 GMT 2025","3794","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:22:43 GMT 2025","Thu Oct 16 11:22:44 GMT 2025","1406","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Thu Oct 16 11:19:53 GMT 2025","Thu Oct 16 11:19:53 GMT 2025","111","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Thu Oct 16 11:22:13 GMT 2025","Thu Oct 16 11:22:14 GMT 2025","1238","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Thu Oct 16 11:20:54 GMT 2025","Thu Oct 16 11:20:56 GMT 2025","2615","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Thu Oct 16 11:19:53 GMT 2025","Thu Oct 16 11:19:53 GMT 2025","109","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Thu Oct 16 11:22:31 GMT 2025","Thu Oct 16 11:22:32 GMT 2025","1323","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Thu Oct 16 11:19:53 GMT 2025","Thu Oct 16 11:19:53 GMT 2025","113","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Thu Oct 16 11:22:39 GMT 2025","Thu Oct 16 11:22:40 GMT 2025","1532","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Thu Oct 16 11:19:53 GMT 2025","Thu Oct 16 11:19:53 GMT 2025","116","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","36","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Thu Oct 16 11:22:18 GMT 2025","Thu Oct 16 11:22:21 GMT 2025","2729","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Thu Oct 16 11:20:28 GMT 2025","Thu Oct 16 11:20:32 GMT 2025","3974","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 16 11:21:47 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","1989","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Thu Oct 16 11:21:02 GMT 2025","Thu Oct 16 11:21:03 GMT 2025","1238","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Thu Oct 16 11:22:59 GMT 2025","Thu Oct 16 11:23:00 GMT 2025","1383","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Thu Oct 16 11:30:28 GMT 2025","Thu Oct 16 11:30:28 GMT 2025","141","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Thu Oct 16 11:23:21 GMT 2025","Thu Oct 16 11:23:21 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Thu Oct 16 11:19:52 GMT 2025","Thu Oct 16 11:19:52 GMT 2025","115","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Thu Oct 16 11:19:49 GMT 2025","Thu Oct 16 11:19:50 GMT 2025","607","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Thu Oct 16 11:19:52 GMT 2025","Thu Oct 16 11:19:52 GMT 2025","120","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:22:08 GMT 2025","18498","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Thu Oct 16 11:22:14 GMT 2025","Thu Oct 16 11:22:16 GMT 2025","1715","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Thu Oct 16 11:22:28 GMT 2025","Thu Oct 16 11:22:29 GMT 2025","1530","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Thu Oct 16 11:22:21 GMT 2025","Thu Oct 16 11:22:22 GMT 2025","1210","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Thu Oct 16 11:21:49 GMT 2025","Thu Oct 16 11:21:49 GMT 2025","38","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Thu Oct 16 11:20:05 GMT 2025","Thu Oct 16 11:20:05 GMT 2025","73","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
