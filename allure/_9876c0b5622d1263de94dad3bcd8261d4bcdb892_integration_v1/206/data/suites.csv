"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Wed Oct 08 06:10:01 GMT 2025","Wed Oct 08 06:10:03 GMT 2025","1663","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Oct 08 06:10:07 GMT 2025","Wed Oct 08 06:10:09 GMT 2025","2099","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Wed Oct 08 06:10:39 GMT 2025","Wed Oct 08 06:10:42 GMT 2025","2443","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Wed Oct 08 06:20:23 GMT 2025","Wed Oct 08 06:20:25 GMT 2025","1628","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Wed Oct 08 06:11:55 GMT 2025","Wed Oct 08 06:11:56 GMT 2025","1294","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Wed Oct 08 06:09:32 GMT 2025","Wed Oct 08 06:09:32 GMT 2025","150","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Wed Oct 08 06:09:32 GMT 2025","Wed Oct 08 06:09:32 GMT 2025","156","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Wed Oct 08 06:09:32 GMT 2025","Wed Oct 08 06:09:32 GMT 2025","139","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Wed Oct 08 06:10:09 GMT 2025","Wed Oct 08 06:10:12 GMT 2025","2757","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Wed Oct 08 06:09:31 GMT 2025","Wed Oct 08 06:09:31 GMT 2025","142","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Wed Oct 08 06:12:42 GMT 2025","Wed Oct 08 06:12:45 GMT 2025","3116","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Wed Oct 08 06:12:34 GMT 2025","Wed Oct 08 06:12:36 GMT 2025","1644","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Wed Oct 08 06:09:29 GMT 2025","Wed Oct 08 06:09:29 GMT 2025","701","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Wed Oct 08 06:09:37 GMT 2025","Wed Oct 08 06:09:39 GMT 2025","1654","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Wed Oct 08 06:09:30 GMT 2025","Wed Oct 08 06:09:30 GMT 2025","162","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Wed Oct 08 06:20:23 GMT 2025","Wed Oct 08 06:20:23 GMT 2025","174","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Wed Oct 08 06:11:52 GMT 2025","Wed Oct 08 06:11:53 GMT 2025","1241","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Wed Oct 08 06:10:37 GMT 2025","Wed Oct 08 06:10:39 GMT 2025","2190","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Wed Oct 08 06:09:30 GMT 2025","Wed Oct 08 06:09:30 GMT 2025","195","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Wed Oct 08 06:11:37 GMT 2025","Wed Oct 08 06:11:39 GMT 2025","1464","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Wed Oct 08 06:11:04 GMT 2025","Wed Oct 08 06:11:04 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Wed Oct 08 06:12:02 GMT 2025","Wed Oct 08 06:12:04 GMT 2025","1576","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Wed Oct 08 06:09:27 GMT 2025","Wed Oct 08 06:09:28 GMT 2025","708","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Wed Oct 08 06:12:36 GMT 2025","Wed Oct 08 06:12:37 GMT 2025","1487","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Wed Oct 08 06:09:30 GMT 2025","Wed Oct 08 06:09:31 GMT 2025","152","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Wed Oct 08 06:11:53 GMT 2025","Wed Oct 08 06:11:55 GMT 2025","1538","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Wed Oct 08 06:09:41 GMT 2025","Wed Oct 08 06:09:43 GMT 2025","1854","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Oct 08 06:09:31 GMT 2025","Wed Oct 08 06:09:31 GMT 2025","149","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Wed Oct 08 06:11:03 GMT 2025","Wed Oct 08 06:11:03 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Wed Oct 08 06:10:03 GMT 2025","Wed Oct 08 06:10:04 GMT 2025","1522","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Oct 08 06:11:59 GMT 2025","Wed Oct 08 06:12:00 GMT 2025","1341","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Wed Oct 08 06:11:44 GMT 2025","Wed Oct 08 06:11:48 GMT 2025","3162","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Wed Oct 08 06:10:28 GMT 2025","Wed Oct 08 06:10:31 GMT 2025","2673","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Wed Oct 08 06:09:31 GMT 2025","Wed Oct 08 06:09:31 GMT 2025","138","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Wed Oct 08 06:10:04 GMT 2025","Wed Oct 08 06:10:07 GMT 2025","2762","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Wed Oct 08 06:12:12 GMT 2025","Wed Oct 08 06:12:28 GMT 2025","15724","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Wed Oct 08 06:09:39 GMT 2025","Wed Oct 08 06:09:41 GMT 2025","2050","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Wed Oct 08 06:09:24 GMT 2025","Wed Oct 08 06:09:26 GMT 2025","1995","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Wed Oct 08 06:11:58 GMT 2025","Wed Oct 08 06:11:59 GMT 2025","1501","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Wed Oct 08 06:09:33 GMT 2025","Wed Oct 08 06:09:35 GMT 2025","1766","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Wed Oct 08 06:11:04 GMT 2025","Wed Oct 08 06:11:33 GMT 2025","28978","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Wed Oct 08 06:11:04 GMT 2025","Wed Oct 08 06:11:04 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Wed Oct 08 06:09:33 GMT 2025","Wed Oct 08 06:09:33 GMT 2025","138","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Wed Oct 08 06:09:50 GMT 2025","Wed Oct 08 06:09:52 GMT 2025","1535","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Oct 08 06:09:49 GMT 2025","Wed Oct 08 06:09:50 GMT 2025","1139","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Oct 08 06:10:47 GMT 2025","Wed Oct 08 06:10:50 GMT 2025","3169","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Wed Oct 08 06:10:14 GMT 2025","Wed Oct 08 06:10:15 GMT 2025","966","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Wed Oct 08 06:11:41 GMT 2025","Wed Oct 08 06:11:43 GMT 2025","1480","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Wed Oct 08 06:12:52 GMT 2025","Wed Oct 08 06:12:52 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Wed Oct 08 06:09:35 GMT 2025","Wed Oct 08 06:09:37 GMT 2025","2060","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Wed Oct 08 06:12:06 GMT 2025","Wed Oct 08 06:12:08 GMT 2025","1558","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Wed Oct 08 06:11:04 GMT 2025","Wed Oct 08 06:11:04 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Wed Oct 08 06:11:04 GMT 2025","Wed Oct 08 06:11:04 GMT 2025","45","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Wed Oct 08 06:10:20 GMT 2025","Wed Oct 08 06:10:22 GMT 2025","1983","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Wed Oct 08 06:09:57 GMT 2025","Wed Oct 08 06:09:59 GMT 2025","1938","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Oct 08 06:09:32 GMT 2025","Wed Oct 08 06:09:32 GMT 2025","140","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Wed Oct 08 06:11:39 GMT 2025","Wed Oct 08 06:11:40 GMT 2025","1417","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Wed Oct 08 06:20:22 GMT 2025","Wed Oct 08 06:20:22 GMT 2025","146","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Wed Oct 08 06:12:33 GMT 2025","Wed Oct 08 06:12:34 GMT 2025","1518","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Wed Oct 08 06:09:59 GMT 2025","Wed Oct 08 06:10:01 GMT 2025","1848","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Oct 08 06:12:11 GMT 2025","Wed Oct 08 06:12:12 GMT 2025","1443","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Wed Oct 08 06:09:41 GMT 2025","Wed Oct 08 06:09:41 GMT 2025","113","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Wed Oct 08 06:11:03 GMT 2025","Wed Oct 08 06:11:03 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Wed Oct 08 06:10:22 GMT 2025","Wed Oct 08 06:10:26 GMT 2025","3860","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Wed Oct 08 06:09:32 GMT 2025","Wed Oct 08 06:09:32 GMT 2025","144","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Wed Oct 08 06:09:31 GMT 2025","Wed Oct 08 06:09:32 GMT 2025","140","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Wed Oct 08 06:12:28 GMT 2025","Wed Oct 08 06:12:30 GMT 2025","1623","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Wed Oct 08 06:11:35 GMT 2025","Wed Oct 08 06:11:37 GMT 2025","1805","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Wed Oct 08 06:10:17 GMT 2025","Wed Oct 08 06:10:18 GMT 2025","789","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Wed Oct 08 06:09:33 GMT 2025","Wed Oct 08 06:09:33 GMT 2025","148","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Wed Oct 08 06:12:08 GMT 2025","Wed Oct 08 06:12:09 GMT 2025","1335","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Wed Oct 08 06:20:22 GMT 2025","Wed Oct 08 06:20:23 GMT 2025","141","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Wed Oct 08 06:09:45 GMT 2025","Wed Oct 08 06:09:47 GMT 2025","2124","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Oct 08 06:11:03 GMT 2025","Wed Oct 08 06:11:03 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Wed Oct 08 06:09:41 GMT 2025","Wed Oct 08 06:09:41 GMT 2025","86","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Wed Oct 08 06:09:31 GMT 2025","Wed Oct 08 06:09:31 GMT 2025","145","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Wed Oct 08 06:11:43 GMT 2025","Wed Oct 08 06:11:44 GMT 2025","1537","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Wed Oct 08 06:11:56 GMT 2025","Wed Oct 08 06:11:58 GMT 2025","1521","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Wed Oct 08 06:10:50 GMT 2025","Wed Oct 08 06:10:55 GMT 2025","4904","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Wed Oct 08 06:10:18 GMT 2025","Wed Oct 08 06:10:20 GMT 2025","1941","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Wed Oct 08 06:11:03 GMT 2025","Wed Oct 08 06:11:03 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Wed Oct 08 06:11:03 GMT 2025","Wed Oct 08 06:11:03 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Wed Oct 08 06:10:55 GMT 2025","Wed Oct 08 06:10:59 GMT 2025","3878","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Wed Oct 08 06:20:26 GMT 2025","Wed Oct 08 06:20:26 GMT 2025","277","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Wed Oct 08 06:09:31 GMT 2025","Wed Oct 08 06:09:31 GMT 2025","144","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Wed Oct 08 06:20:25 GMT 2025","Wed Oct 08 06:20:25 GMT 2025","143","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Wed Oct 08 06:11:04 GMT 2025","Wed Oct 08 06:11:04 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Wed Oct 08 06:11:04 GMT 2025","Wed Oct 08 06:11:04 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Wed Oct 08 06:11:48 GMT 2025","Wed Oct 08 06:11:49 GMT 2025","1423","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Wed Oct 08 06:11:49 GMT 2025","Wed Oct 08 06:11:50 GMT 2025","1328","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Wed Oct 08 06:09:29 GMT 2025","Wed Oct 08 06:09:30 GMT 2025","148","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Wed Oct 08 06:10:35 GMT 2025","Wed Oct 08 06:10:37 GMT 2025","2430","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Wed Oct 08 06:09:33 GMT 2025","Wed Oct 08 06:09:33 GMT 2025","101","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Wed Oct 08 06:11:03 GMT 2025","Wed Oct 08 06:11:03 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Wed Oct 08 06:12:37 GMT 2025","Wed Oct 08 06:12:39 GMT 2025","1514","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Wed Oct 08 06:10:31 GMT 2025","Wed Oct 08 06:10:35 GMT 2025","3568","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Wed Oct 08 06:09:55 GMT 2025","Wed Oct 08 06:09:57 GMT 2025","1624","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Wed Oct 08 06:09:32 GMT 2025","Wed Oct 08 06:09:33 GMT 2025","146","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Wed Oct 08 06:12:45 GMT 2025","Wed Oct 08 06:12:47 GMT 2025","1784","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Wed Oct 08 06:12:00 GMT 2025","Wed Oct 08 06:12:02 GMT 2025","1609","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Wed Oct 08 06:20:22 GMT 2025","Wed Oct 08 06:20:22 GMT 2025","261","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Wed Oct 08 06:11:33 GMT 2025","Wed Oct 08 06:11:34 GMT 2025","847","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Wed Oct 08 06:10:59 GMT 2025","Wed Oct 08 06:11:03 GMT 2025","3699","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Wed Oct 08 06:09:28 GMT 2025","Wed Oct 08 06:09:29 GMT 2025","727","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Wed Oct 08 06:12:31 GMT 2025","Wed Oct 08 06:12:33 GMT 2025","1588","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"skipped","Wed Oct 08 06:10:59 GMT 2025","Wed Oct 08 06:10:59 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Wed Oct 08 06:10:12 GMT 2025","Wed Oct 08 06:10:14 GMT 2025","2004","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Wed Oct 08 06:20:23 GMT 2025","Wed Oct 08 06:20:23 GMT 2025","143","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Wed Oct 08 06:20:26 GMT 2025","Wed Oct 08 06:20:26 GMT 2025","8","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Wed Oct 08 06:09:31 GMT 2025","Wed Oct 08 06:09:31 GMT 2025","139","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Wed Oct 08 06:11:03 GMT 2025","Wed Oct 08 06:11:04 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Wed Oct 08 06:09:43 GMT 2025","Wed Oct 08 06:09:45 GMT 2025","2123","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Oct 08 06:11:03 GMT 2025","Wed Oct 08 06:11:03 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Wed Oct 08 06:20:25 GMT 2025","Wed Oct 08 06:20:26 GMT 2025","62","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Wed Oct 08 06:12:47 GMT 2025","Wed Oct 08 06:12:48 GMT 2025","1455","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Wed Oct 08 06:20:23 GMT 2025","Wed Oct 08 06:20:23 GMT 2025","172","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Wed Oct 08 06:20:26 GMT 2025","Wed Oct 08 06:20:26 GMT 2025","11","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Wed Oct 08 06:11:03 GMT 2025","Wed Oct 08 06:11:03 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Wed Oct 08 06:20:23 GMT 2025","Wed Oct 08 06:20:23 GMT 2025","188","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Wed Oct 08 06:09:32 GMT 2025","Wed Oct 08 06:09:32 GMT 2025","143","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Wed Oct 08 06:10:26 GMT 2025","Wed Oct 08 06:10:28 GMT 2025","2301","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Wed Oct 08 06:12:39 GMT 2025","Wed Oct 08 06:12:42 GMT 2025","3034","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Wed Oct 08 06:11:34 GMT 2025","Wed Oct 08 06:11:35 GMT 2025","1574","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Wed Oct 08 06:12:30 GMT 2025","Wed Oct 08 06:12:31 GMT 2025","1332","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Wed Oct 08 06:09:52 GMT 2025","Wed Oct 08 06:09:54 GMT 2025","1926","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Oct 08 06:12:50 GMT 2025","Wed Oct 08 06:12:52 GMT 2025","2140","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Wed Oct 08 06:11:50 GMT 2025","Wed Oct 08 06:11:52 GMT 2025","1623","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Wed Oct 08 06:12:09 GMT 2025","Wed Oct 08 06:12:11 GMT 2025","1571","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Wed Oct 08 06:12:52 GMT 2025","Wed Oct 08 06:20:19 GMT 2025","446791","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Wed Oct 08 06:10:44 GMT 2025","Wed Oct 08 06:10:47 GMT 2025","3102","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Wed Oct 08 06:12:04 GMT 2025","Wed Oct 08 06:12:05 GMT 2025","1491","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Wed Oct 08 06:10:15 GMT 2025","Wed Oct 08 06:10:17 GMT 2025","2808","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Wed Oct 08 06:12:05 GMT 2025","Wed Oct 08 06:12:06 GMT 2025","1368","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Wed Oct 08 06:09:54 GMT 2025","Wed Oct 08 06:09:55 GMT 2025","1701","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Oct 08 06:10:42 GMT 2025","Wed Oct 08 06:10:44 GMT 2025","2467","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Wed Oct 08 06:12:48 GMT 2025","Wed Oct 08 06:12:50 GMT 2025","1365","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Wed Oct 08 06:09:47 GMT 2025","Wed Oct 08 06:09:49 GMT 2025","2043","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Oct 08 06:09:27 GMT 2025","Wed Oct 08 06:09:27 GMT 2025","713","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Wed Oct 08 06:11:04 GMT 2025","Wed Oct 08 06:11:04 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Wed Oct 08 06:11:04 GMT 2025","Wed Oct 08 06:11:04 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Wed Oct 08 06:20:23 GMT 2025","Wed Oct 08 06:20:23 GMT 2025","224","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Wed Oct 08 06:11:40 GMT 2025","Wed Oct 08 06:11:41 GMT 2025","1395","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Wed Oct 08 06:11:03 GMT 2025","Wed Oct 08 06:11:03 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
