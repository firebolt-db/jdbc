"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sat Oct 25 06:17:43 GMT 2025","Sat Oct 25 06:17:45 GMT 2025","1646","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Sat Oct 25 06:08:40 GMT 2025","Sat Oct 25 06:08:42 GMT 2025","1372","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Sat Oct 25 06:09:44 GMT 2025","Sat Oct 25 06:09:45 GMT 2025","861","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Sat Oct 25 06:17:42 GMT 2025","Sat Oct 25 06:17:42 GMT 2025","189","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Sat Oct 25 06:10:28 GMT 2025","Sat Oct 25 06:10:29 GMT 2025","994","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Sat Oct 25 06:10:26 GMT 2025","Sat Oct 25 06:10:27 GMT 2025","812","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Sat Oct 25 06:08:32 GMT 2025","Sat Oct 25 06:08:33 GMT 2025","1463","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Oct 25 06:08:09 GMT 2025","Sat Oct 25 06:08:09 GMT 2025","147","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Sat Oct 25 06:08:04 GMT 2025","Sat Oct 25 06:08:04 GMT 2025","659","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Sat Oct 25 06:08:07 GMT 2025","Sat Oct 25 06:08:08 GMT 2025","160","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Sat Oct 25 06:09:54 GMT 2025","Sat Oct 25 06:09:56 GMT 2025","1558","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Sat Oct 25 06:17:45 GMT 2025","Sat Oct 25 06:17:45 GMT 2025","144","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Sat Oct 25 06:08:51 GMT 2025","Sat Oct 25 06:08:52 GMT 2025","807","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Sat Oct 25 06:08:07 GMT 2025","Sat Oct 25 06:08:07 GMT 2025","159","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Sat Oct 25 06:08:58 GMT 2025","Sat Oct 25 06:09:00 GMT 2025","1685","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Sat Oct 25 06:08:14 GMT 2025","Sat Oct 25 06:08:16 GMT 2025","1799","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Sat Oct 25 06:17:42 GMT 2025","Sat Oct 25 06:17:42 GMT 2025","154","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Sat Oct 25 06:08:10 GMT 2025","Sat Oct 25 06:08:12 GMT 2025","1971","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Sat Oct 25 06:08:07 GMT 2025","Sat Oct 25 06:08:07 GMT 2025","151","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Sat Oct 25 06:08:16 GMT 2025","Sat Oct 25 06:08:17 GMT 2025","1670","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Sat Oct 25 06:08:49 GMT 2025","Sat Oct 25 06:08:51 GMT 2025","2008","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Sat Oct 25 06:08:38 GMT 2025","Sat Oct 25 06:08:40 GMT 2025","2016","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Sat Oct 25 06:08:09 GMT 2025","Sat Oct 25 06:08:09 GMT 2025","142","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Sat Oct 25 06:08:12 GMT 2025","Sat Oct 25 06:08:14 GMT 2025","1925","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Sat Oct 25 06:10:27 GMT 2025","Sat Oct 25 06:10:28 GMT 2025","1545","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Sat Oct 25 06:08:22 GMT 2025","Sat Oct 25 06:08:23 GMT 2025","1543","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Oct 25 06:08:09 GMT 2025","Sat Oct 25 06:08:09 GMT 2025","143","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Sat Oct 25 06:08:06 GMT 2025","Sat Oct 25 06:08:06 GMT 2025","600","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Sat Oct 25 06:09:45 GMT 2025","Sat Oct 25 06:09:46 GMT 2025","853","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Sat Oct 25 06:08:47 GMT 2025","Sat Oct 25 06:08:49 GMT 2025","2101","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Sat Oct 25 06:08:33 GMT 2025","Sat Oct 25 06:08:35 GMT 2025","1650","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Oct 25 06:10:21 GMT 2025","Sat Oct 25 06:10:22 GMT 2025","1328","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Sat Oct 25 06:08:09 GMT 2025","Sat Oct 25 06:08:09 GMT 2025","145","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Sat Oct 25 06:10:37 GMT 2025","Sat Oct 25 06:17:38 GMT 2025","421069","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Sat Oct 25 06:08:09 GMT 2025","Sat Oct 25 06:08:09 GMT 2025","141","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Sat Oct 25 06:09:59 GMT 2025","Sat Oct 25 06:10:00 GMT 2025","1030","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Sat Oct 25 06:10:29 GMT 2025","Sat Oct 25 06:10:31 GMT 2025","2250","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Sat Oct 25 06:10:35 GMT 2025","Sat Oct 25 06:10:35 GMT 2025","858","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Sat Oct 25 06:08:06 GMT 2025","Sat Oct 25 06:08:06 GMT 2025","152","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Sat Oct 25 06:08:27 GMT 2025","Sat Oct 25 06:08:29 GMT 2025","1925","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Oct 25 06:09:12 GMT 2025","Sat Oct 25 06:09:13 GMT 2025","1670","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Sat Oct 25 06:09:56 GMT 2025","Sat Oct 25 06:09:58 GMT 2025","1668","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","45","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Sat Oct 25 06:10:06 GMT 2025","Sat Oct 25 06:10:07 GMT 2025","779","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Sat Oct 25 06:08:56 GMT 2025","Sat Oct 25 06:08:58 GMT 2025","1728","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Sat Oct 25 06:10:12 GMT 2025","Sat Oct 25 06:10:21 GMT 2025","9224","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Sat Oct 25 06:08:04 GMT 2025","Sat Oct 25 06:08:05 GMT 2025","551","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Sat Oct 25 06:09:49 GMT 2025","Sat Oct 25 06:09:52 GMT 2025","2856","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Sat Oct 25 06:09:52 GMT 2025","Sat Oct 25 06:09:54 GMT 2025","1386","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Sat Oct 25 06:10:25 GMT 2025","Sat Oct 25 06:10:26 GMT 2025","793","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Sat Oct 25 06:09:07 GMT 2025","Sat Oct 25 06:09:09 GMT 2025","1835","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Sat Oct 25 06:08:17 GMT 2025","Sat Oct 25 06:08:17 GMT 2025","112","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Sat Oct 25 06:10:06 GMT 2025","Sat Oct 25 06:10:06 GMT 2025","783","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Sat Oct 25 06:08:08 GMT 2025","Sat Oct 25 06:08:08 GMT 2025","143","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Sat Oct 25 06:08:07 GMT 2025","Sat Oct 25 06:08:07 GMT 2025","170","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Sat Oct 25 06:17:45 GMT 2025","Sat Oct 25 06:17:45 GMT 2025","264","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"skipped","Sat Oct 25 06:09:15 GMT 2025","Sat Oct 25 06:09:15 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Sat Oct 25 06:09:58 GMT 2025","Sat Oct 25 06:09:59 GMT 2025","1056","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Sat Oct 25 06:08:05 GMT 2025","Sat Oct 25 06:08:06 GMT 2025","588","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Sat Oct 25 06:08:09 GMT 2025","Sat Oct 25 06:08:09 GMT 2025","144","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Sat Oct 25 06:08:54 GMT 2025","Sat Oct 25 06:08:56 GMT 2025","2491","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Sat Oct 25 06:08:01 GMT 2025","Sat Oct 25 06:08:04 GMT 2025","2075","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:41 GMT 2025","22087","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Sat Oct 25 06:08:08 GMT 2025","Sat Oct 25 06:08:08 GMT 2025","147","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Sat Oct 25 06:08:30 GMT 2025","Sat Oct 25 06:08:32 GMT 2025","1467","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Sat Oct 25 06:10:00 GMT 2025","Sat Oct 25 06:10:01 GMT 2025","1405","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Sat Oct 25 06:08:25 GMT 2025","Sat Oct 25 06:08:27 GMT 2025","1787","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Oct 25 06:09:13 GMT 2025","Sat Oct 25 06:09:15 GMT 2025","1997","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Sat Oct 25 06:08:19 GMT 2025","Sat Oct 25 06:08:21 GMT 2025","1419","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Oct 25 06:09:03 GMT 2025","Sat Oct 25 06:09:04 GMT 2025","1157","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Sat Oct 25 06:10:03 GMT 2025","Sat Oct 25 06:10:03 GMT 2025","801","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Sat Oct 25 06:10:07 GMT 2025","Sat Oct 25 06:10:09 GMT 2025","1314","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Sat Oct 25 06:17:43 GMT 2025","Sat Oct 25 06:17:43 GMT 2025","179","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Sat Oct 25 06:10:22 GMT 2025","Sat Oct 25 06:10:23 GMT 2025","1169","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Sat Oct 25 06:08:35 GMT 2025","Sat Oct 25 06:08:37 GMT 2025","1803","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Sat Oct 25 06:09:00 GMT 2025","Sat Oct 25 06:09:01 GMT 2025","1924","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Sat Oct 25 06:08:08 GMT 2025","Sat Oct 25 06:08:09 GMT 2025","156","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Sat Oct 25 06:08:17 GMT 2025","Sat Oct 25 06:08:18 GMT 2025","90","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","51","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Sat Oct 25 06:09:04 GMT 2025","Sat Oct 25 06:09:06 GMT 2025","1588","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Sat Oct 25 06:09:43 GMT 2025","Sat Oct 25 06:09:44 GMT 2025","1362","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Sat Oct 25 06:08:08 GMT 2025","Sat Oct 25 06:08:08 GMT 2025","144","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Sat Oct 25 06:09:48 GMT 2025","Sat Oct 25 06:09:48 GMT 2025","950","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Sat Oct 25 06:10:10 GMT 2025","Sat Oct 25 06:10:12 GMT 2025","1301","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Sat Oct 25 06:10:09 GMT 2025","Sat Oct 25 06:10:09 GMT 2025","779","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Sat Oct 25 06:10:33 GMT 2025","Sat Oct 25 06:10:34 GMT 2025","854","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Sat Oct 25 06:09:46 GMT 2025","Sat Oct 25 06:09:47 GMT 2025","805","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Sat Oct 25 06:10:35 GMT 2025","Sat Oct 25 06:10:37 GMT 2025","1619","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","45","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Sat Oct 25 06:17:45 GMT 2025","Sat Oct 25 06:17:45 GMT 2025","8","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Sat Oct 25 06:10:01 GMT 2025","Sat Oct 25 06:10:03 GMT 2025","1438","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Sat Oct 25 06:08:45 GMT 2025","Sat Oct 25 06:08:47 GMT 2025","1999","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","45","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Sat Oct 25 06:08:07 GMT 2025","Sat Oct 25 06:08:07 GMT 2025","193","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Sat Oct 25 06:09:01 GMT 2025","Sat Oct 25 06:09:03 GMT 2025","1438","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Sat Oct 25 06:09:54 GMT 2025","Sat Oct 25 06:09:54 GMT 2025","854","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Sat Oct 25 06:08:37 GMT 2025","Sat Oct 25 06:08:38 GMT 2025","1617","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Oct 25 06:10:31 GMT 2025","Sat Oct 25 06:10:33 GMT 2025","1333","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Sat Oct 25 06:09:47 GMT 2025","Sat Oct 25 06:09:48 GMT 2025","964","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Sat Oct 25 06:08:08 GMT 2025","Sat Oct 25 06:08:08 GMT 2025","147","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Sat Oct 25 06:09:10 GMT 2025","Sat Oct 25 06:09:12 GMT 2025","1274","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Sat Oct 25 06:17:41 GMT 2025","Sat Oct 25 06:17:42 GMT 2025","264","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Sat Oct 25 06:08:42 GMT 2025","Sat Oct 25 06:08:45 GMT 2025","3120","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Sat Oct 25 06:08:08 GMT 2025","Sat Oct 25 06:08:08 GMT 2025","143","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Sat Oct 25 06:08:18 GMT 2025","Sat Oct 25 06:08:19 GMT 2025","1497","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Oct 25 06:17:45 GMT 2025","Sat Oct 25 06:17:45 GMT 2025","11","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Sat Oct 25 06:09:09 GMT 2025","Sat Oct 25 06:09:10 GMT 2025","1121","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Sat Oct 25 06:08:08 GMT 2025","Sat Oct 25 06:08:08 GMT 2025","146","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Sat Oct 25 06:08:21 GMT 2025","Sat Oct 25 06:08:22 GMT 2025","1328","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Oct 25 06:10:03 GMT 2025","Sat Oct 25 06:10:05 GMT 2025","1305","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Sat Oct 25 06:09:06 GMT 2025","Sat Oct 25 06:09:07 GMT 2025","1776","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Sat Oct 25 06:17:42 GMT 2025","Sat Oct 25 06:17:42 GMT 2025","140","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Sat Oct 25 06:09:41 GMT 2025","Sat Oct 25 06:09:43 GMT 2025","2157","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Sat Oct 25 06:10:37 GMT 2025","Sat Oct 25 06:10:37 GMT 2025","0","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Sat Oct 25 06:08:10 GMT 2025","Sat Oct 25 06:08:10 GMT 2025","97","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Sat Oct 25 06:17:43 GMT 2025","Sat Oct 25 06:17:43 GMT 2025","190","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Sat Oct 25 06:17:42 GMT 2025","Sat Oct 25 06:17:43 GMT 2025","236","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","52","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Sat Oct 25 06:10:23 GMT 2025","Sat Oct 25 06:10:25 GMT 2025","1612","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Sat Oct 25 06:08:23 GMT 2025","Sat Oct 25 06:08:25 GMT 2025","1716","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Oct 25 06:10:05 GMT 2025","Sat Oct 25 06:10:06 GMT 2025","1005","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Sat Oct 25 06:17:42 GMT 2025","Sat Oct 25 06:17:42 GMT 2025","146","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Sat Oct 25 06:17:45 GMT 2025","Sat Oct 25 06:17:45 GMT 2025","45","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Sat Oct 25 06:08:52 GMT 2025","Sat Oct 25 06:08:54 GMT 2025","1702","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Sat Oct 25 06:09:49 GMT 2025","Sat Oct 25 06:09:49 GMT 2025","817","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Sat Oct 25 06:08:29 GMT 2025","Sat Oct 25 06:08:30 GMT 2025","1609","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Oct 25 06:10:09 GMT 2025","Sat Oct 25 06:10:10 GMT 2025","944","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Sat Oct 25 06:09:15 GMT 2025","Sat Oct 25 06:09:17 GMT 2025","2110","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Sat Oct 25 06:09:18 GMT 2025","Sat Oct 25 06:09:18 GMT 2025","45","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Sat Oct 25 06:08:09 GMT 2025","Sat Oct 25 06:08:10 GMT 2025","156","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Sat Oct 25 06:10:34 GMT 2025","Sat Oct 25 06:10:35 GMT 2025","1000","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
