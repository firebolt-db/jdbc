"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"broken","Tue Oct 21 05:53:27 GMT 2025","Tue Oct 21 05:53:27 GMT 2025","322","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"broken","Tue Oct 21 05:53:24 GMT 2025","Tue Oct 21 05:53:24 GMT 2025","92","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"broken","Tue Oct 21 05:53:23 GMT 2025","Tue Oct 21 05:53:23 GMT 2025","316","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"broken","Tue Oct 21 05:53:35 GMT 2025","Tue Oct 21 05:53:35 GMT 2025","328","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"broken","Tue Oct 21 05:53:18 GMT 2025","Tue Oct 21 05:53:19 GMT 2025","316","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"broken","Tue Oct 21 05:53:44 GMT 2025","Tue Oct 21 05:53:44 GMT 2025","156","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"broken","Tue Oct 21 05:53:18 GMT 2025","Tue Oct 21 05:53:18 GMT 2025","323","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Tue Oct 21 05:53:07 GMT 2025","Tue Oct 21 05:53:08 GMT 2025","1742","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"broken","Tue Oct 21 05:53:19 GMT 2025","Tue Oct 21 05:53:19 GMT 2025","317","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"broken","Tue Oct 21 05:53:43 GMT 2025","Tue Oct 21 05:53:43 GMT 2025","155","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"broken","Tue Oct 21 05:53:28 GMT 2025","Tue Oct 21 05:53:28 GMT 2025","319","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"broken","Tue Oct 21 05:53:31 GMT 2025","Tue Oct 21 05:53:31 GMT 2025","324","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"broken","Tue Oct 21 05:53:25 GMT 2025","Tue Oct 21 05:53:25 GMT 2025","94","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"broken","Tue Oct 21 05:53:12 GMT 2025","Tue Oct 21 05:53:12 GMT 2025","129","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"broken","Tue Oct 21 05:53:31 GMT 2025","Tue Oct 21 05:53:32 GMT 2025","318","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Tue Oct 21 05:53:09 GMT 2025","Tue Oct 21 05:53:09 GMT 2025","58","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"broken","Tue Oct 21 05:53:24 GMT 2025","Tue Oct 21 05:53:24 GMT 2025","90","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"broken","Tue Oct 21 05:53:29 GMT 2025","Tue Oct 21 05:53:29 GMT 2025","329","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"broken","Tue Oct 21 05:53:24 GMT 2025","Tue Oct 21 05:53:24 GMT 2025","91","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"broken","Tue Oct 21 05:53:21 GMT 2025","Tue Oct 21 05:53:22 GMT 2025","320","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"broken","Tue Oct 21 05:53:22 GMT 2025","Tue Oct 21 05:53:23 GMT 2025","319","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"broken","Tue Oct 21 05:53:25 GMT 2025","Tue Oct 21 05:53:25 GMT 2025","91","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"broken","Tue Oct 21 05:53:42 GMT 2025","Tue Oct 21 05:53:42 GMT 2025","159","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"broken","Tue Oct 21 05:53:24 GMT 2025","Tue Oct 21 05:53:24 GMT 2025","93","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"broken","Tue Oct 21 05:53:23 GMT 2025","Tue Oct 21 05:53:23 GMT 2025","331","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"broken","Tue Oct 21 05:53:12 GMT 2025","Tue Oct 21 05:53:12 GMT 2025","139","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"broken","Tue Oct 21 05:53:25 GMT 2025","Tue Oct 21 05:53:25 GMT 2025","92","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"broken","Tue Oct 21 05:53:17 GMT 2025","Tue Oct 21 05:53:18 GMT 2025","321","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"broken","Tue Oct 21 05:53:38 GMT 2025","Tue Oct 21 05:53:38 GMT 2025","319","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"broken","Tue Oct 21 05:53:15 GMT 2025","Tue Oct 21 05:53:15 GMT 2025","328","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"broken","Tue Oct 21 05:53:10 GMT 2025","Tue Oct 21 05:53:10 GMT 2025","209","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Tue Oct 21 05:53:44 GMT 2025","Tue Oct 21 05:53:44 GMT 2025","14","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"broken","Tue Oct 21 05:53:44 GMT 2025","Tue Oct 21 05:53:44 GMT 2025","155","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"broken","Tue Oct 21 05:53:34 GMT 2025","Tue Oct 21 05:53:34 GMT 2025","315","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"broken","Tue Oct 21 05:53:43 GMT 2025","Tue Oct 21 05:53:43 GMT 2025","156","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"broken","Tue Oct 21 05:53:25 GMT 2025","Tue Oct 21 05:53:26 GMT 2025","321","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Tue Oct 21 05:53:44 GMT 2025","Tue Oct 21 05:53:44 GMT 2025","17","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"broken","Tue Oct 21 05:53:26 GMT 2025","Tue Oct 21 05:53:26 GMT 2025","320","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"broken","Tue Oct 21 05:53:16 GMT 2025","Tue Oct 21 05:53:17 GMT 2025","333","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"broken","Tue Oct 21 05:53:10 GMT 2025","Tue Oct 21 05:53:10 GMT 2025","340","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"broken","Tue Oct 21 05:53:36 GMT 2025","Tue Oct 21 05:53:36 GMT 2025","319","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"broken","Tue Oct 21 05:53:24 GMT 2025","Tue Oct 21 05:53:24 GMT 2025","92","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Tue Oct 21 05:53:44 GMT 2025","Tue Oct 21 05:53:44 GMT 2025","327","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"broken","Tue Oct 21 05:53:25 GMT 2025","Tue Oct 21 05:53:25 GMT 2025","92","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"broken","Tue Oct 21 05:53:25 GMT 2025","Tue Oct 21 05:53:25 GMT 2025","91","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"broken","Tue Oct 21 05:53:15 GMT 2025","Tue Oct 21 05:53:15 GMT 2025","332","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"broken","Tue Oct 21 05:53:22 GMT 2025","Tue Oct 21 05:53:22 GMT 2025","317","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"broken","Tue Oct 21 05:53:18 GMT 2025","Tue Oct 21 05:53:18 GMT 2025","318","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"broken","Tue Oct 21 05:53:43 GMT 2025","Tue Oct 21 05:53:43 GMT 2025","165","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"broken","Tue Oct 21 05:53:27 GMT 2025","Tue Oct 21 05:53:27 GMT 2025","314","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"broken","Tue Oct 21 05:53:26 GMT 2025","Tue Oct 21 05:53:26 GMT 2025","330","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"broken","Tue Oct 21 05:53:25 GMT 2025","Tue Oct 21 05:53:25 GMT 2025","90","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"broken","Tue Oct 21 05:53:09 GMT 2025","Tue Oct 21 05:53:10 GMT 2025","157","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"broken","Tue Oct 21 05:53:20 GMT 2025","Tue Oct 21 05:53:20 GMT 2025","320","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"broken","Tue Oct 21 05:53:12 GMT 2025","Tue Oct 21 05:53:12 GMT 2025","331","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"broken","Tue Oct 21 05:53:34 GMT 2025","Tue Oct 21 05:53:34 GMT 2025","318","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"broken","Tue Oct 21 05:53:37 GMT 2025","Tue Oct 21 05:53:37 GMT 2025","314","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"broken","Tue Oct 21 05:53:11 GMT 2025","Tue Oct 21 05:53:11 GMT 2025","340","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"broken","Tue Oct 21 05:53:19 GMT 2025","Tue Oct 21 05:53:19 GMT 2025","327","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"broken","Tue Oct 21 05:53:39 GMT 2025","Tue Oct 21 05:53:39 GMT 2025","172","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"broken","Tue Oct 21 05:53:38 GMT 2025","Tue Oct 21 05:53:39 GMT 2025","347","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"broken","Tue Oct 21 05:53:32 GMT 2025","Tue Oct 21 05:53:33 GMT 2025","315","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"broken","Tue Oct 21 05:53:21 GMT 2025","Tue Oct 21 05:53:21 GMT 2025","324","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"broken","Tue Oct 21 05:53:16 GMT 2025","Tue Oct 21 05:53:16 GMT 2025","326","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"broken","Tue Oct 21 05:53:14 GMT 2025","Tue Oct 21 05:53:14 GMT 2025","343","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"broken","Tue Oct 21 05:53:30 GMT 2025","Tue Oct 21 05:53:30 GMT 2025","320","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"broken","Tue Oct 21 05:53:29 GMT 2025","Tue Oct 21 05:53:30 GMT 2025","357","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"broken","Tue Oct 21 05:53:34 GMT 2025","Tue Oct 21 05:53:35 GMT 2025","314","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"broken","Tue Oct 21 05:53:27 GMT 2025","Tue Oct 21 05:53:28 GMT 2025","318","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"broken","Tue Oct 21 05:53:37 GMT 2025","Tue Oct 21 05:53:38 GMT 2025","332","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Tue Oct 21 05:53:09 GMT 2025","Tue Oct 21 05:53:09 GMT 2025","476","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"skipped","Tue Oct 21 05:53:23 GMT 2025","Tue Oct 21 05:53:23 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"broken","Tue Oct 21 05:53:21 GMT 2025","Tue Oct 21 05:53:21 GMT 2025","330","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"broken","Tue Oct 21 05:53:28 GMT 2025","Tue Oct 21 05:53:28 GMT 2025","324","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"broken","Tue Oct 21 05:53:10 GMT 2025","Tue Oct 21 05:53:10 GMT 2025","0","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","","DatabaseMetaDataTest",""
"broken","Tue Oct 21 05:53:29 GMT 2025","Tue Oct 21 05:53:29 GMT 2025","315","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"broken","Tue Oct 21 05:53:24 GMT 2025","Tue Oct 21 05:53:25 GMT 2025","92","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"broken","Tue Oct 21 05:53:14 GMT 2025","Tue Oct 21 05:53:14 GMT 2025","334","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"broken","Tue Oct 21 05:53:33 GMT 2025","Tue Oct 21 05:53:33 GMT 2025","313","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"broken","Tue Oct 21 05:53:24 GMT 2025","Tue Oct 21 05:53:24 GMT 2025","91","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"broken","Tue Oct 21 05:53:36 GMT 2025","Tue Oct 21 05:53:37 GMT 2025","312","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"broken","Tue Oct 21 05:53:30 GMT 2025","Tue Oct 21 05:53:30 GMT 2025","316","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Tue Oct 21 05:53:09 GMT 2025","Tue Oct 21 05:53:09 GMT 2025","208","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"broken","Tue Oct 21 05:53:22 GMT 2025","Tue Oct 21 05:53:22 GMT 2025","328","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Tue Oct 21 05:53:39 GMT 2025","Tue Oct 21 05:53:39 GMT 2025","2","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"broken","Tue Oct 21 05:53:24 GMT 2025","Tue Oct 21 05:53:24 GMT 2025","91","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"broken","Tue Oct 21 05:53:16 GMT 2025","Tue Oct 21 05:53:16 GMT 2025","338","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"broken","Tue Oct 21 05:53:43 GMT 2025","Tue Oct 21 05:53:43 GMT 2025","159","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"broken","Tue Oct 21 05:53:33 GMT 2025","Tue Oct 21 05:53:34 GMT 2025","311","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"broken","Tue Oct 21 05:53:20 GMT 2025","Tue Oct 21 05:53:21 GMT 2025","330","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"broken","Tue Oct 21 05:53:33 GMT 2025","Tue Oct 21 05:53:33 GMT 2025","313","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"broken","Tue Oct 21 05:53:25 GMT 2025","Tue Oct 21 05:53:25 GMT 2025","90","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"broken","Tue Oct 21 05:53:14 GMT 2025","Tue Oct 21 05:53:15 GMT 2025","328","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"broken","Tue Oct 21 05:53:19 GMT 2025","Tue Oct 21 05:53:20 GMT 2025","316","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"broken","Tue Oct 21 05:53:24 GMT 2025","Tue Oct 21 05:53:24 GMT 2025","102","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"broken","Tue Oct 21 05:53:26 GMT 2025","Tue Oct 21 05:53:27 GMT 2025","323","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"broken","Tue Oct 21 05:53:13 GMT 2025","Tue Oct 21 05:53:14 GMT 2025","338","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"broken","Tue Oct 21 05:53:13 GMT 2025","Tue Oct 21 05:53:13 GMT 2025","338","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"broken","Tue Oct 21 05:53:28 GMT 2025","Tue Oct 21 05:53:29 GMT 2025","316","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"broken","Tue Oct 21 05:53:42 GMT 2025","Tue Oct 21 05:53:43 GMT 2025","156","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"broken","Tue Oct 21 05:53:43 GMT 2025","Tue Oct 21 05:53:44 GMT 2025","161","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"broken","Tue Oct 21 05:53:43 GMT 2025","Tue Oct 21 05:53:43 GMT 2025","157","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"broken","Tue Oct 21 05:53:25 GMT 2025","Tue Oct 21 05:53:25 GMT 2025","99","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"broken","Tue Oct 21 05:53:30 GMT 2025","Tue Oct 21 05:53:30 GMT 2025","330","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"broken","Tue Oct 21 05:53:32 GMT 2025","Tue Oct 21 05:53:32 GMT 2025","325","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"broken","Tue Oct 21 05:53:13 GMT 2025","Tue Oct 21 05:53:13 GMT 2025","335","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"broken","Tue Oct 21 05:53:17 GMT 2025","Tue Oct 21 05:53:17 GMT 2025","330","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"broken","Tue Oct 21 05:53:35 GMT 2025","Tue Oct 21 05:53:36 GMT 2025","312","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"broken","Tue Oct 21 05:53:20 GMT 2025","Tue Oct 21 05:53:20 GMT 2025","325","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"broken","Tue Oct 21 05:53:20 GMT 2025","Tue Oct 21 05:53:20 GMT 2025","319","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"broken","Tue Oct 21 05:53:36 GMT 2025","Tue Oct 21 05:53:36 GMT 2025","326","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"broken","Tue Oct 21 05:53:24 GMT 2025","Tue Oct 21 05:53:24 GMT 2025","91","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"broken","Tue Oct 21 05:53:32 GMT 2025","Tue Oct 21 05:53:32 GMT 2025","314","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"broken","Tue Oct 21 05:53:38 GMT 2025","Tue Oct 21 05:53:38 GMT 2025","318","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Tue Oct 21 05:53:44 GMT 2025","Tue Oct 21 05:53:44 GMT 2025","53","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"broken","Tue Oct 21 05:53:11 GMT 2025","Tue Oct 21 05:53:12 GMT 2025","333","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"broken","Tue Oct 21 05:53:17 GMT 2025","Tue Oct 21 05:53:17 GMT 2025","322","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"broken","Tue Oct 21 05:53:37 GMT 2025","Tue Oct 21 05:53:37 GMT 2025","316","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"broken","Tue Oct 21 05:53:12 GMT 2025","Tue Oct 21 05:53:12 GMT 2025","344","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"broken","Tue Oct 21 05:53:31 GMT 2025","Tue Oct 21 05:53:31 GMT 2025","310","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"broken","Tue Oct 21 05:53:35 GMT 2025","Tue Oct 21 05:53:35 GMT 2025","312","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"broken","Tue Oct 21 05:53:15 GMT 2025","Tue Oct 21 05:53:16 GMT 2025","341","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"broken","Tue Oct 21 05:53:30 GMT 2025","Tue Oct 21 05:53:31 GMT 2025","313","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"broken","Tue Oct 21 05:53:10 GMT 2025","Tue Oct 21 05:53:11 GMT 2025","351","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
