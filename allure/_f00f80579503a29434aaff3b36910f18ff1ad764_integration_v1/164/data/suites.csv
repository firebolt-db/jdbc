"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Wed Aug 27 06:08:43 GMT 2025","Wed Aug 27 06:08:43 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Wed Aug 27 06:10:04 GMT 2025","Wed Aug 27 06:10:08 GMT 2025","3455","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Wed Aug 27 06:09:39 GMT 2025","Wed Aug 27 06:09:42 GMT 2025","2891","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Wed Aug 27 06:19:28 GMT 2025","Wed Aug 27 06:19:28 GMT 2025","235","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Wed Aug 27 06:09:58 GMT 2025","Wed Aug 27 06:10:01 GMT 2025","2951","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Wed Aug 27 06:10:08 GMT 2025","Wed Aug 27 06:10:11 GMT 2025","2767","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Wed Aug 27 06:11:12 GMT 2025","Wed Aug 27 06:11:14 GMT 2025","1937","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Wed Aug 27 06:09:28 GMT 2025","Wed Aug 27 06:09:29 GMT 2025","715","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Wed Aug 27 06:11:20 GMT 2025","Wed Aug 27 06:11:22 GMT 2025","1688","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Wed Aug 27 06:08:54 GMT 2025","Wed Aug 27 06:08:54 GMT 2025","99","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Wed Aug 27 06:09:14 GMT 2025","Wed Aug 27 06:09:16 GMT 2025","1961","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 27 06:08:44 GMT 2025","Wed Aug 27 06:08:44 GMT 2025","117","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Wed Aug 27 06:08:54 GMT 2025","Wed Aug 27 06:08:56 GMT 2025","2335","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 27 06:08:45 GMT 2025","Wed Aug 27 06:08:47 GMT 2025","2148","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Wed Aug 27 06:10:14 GMT 2025","Wed Aug 27 06:10:14 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Wed Aug 27 06:08:40 GMT 2025","Wed Aug 27 06:08:41 GMT 2025","836","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Wed Aug 27 06:11:56 GMT 2025","Wed Aug 27 06:12:01 GMT 2025","5025","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","38","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Wed Aug 27 06:09:10 GMT 2025","Wed Aug 27 06:09:11 GMT 2025","704","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Wed Aug 27 06:19:28 GMT 2025","Wed Aug 27 06:19:28 GMT 2025","10","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","39","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Wed Aug 27 06:08:49 GMT 2025","Wed Aug 27 06:08:52 GMT 2025","2096","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Wed Aug 27 06:09:16 GMT 2025","Wed Aug 27 06:09:18 GMT 2025","2154","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 27 06:08:56 GMT 2025","Wed Aug 27 06:08:58 GMT 2025","1914","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 27 06:11:08 GMT 2025","Wed Aug 27 06:11:10 GMT 2025","2200","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Wed Aug 27 06:08:43 GMT 2025","Wed Aug 27 06:08:43 GMT 2025","136","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Wed Aug 27 06:11:12 GMT 2025","Wed Aug 27 06:11:12 GMT 2025","655","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Wed Aug 27 06:09:55 GMT 2025","Wed Aug 27 06:09:58 GMT 2025","2471","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Wed Aug 27 06:11:01 GMT 2025","Wed Aug 27 06:11:03 GMT 2025","2009","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Wed Aug 27 06:08:43 GMT 2025","Wed Aug 27 06:08:43 GMT 2025","122","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Wed Aug 27 06:12:01 GMT 2025","Wed Aug 27 06:12:05 GMT 2025","4204","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Wed Aug 27 06:11:03 GMT 2025","Wed Aug 27 06:11:06 GMT 2025","2379","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Wed Aug 27 06:08:42 GMT 2025","Wed Aug 27 06:08:43 GMT 2025","172","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Wed Aug 27 06:10:01 GMT 2025","Wed Aug 27 06:10:03 GMT 2025","2553","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Wed Aug 27 06:10:42 GMT 2025","Wed Aug 27 06:10:43 GMT 2025","1962","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Wed Aug 27 06:11:44 GMT 2025","Wed Aug 27 06:11:45 GMT 2025","1795","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Wed Aug 27 06:09:53 GMT 2025","Wed Aug 27 06:09:55 GMT 2025","2631","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Wed Aug 27 06:08:44 GMT 2025","Wed Aug 27 06:08:44 GMT 2025","116","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Wed Aug 27 06:08:44 GMT 2025","Wed Aug 27 06:08:44 GMT 2025","115","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Wed Aug 27 06:12:09 GMT 2025","Wed Aug 27 06:12:11 GMT 2025","1993","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Wed Aug 27 06:11:16 GMT 2025","Wed Aug 27 06:11:17 GMT 2025","692","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Wed Aug 27 06:09:08 GMT 2025","Wed Aug 27 06:09:10 GMT 2025","2049","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","39","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Wed Aug 27 06:10:39 GMT 2025","Wed Aug 27 06:10:42 GMT 2025","2272","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Wed Aug 27 06:12:11 GMT 2025","Wed Aug 27 06:12:13 GMT 2025","2196","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Wed Aug 27 06:09:04 GMT 2025","Wed Aug 27 06:09:06 GMT 2025","1754","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 27 06:10:14 GMT 2025","Wed Aug 27 06:10:14 GMT 2025","39","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Wed Aug 27 06:19:25 GMT 2025","Wed Aug 27 06:19:25 GMT 2025","122","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Wed Aug 27 06:10:34 GMT 2025","Wed Aug 27 06:10:38 GMT 2025","4034","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Wed Aug 27 06:11:49 GMT 2025","Wed Aug 27 06:11:50 GMT 2025","687","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Wed Aug 27 06:11:45 GMT 2025","Wed Aug 27 06:11:49 GMT 2025","3984","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Wed Aug 27 06:08:43 GMT 2025","Wed Aug 27 06:08:43 GMT 2025","157","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Wed Aug 27 06:09:02 GMT 2025","Wed Aug 27 06:09:04 GMT 2025","1850","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","45","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Wed Aug 27 06:09:22 GMT 2025","Wed Aug 27 06:09:26 GMT 2025","4414","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Wed Aug 27 06:08:41 GMT 2025","Wed Aug 27 06:08:42 GMT 2025","755","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Wed Aug 27 06:08:58 GMT 2025","Wed Aug 27 06:09:00 GMT 2025","2052","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"skipped","Wed Aug 27 06:10:11 GMT 2025","Wed Aug 27 06:10:11 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Wed Aug 27 06:09:06 GMT 2025","Wed Aug 27 06:09:08 GMT 2025","2240","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 27 06:10:38 GMT 2025","Wed Aug 27 06:10:39 GMT 2025","767","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Wed Aug 27 06:08:43 GMT 2025","Wed Aug 27 06:08:43 GMT 2025","123","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Wed Aug 27 06:08:37 GMT 2025","Wed Aug 27 06:08:39 GMT 2025","1800","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Wed Aug 27 06:11:17 GMT 2025","Wed Aug 27 06:11:20 GMT 2025","3272","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Wed Aug 27 06:12:13 GMT 2025","Wed Aug 27 06:12:13 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Wed Aug 27 06:11:06 GMT 2025","Wed Aug 27 06:11:08 GMT 2025","1801","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Wed Aug 27 06:11:14 GMT 2025","Wed Aug 27 06:11:16 GMT 2025","2195","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Wed Aug 27 06:19:28 GMT 2025","Wed Aug 27 06:19:28 GMT 2025","45","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Wed Aug 27 06:08:45 GMT 2025","Wed Aug 27 06:08:45 GMT 2025","82","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Wed Aug 27 06:08:43 GMT 2025","Wed Aug 27 06:08:44 GMT 2025","121","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Wed Aug 27 06:08:44 GMT 2025","Wed Aug 27 06:08:44 GMT 2025","114","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Wed Aug 27 06:10:11 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","2115","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Wed Aug 27 06:12:13 GMT 2025","Wed Aug 27 06:19:17 GMT 2025","423836","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Wed Aug 27 06:08:40 GMT 2025","Wed Aug 27 06:08:40 GMT 2025","435","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Wed Aug 27 06:08:47 GMT 2025","Wed Aug 27 06:08:49 GMT 2025","2114","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Wed Aug 27 06:09:50 GMT 2025","Wed Aug 27 06:09:53 GMT 2025","2750","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Wed Aug 27 06:08:43 GMT 2025","Wed Aug 27 06:08:43 GMT 2025","123","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Wed Aug 27 06:10:14 GMT 2025","Wed Aug 27 06:10:31 GMT 2025","17222","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Wed Aug 27 06:09:20 GMT 2025","Wed Aug 27 06:09:22 GMT 2025","1508","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Wed Aug 27 06:12:07 GMT 2025","Wed Aug 27 06:12:09 GMT 2025","1918","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Wed Aug 27 06:08:44 GMT 2025","Wed Aug 27 06:08:44 GMT 2025","122","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Wed Aug 27 06:19:26 GMT 2025","Wed Aug 27 06:19:26 GMT 2025","157","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Wed Aug 27 06:19:26 GMT 2025","Wed Aug 27 06:19:28 GMT 2025","1618","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Wed Aug 27 06:19:28 GMT 2025","Wed Aug 27 06:19:28 GMT 2025","123","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Wed Aug 27 06:11:52 GMT 2025","Wed Aug 27 06:11:54 GMT 2025","1840","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Wed Aug 27 06:10:55 GMT 2025","Wed Aug 27 06:10:57 GMT 2025","1735","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Wed Aug 27 06:19:25 GMT 2025","Wed Aug 27 06:19:25 GMT 2025","121","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Wed Aug 27 06:11:50 GMT 2025","Wed Aug 27 06:11:52 GMT 2025","1814","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Wed Aug 27 06:09:45 GMT 2025","Wed Aug 27 06:09:48 GMT 2025","2936","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","39","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Wed Aug 27 06:09:11 GMT 2025","Wed Aug 27 06:09:12 GMT 2025","1343","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 27 06:08:44 GMT 2025","Wed Aug 27 06:08:45 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Wed Aug 27 06:09:36 GMT 2025","Wed Aug 27 06:09:39 GMT 2025","2593","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Wed Aug 27 06:09:48 GMT 2025","Wed Aug 27 06:09:50 GMT 2025","2295","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Wed Aug 27 06:10:14 GMT 2025","Wed Aug 27 06:10:14 GMT 2025","39","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Wed Aug 27 06:09:26 GMT 2025","Wed Aug 27 06:09:28 GMT 2025","1817","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Wed Aug 27 06:11:23 GMT 2025","Wed Aug 27 06:11:41 GMT 2025","17860","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Wed Aug 27 06:19:25 GMT 2025","Wed Aug 27 06:19:26 GMT 2025","165","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Wed Aug 27 06:19:26 GMT 2025","Wed Aug 27 06:19:26 GMT 2025","201","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Wed Aug 27 06:19:25 GMT 2025","Wed Aug 27 06:19:25 GMT 2025","126","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Wed Aug 27 06:10:57 GMT 2025","Wed Aug 27 06:10:59 GMT 2025","2259","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Wed Aug 27 06:19:28 GMT 2025","Wed Aug 27 06:19:28 GMT 2025","6","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Wed Aug 27 06:11:54 GMT 2025","Wed Aug 27 06:11:56 GMT 2025","2395","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Wed Aug 27 06:10:45 GMT 2025","Wed Aug 27 06:10:47 GMT 2025","2044","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Wed Aug 27 06:12:05 GMT 2025","Wed Aug 27 06:12:07 GMT 2025","1746","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Wed Aug 27 06:08:45 GMT 2025","Wed Aug 27 06:08:45 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Wed Aug 27 06:08:52 GMT 2025","Wed Aug 27 06:08:54 GMT 2025","2048","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","38","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Wed Aug 27 06:19:21 GMT 2025","Wed Aug 27 06:19:25 GMT 2025","4518","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Wed Aug 27 06:09:34 GMT 2025","Wed Aug 27 06:09:36 GMT 2025","2577","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Wed Aug 27 06:11:22 GMT 2025","Wed Aug 27 06:11:23 GMT 2025","1365","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Wed Aug 27 06:10:03 GMT 2025","Wed Aug 27 06:10:04 GMT 2025","1117","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Wed Aug 27 06:09:12 GMT 2025","Wed Aug 27 06:09:14 GMT 2025","2115","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 27 06:08:39 GMT 2025","Wed Aug 27 06:08:40 GMT 2025","583","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Wed Aug 27 06:19:26 GMT 2025","Wed Aug 27 06:19:26 GMT 2025","154","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Wed Aug 27 06:11:41 GMT 2025","Wed Aug 27 06:11:44 GMT 2025","2404","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Wed Aug 27 06:11:10 GMT 2025","Wed Aug 27 06:11:12 GMT 2025","1814","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Wed Aug 27 06:10:33 GMT 2025","Wed Aug 27 06:10:34 GMT 2025","1669","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","39","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Wed Aug 27 06:08:45 GMT 2025","Wed Aug 27 06:08:45 GMT 2025","120","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Wed Aug 27 06:09:42 GMT 2025","Wed Aug 27 06:09:45 GMT 2025","2865","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Wed Aug 27 06:10:43 GMT 2025","Wed Aug 27 06:10:45 GMT 2025","1969","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Wed Aug 27 06:09:00 GMT 2025","Wed Aug 27 06:09:02 GMT 2025","1829","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 27 06:10:31 GMT 2025","Wed Aug 27 06:10:33 GMT 2025","1855","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Wed Aug 27 06:08:44 GMT 2025","Wed Aug 27 06:08:44 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Wed Aug 27 06:08:54 GMT 2025","Wed Aug 27 06:08:54 GMT 2025","79","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Wed Aug 27 06:09:29 GMT 2025","Wed Aug 27 06:09:32 GMT 2025","3035","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Wed Aug 27 06:08:44 GMT 2025","Wed Aug 27 06:08:44 GMT 2025","116","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Wed Aug 27 06:08:44 GMT 2025","Wed Aug 27 06:08:44 GMT 2025","116","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Wed Aug 27 06:10:13 GMT 2025","Wed Aug 27 06:10:13 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Wed Aug 27 06:08:42 GMT 2025","Wed Aug 27 06:08:42 GMT 2025","131","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Wed Aug 27 06:10:14 GMT 2025","Wed Aug 27 06:10:14 GMT 2025","38","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Wed Aug 27 06:09:32 GMT 2025","Wed Aug 27 06:09:34 GMT 2025","2055","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Wed Aug 27 06:10:47 GMT 2025","Wed Aug 27 06:10:51 GMT 2025","3830","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Wed Aug 27 06:10:51 GMT 2025","Wed Aug 27 06:10:53 GMT 2025","1775","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Wed Aug 27 06:09:18 GMT 2025","Wed Aug 27 06:09:20 GMT 2025","2098","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Wed Aug 27 06:10:59 GMT 2025","Wed Aug 27 06:11:01 GMT 2025","2201","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Wed Aug 27 06:10:53 GMT 2025","Wed Aug 27 06:10:55 GMT 2025","2042","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
