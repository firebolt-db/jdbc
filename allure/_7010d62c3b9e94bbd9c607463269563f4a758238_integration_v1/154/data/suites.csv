"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Mon Aug 18 06:16:07 GMT 2025","Mon Aug 18 06:16:12 GMT 2025","4723","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Mon Aug 18 06:15:22 GMT 2025","Mon Aug 18 06:15:26 GMT 2025","3737","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","73","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Mon Aug 18 06:15:26 GMT 2025","Mon Aug 18 06:15:26 GMT 2025","71","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Mon Aug 18 06:14:58 GMT 2025","Mon Aug 18 06:15:01 GMT 2025","2842","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Mon Aug 18 06:13:47 GMT 2025","Mon Aug 18 06:13:50 GMT 2025","2871","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 18 06:13:27 GMT 2025","Mon Aug 18 06:13:27 GMT 2025","225","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Mon Aug 18 06:13:27 GMT 2025","Mon Aug 18 06:13:27 GMT 2025","222","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Mon Aug 18 06:14:32 GMT 2025","Mon Aug 18 06:14:33 GMT 2025","1358","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","73","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Mon Aug 18 06:14:38 GMT 2025","Mon Aug 18 06:14:39 GMT 2025","1599","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Mon Aug 18 06:16:27 GMT 2025","Mon Aug 18 06:16:30 GMT 2025","2513","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Mon Aug 18 06:17:15 GMT 2025","Mon Aug 18 06:17:19 GMT 2025","3873","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Mon Aug 18 06:13:27 GMT 2025","Mon Aug 18 06:13:27 GMT 2025","224","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Mon Aug 18 06:17:44 GMT 2025","Mon Aug 18 06:17:47 GMT 2025","2764","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Mon Aug 18 06:13:56 GMT 2025","Mon Aug 18 06:13:59 GMT 2025","2766","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"skipped","Mon Aug 18 06:15:22 GMT 2025","Mon Aug 18 06:15:22 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Mon Aug 18 06:15:12 GMT 2025","Mon Aug 18 06:15:15 GMT 2025","2845","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Mon Aug 18 06:16:36 GMT 2025","Mon Aug 18 06:16:39 GMT 2025","2962","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","73","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Mon Aug 18 06:25:01 GMT 2025","Mon Aug 18 06:25:01 GMT 2025","236","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Mon Aug 18 06:13:28 GMT 2025","Mon Aug 18 06:13:28 GMT 2025","221","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Mon Aug 18 06:14:01 GMT 2025","Mon Aug 18 06:14:04 GMT 2025","2704","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 18 06:17:30 GMT 2025","Mon Aug 18 06:17:32 GMT 2025","2630","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Mon Aug 18 06:13:26 GMT 2025","Mon Aug 18 06:13:26 GMT 2025","238","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Mon Aug 18 06:13:53 GMT 2025","Mon Aug 18 06:13:56 GMT 2025","2834","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 18 06:14:55 GMT 2025","Mon Aug 18 06:14:58 GMT 2025","2881","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Mon Aug 18 06:13:24 GMT 2025","Mon Aug 18 06:13:25 GMT 2025","632","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Mon Aug 18 06:17:24 GMT 2025","Mon Aug 18 06:17:27 GMT 2025","2816","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Mon Aug 18 06:13:29 GMT 2025","Mon Aug 18 06:13:29 GMT 2025","259","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Mon Aug 18 06:25:01 GMT 2025","Mon Aug 18 06:25:01 GMT 2025","11","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Mon Aug 18 06:24:56 GMT 2025","Mon Aug 18 06:24:57 GMT 2025","391","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Mon Aug 18 06:13:28 GMT 2025","Mon Aug 18 06:13:28 GMT 2025","224","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","72","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Mon Aug 18 06:25:00 GMT 2025","Mon Aug 18 06:25:01 GMT 2025","225","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Mon Aug 18 06:13:26 GMT 2025","Mon Aug 18 06:13:26 GMT 2025","231","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Mon Aug 18 06:13:28 GMT 2025","Mon Aug 18 06:13:28 GMT 2025","225","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Mon Aug 18 06:16:39 GMT 2025","Mon Aug 18 06:16:42 GMT 2025","2827","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Mon Aug 18 06:13:59 GMT 2025","Mon Aug 18 06:14:01 GMT 2025","2834","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 18 06:14:42 GMT 2025","Mon Aug 18 06:14:45 GMT 2025","3016","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Mon Aug 18 06:16:30 GMT 2025","Mon Aug 18 06:16:31 GMT 2025","1419","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Mon Aug 18 06:24:58 GMT 2025","Mon Aug 18 06:24:59 GMT 2025","289","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","74","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:51 GMT 2025","23393","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Mon Aug 18 06:14:48 GMT 2025","Mon Aug 18 06:14:51 GMT 2025","2727","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Mon Aug 18 06:24:58 GMT 2025","Mon Aug 18 06:24:58 GMT 2025","299","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Mon Aug 18 06:15:03 GMT 2025","Mon Aug 18 06:15:06 GMT 2025","2788","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Mon Aug 18 06:15:56 GMT 2025","Mon Aug 18 06:15:58 GMT 2025","2786","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Mon Aug 18 06:13:22 GMT 2025","Mon Aug 18 06:13:23 GMT 2025","694","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Mon Aug 18 06:16:48 GMT 2025","Mon Aug 18 06:16:51 GMT 2025","2836","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Mon Aug 18 06:13:25 GMT 2025","Mon Aug 18 06:13:25 GMT 2025","226","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Mon Aug 18 06:13:29 GMT 2025","Mon Aug 18 06:13:29 GMT 2025","222","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Mon Aug 18 06:13:26 GMT 2025","Mon Aug 18 06:13:27 GMT 2025","222","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Mon Aug 18 06:16:42 GMT 2025","Mon Aug 18 06:16:44 GMT 2025","1567","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Mon Aug 18 06:14:21 GMT 2025","Mon Aug 18 06:14:24 GMT 2025","2742","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Mon Aug 18 06:14:08 GMT 2025","Mon Aug 18 06:14:11 GMT 2025","2960","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 18 06:17:51 GMT 2025","Mon Aug 18 06:17:51 GMT 2025","0","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Mon Aug 18 06:16:12 GMT 2025","Mon Aug 18 06:16:14 GMT 2025","2624","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Mon Aug 18 06:13:42 GMT 2025","Mon Aug 18 06:13:44 GMT 2025","2623","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 18 06:17:21 GMT 2025","Mon Aug 18 06:17:22 GMT 2025","1315","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Mon Aug 18 06:14:14 GMT 2025","Mon Aug 18 06:14:17 GMT 2025","2799","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 18 06:24:57 GMT 2025","Mon Aug 18 06:24:57 GMT 2025","235","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Mon Aug 18 06:16:45 GMT 2025","Mon Aug 18 06:16:48 GMT 2025","2685","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Mon Aug 18 06:16:18 GMT 2025","Mon Aug 18 06:16:20 GMT 2025","1341","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Mon Aug 18 06:24:58 GMT 2025","Mon Aug 18 06:24:58 GMT 2025","374","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Mon Aug 18 06:16:51 GMT 2025","Mon Aug 18 06:17:15 GMT 2025","24567","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Mon Aug 18 06:14:45 GMT 2025","Mon Aug 18 06:14:48 GMT 2025","2712","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Mon Aug 18 06:13:50 GMT 2025","Mon Aug 18 06:13:53 GMT 2025","2748","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 18 06:17:42 GMT 2025","Mon Aug 18 06:17:44 GMT 2025","1552","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Mon Aug 18 06:15:01 GMT 2025","Mon Aug 18 06:15:03 GMT 2025","2835","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Mon Aug 18 06:15:19 GMT 2025","Mon Aug 18 06:15:22 GMT 2025","3147","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Mon Aug 18 06:17:35 GMT 2025","Mon Aug 18 06:17:40 GMT 2025","4204","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Mon Aug 18 06:16:16 GMT 2025","Mon Aug 18 06:16:18 GMT 2025","2667","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","73","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Mon Aug 18 06:13:23 GMT 2025","Mon Aug 18 06:13:24 GMT 2025","884","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Mon Aug 18 06:24:57 GMT 2025","Mon Aug 18 06:24:57 GMT 2025","237","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Mon Aug 18 06:16:31 GMT 2025","Mon Aug 18 06:16:34 GMT 2025","2823","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Mon Aug 18 06:13:27 GMT 2025","Mon Aug 18 06:13:27 GMT 2025","229","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","72","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Mon Aug 18 06:13:44 GMT 2025","Mon Aug 18 06:13:47 GMT 2025","2879","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 18 06:13:28 GMT 2025","Mon Aug 18 06:13:29 GMT 2025","221","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Mon Aug 18 06:15:58 GMT 2025","Mon Aug 18 06:16:00 GMT 2025","1366","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Mon Aug 18 06:17:19 GMT 2025","Mon Aug 18 06:17:21 GMT 2025","1890","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Mon Aug 18 06:24:58 GMT 2025","Mon Aug 18 06:24:58 GMT 2025","291","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","72","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Mon Aug 18 06:16:00 GMT 2025","Mon Aug 18 06:16:03 GMT 2025","2802","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Mon Aug 18 06:15:26 GMT 2025","Mon Aug 18 06:15:26 GMT 2025","74","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Mon Aug 18 06:13:30 GMT 2025","Mon Aug 18 06:13:33 GMT 2025","2757","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Mon Aug 18 06:17:51 GMT 2025","Mon Aug 18 06:24:53 GMT 2025","422004","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Mon Aug 18 06:13:28 GMT 2025","Mon Aug 18 06:13:28 GMT 2025","232","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Mon Aug 18 06:14:29 GMT 2025","Mon Aug 18 06:14:32 GMT 2025","3271","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Mon Aug 18 06:15:26 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","72","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Mon Aug 18 06:14:04 GMT 2025","Mon Aug 18 06:14:06 GMT 2025","1481","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Mon Aug 18 06:17:32 GMT 2025","Mon Aug 18 06:17:35 GMT 2025","2990","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Mon Aug 18 06:25:01 GMT 2025","Mon Aug 18 06:25:01 GMT 2025","7","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Mon Aug 18 06:16:20 GMT 2025","Mon Aug 18 06:16:23 GMT 2025","2950","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Mon Aug 18 06:15:26 GMT 2025","Mon Aug 18 06:15:26 GMT 2025","74","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","73","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Mon Aug 18 06:14:33 GMT 2025","Mon Aug 18 06:14:38 GMT 2025","4349","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Mon Aug 18 06:24:59 GMT 2025","Mon Aug 18 06:25:00 GMT 2025","1684","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","73","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Mon Aug 18 06:16:04 GMT 2025","Mon Aug 18 06:16:07 GMT 2025","2640","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Mon Aug 18 06:16:03 GMT 2025","Mon Aug 18 06:16:04 GMT 2025","1613","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Mon Aug 18 06:13:26 GMT 2025","Mon Aug 18 06:13:26 GMT 2025","224","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Mon Aug 18 06:13:25 GMT 2025","Mon Aug 18 06:13:26 GMT 2025","225","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Mon Aug 18 06:15:26 GMT 2025","Mon Aug 18 06:15:26 GMT 2025","73","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Mon Aug 18 06:15:51 GMT 2025","Mon Aug 18 06:15:53 GMT 2025","2104","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Mon Aug 18 06:15:54 GMT 2025","Mon Aug 18 06:15:56 GMT 2025","1322","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Mon Aug 18 06:13:22 GMT 2025","Mon Aug 18 06:13:22 GMT 2025","810","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Mon Aug 18 06:17:40 GMT 2025","Mon Aug 18 06:17:42 GMT 2025","2720","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Mon Aug 18 06:13:19 GMT 2025","Mon Aug 18 06:13:22 GMT 2025","2218","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Mon Aug 18 06:16:14 GMT 2025","Mon Aug 18 06:16:16 GMT 2025","1360","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Mon Aug 18 06:13:42 GMT 2025","Mon Aug 18 06:13:42 GMT 2025","142","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","72","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Mon Aug 18 06:15:15 GMT 2025","Mon Aug 18 06:15:19 GMT 2025","4237","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Mon Aug 18 06:15:26 GMT 2025","Mon Aug 18 06:15:26 GMT 2025","72","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Mon Aug 18 06:25:01 GMT 2025","Mon Aug 18 06:25:01 GMT 2025","64","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Mon Aug 18 06:24:57 GMT 2025","Mon Aug 18 06:24:58 GMT 2025","241","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Mon Aug 18 06:13:29 GMT 2025","Mon Aug 18 06:13:29 GMT 2025","221","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Mon Aug 18 06:15:53 GMT 2025","Mon Aug 18 06:15:54 GMT 2025","1434","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Mon Aug 18 06:17:22 GMT 2025","Mon Aug 18 06:17:24 GMT 2025","1471","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Mon Aug 18 06:14:17 GMT 2025","Mon Aug 18 06:14:21 GMT 2025","4394","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Mon Aug 18 06:15:27 GMT 2025","Mon Aug 18 06:15:27 GMT 2025","73","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Mon Aug 18 06:13:39 GMT 2025","Mon Aug 18 06:13:42 GMT 2025","2737","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Mon Aug 18 06:13:33 GMT 2025","Mon Aug 18 06:13:36 GMT 2025","2873","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Mon Aug 18 06:15:09 GMT 2025","Mon Aug 18 06:15:12 GMT 2025","2891","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Mon Aug 18 06:17:27 GMT 2025","Mon Aug 18 06:17:30 GMT 2025","3214","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Mon Aug 18 06:14:06 GMT 2025","Mon Aug 18 06:14:08 GMT 2025","2893","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 18 06:14:51 GMT 2025","Mon Aug 18 06:14:55 GMT 2025","3979","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Mon Aug 18 06:14:11 GMT 2025","Mon Aug 18 06:14:14 GMT 2025","2837","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 18 06:16:44 GMT 2025","Mon Aug 18 06:16:45 GMT 2025","1393","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Mon Aug 18 06:15:06 GMT 2025","Mon Aug 18 06:15:09 GMT 2025","2760","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Mon Aug 18 06:13:36 GMT 2025","Mon Aug 18 06:13:39 GMT 2025","2851","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Mon Aug 18 06:13:30 GMT 2025","Mon Aug 18 06:13:30 GMT 2025","229","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Mon Aug 18 06:16:34 GMT 2025","Mon Aug 18 06:16:36 GMT 2025","2453","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Mon Aug 18 06:13:30 GMT 2025","Mon Aug 18 06:13:30 GMT 2025","150","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Mon Aug 18 06:14:39 GMT 2025","Mon Aug 18 06:14:42 GMT 2025","3073","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Mon Aug 18 06:17:47 GMT 2025","Mon Aug 18 06:17:51 GMT 2025","4176","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Mon Aug 18 06:13:29 GMT 2025","Mon Aug 18 06:13:30 GMT 2025","221","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Mon Aug 18 06:16:23 GMT 2025","Mon Aug 18 06:16:26 GMT 2025","3086","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Mon Aug 18 06:16:26 GMT 2025","Mon Aug 18 06:16:27 GMT 2025","1489","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Mon Aug 18 06:14:24 GMT 2025","Mon Aug 18 06:14:29 GMT 2025","4451","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Mon Aug 18 06:13:42 GMT 2025","Mon Aug 18 06:13:42 GMT 2025","163","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
