"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","123","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Mon Aug 25 11:09:43 GMT 2025","Mon Aug 25 11:09:43 GMT 2025","180","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Mon Aug 25 10:59:34 GMT 2025","Mon Aug 25 10:59:38 GMT 2025","3543","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Mon Aug 25 11:01:07 GMT 2025","Mon Aug 25 11:01:09 GMT 2025","2272","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","122","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","83","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","39","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Mon Aug 25 11:00:34 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","126","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Mon Aug 25 11:01:04 GMT 2025","Mon Aug 25 11:01:05 GMT 2025","1470","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Mon Aug 25 10:58:50 GMT 2025","Mon Aug 25 10:58:50 GMT 2025","132","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Mon Aug 25 11:01:14 GMT 2025","Mon Aug 25 11:01:19 GMT 2025","5741","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Mon Aug 25 11:01:38 GMT 2025","Mon Aug 25 11:01:39 GMT 2025","1387","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Mon Aug 25 11:01:33 GMT 2025","Mon Aug 25 11:01:35 GMT 2025","2304","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Mon Aug 25 11:00:10 GMT 2025","Mon Aug 25 11:00:12 GMT 2025","2331","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Mon Aug 25 11:01:26 GMT 2025","Mon Aug 25 11:01:28 GMT 2025","2172","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Mon Aug 25 11:02:29 GMT 2025","Mon Aug 25 11:02:30 GMT 2025","781","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Mon Aug 25 10:59:13 GMT 2025","Mon Aug 25 10:59:15 GMT 2025","2478","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 11:00:12 GMT 2025","Mon Aug 25 11:00:15 GMT 2025","2538","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Mon Aug 25 11:09:43 GMT 2025","Mon Aug 25 11:09:45 GMT 2025","1630","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Mon Aug 25 11:01:40 GMT 2025","Mon Aug 25 11:01:42 GMT 2025","2349","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Mon Aug 25 11:00:27 GMT 2025","Mon Aug 25 11:00:31 GMT 2025","3296","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Mon Aug 25 10:59:38 GMT 2025","Mon Aug 25 10:59:42 GMT 2025","3472","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Mon Aug 25 11:02:37 GMT 2025","Mon Aug 25 11:09:38 GMT 2025","421253","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Mon Aug 25 11:00:17 GMT 2025","Mon Aug 25 11:00:19 GMT 2025","2433","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Mon Aug 25 11:01:39 GMT 2025","Mon Aug 25 11:01:40 GMT 2025","1203","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Mon Aug 25 10:59:03 GMT 2025","Mon Aug 25 10:59:05 GMT 2025","2155","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 11:09:45 GMT 2025","Mon Aug 25 11:09:45 GMT 2025","136","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Mon Aug 25 11:09:42 GMT 2025","Mon Aug 25 11:09:42 GMT 2025","140","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","39","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Mon Aug 25 11:09:43 GMT 2025","Mon Aug 25 11:09:43 GMT 2025","231","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Mon Aug 25 10:59:27 GMT 2025","Mon Aug 25 10:59:30 GMT 2025","2526","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 10:59:00 GMT 2025","Mon Aug 25 10:59:03 GMT 2025","2488","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Mon Aug 25 11:00:34 GMT 2025","Mon Aug 25 11:00:34 GMT 2025","67","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Mon Aug 25 10:58:50 GMT 2025","Mon Aug 25 10:58:50 GMT 2025","126","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Mon Aug 25 11:00:31 GMT 2025","Mon Aug 25 11:00:34 GMT 2025","3603","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Mon Aug 25 10:59:03 GMT 2025","Mon Aug 25 10:59:03 GMT 2025","80","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Mon Aug 25 11:09:42 GMT 2025","Mon Aug 25 11:09:42 GMT 2025","144","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Mon Aug 25 10:58:56 GMT 2025","Mon Aug 25 10:58:58 GMT 2025","1811","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Mon Aug 25 11:02:32 GMT 2025","Mon Aug 25 11:02:37 GMT 2025","4538","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Mon Aug 25 10:59:32 GMT 2025","Mon Aug 25 10:59:34 GMT 2025","2430","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 11:02:14 GMT 2025","Mon Aug 25 11:02:16 GMT 2025","1475","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Mon Aug 25 11:09:45 GMT 2025","Mon Aug 25 11:09:46 GMT 2025","293","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Mon Aug 25 11:09:45 GMT 2025","Mon Aug 25 11:09:45 GMT 2025","62","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Mon Aug 25 11:00:24 GMT 2025","Mon Aug 25 11:00:27 GMT 2025","2975","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Mon Aug 25 10:59:56 GMT 2025","Mon Aug 25 10:59:59 GMT 2025","2359","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Mon Aug 25 11:02:08 GMT 2025","Mon Aug 25 11:02:10 GMT 2025","1716","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","44","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Mon Aug 25 10:58:49 GMT 2025","Mon Aug 25 10:58:49 GMT 2025","130","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Mon Aug 25 10:58:50 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","122","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Mon Aug 25 11:09:46 GMT 2025","Mon Aug 25 11:09:46 GMT 2025","12","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Mon Aug 25 10:58:50 GMT 2025","Mon Aug 25 10:58:50 GMT 2025","128","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Mon Aug 25 10:59:10 GMT 2025","Mon Aug 25 10:59:13 GMT 2025","2535","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Mon Aug 25 11:02:30 GMT 2025","Mon Aug 25 11:02:32 GMT 2025","2313","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Mon Aug 25 11:00:19 GMT 2025","Mon Aug 25 11:00:22 GMT 2025","2709","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Mon Aug 25 11:02:18 GMT 2025","Mon Aug 25 11:02:20 GMT 2025","1203","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Mon Aug 25 11:01:11 GMT 2025","Mon Aug 25 11:01:14 GMT 2025","2277","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Mon Aug 25 10:58:58 GMT 2025","Mon Aug 25 10:59:00 GMT 2025","2694","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Mon Aug 25 11:00:57 GMT 2025","Mon Aug 25 11:01:00 GMT 2025","3418","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","120","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Mon Aug 25 11:09:42 GMT 2025","Mon Aug 25 11:09:42 GMT 2025","138","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Mon Aug 25 11:02:16 GMT 2025","Mon Aug 25 11:02:18 GMT 2025","2560","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Mon Aug 25 10:59:59 GMT 2025","Mon Aug 25 11:00:02 GMT 2025","2673","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Mon Aug 25 11:00:22 GMT 2025","Mon Aug 25 11:00:24 GMT 2025","2285","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Mon Aug 25 11:01:00 GMT 2025","Mon Aug 25 11:01:02 GMT 2025","1498","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Mon Aug 25 10:58:48 GMT 2025","Mon Aug 25 10:58:48 GMT 2025","551","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","128","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Mon Aug 25 11:01:31 GMT 2025","Mon Aug 25 11:01:32 GMT 2025","1251","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Mon Aug 25 11:01:45 GMT 2025","Mon Aug 25 11:01:46 GMT 2025","1161","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Mon Aug 25 11:01:22 GMT 2025","Mon Aug 25 11:01:24 GMT 2025","2461","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:57 GMT 2025","21664","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Mon Aug 25 10:59:20 GMT 2025","Mon Aug 25 10:59:22 GMT 2025","2273","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 10:59:42 GMT 2025","Mon Aug 25 10:59:46 GMT 2025","4323","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","39","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Mon Aug 25 11:01:32 GMT 2025","Mon Aug 25 11:01:33 GMT 2025","1107","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Mon Aug 25 11:01:24 GMT 2025","Mon Aug 25 11:01:26 GMT 2025","1740","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"skipped","Mon Aug 25 11:00:31 GMT 2025","Mon Aug 25 11:00:31 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Mon Aug 25 11:02:20 GMT 2025","Mon Aug 25 11:02:23 GMT 2025","3753","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Mon Aug 25 10:59:48 GMT 2025","Mon Aug 25 10:59:49 GMT 2025","1264","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Mon Aug 25 11:09:45 GMT 2025","Mon Aug 25 11:09:45 GMT 2025","6","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Mon Aug 25 11:09:43 GMT 2025","Mon Aug 25 11:09:43 GMT 2025","172","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","129","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Mon Aug 25 10:59:07 GMT 2025","Mon Aug 25 10:59:10 GMT 2025","2583","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 11:01:52 GMT 2025","Mon Aug 25 11:02:08 GMT 2025","15753","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Mon Aug 25 11:00:07 GMT 2025","Mon Aug 25 11:00:10 GMT 2025","2508","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Mon Aug 25 10:59:17 GMT 2025","Mon Aug 25 10:59:20 GMT 2025","2439","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 11:00:15 GMT 2025","Mon Aug 25 11:00:17 GMT 2025","2336","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Mon Aug 25 11:00:02 GMT 2025","Mon Aug 25 11:00:04 GMT 2025","2238","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Mon Aug 25 10:58:48 GMT 2025","Mon Aug 25 10:58:49 GMT 2025","564","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Mon Aug 25 10:59:53 GMT 2025","Mon Aug 25 10:59:54 GMT 2025","1218","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Mon Aug 25 11:01:42 GMT 2025","Mon Aug 25 11:01:45 GMT 2025","2501","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Mon Aug 25 11:01:05 GMT 2025","Mon Aug 25 11:01:07 GMT 2025","1130","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:56 GMT 2025","3384","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Mon Aug 25 11:00:04 GMT 2025","Mon Aug 25 11:00:07 GMT 2025","3452","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Mon Aug 25 10:58:45 GMT 2025","Mon Aug 25 10:58:47 GMT 2025","1740","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Mon Aug 25 10:58:50 GMT 2025","Mon Aug 25 10:58:50 GMT 2025","143","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Mon Aug 25 11:02:10 GMT 2025","Mon Aug 25 11:02:11 GMT 2025","1192","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Mon Aug 25 10:59:05 GMT 2025","Mon Aug 25 10:59:07 GMT 2025","2340","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 11:01:02 GMT 2025","Mon Aug 25 11:01:04 GMT 2025","2150","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Mon Aug 25 11:09:42 GMT 2025","Mon Aug 25 11:09:43 GMT 2025","200","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Mon Aug 25 10:58:47 GMT 2025","Mon Aug 25 10:58:48 GMT 2025","597","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","124","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Mon Aug 25 11:01:28 GMT 2025","Mon Aug 25 11:01:31 GMT 2025","2672","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Mon Aug 25 11:01:19 GMT 2025","Mon Aug 25 11:01:22 GMT 2025","2193","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Mon Aug 25 11:01:46 GMT 2025","Mon Aug 25 11:01:49 GMT 2025","2502","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Mon Aug 25 10:59:49 GMT 2025","Mon Aug 25 10:59:53 GMT 2025","3396","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Mon Aug 25 10:58:50 GMT 2025","Mon Aug 25 10:58:50 GMT 2025","129","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Mon Aug 25 11:01:49 GMT 2025","Mon Aug 25 11:01:50 GMT 2025","1412","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Mon Aug 25 11:01:09 GMT 2025","Mon Aug 25 11:01:11 GMT 2025","2566","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Mon Aug 25 11:01:50 GMT 2025","Mon Aug 25 11:01:52 GMT 2025","2188","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Mon Aug 25 10:59:54 GMT 2025","Mon Aug 25 10:59:56 GMT 2025","2500","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Mon Aug 25 10:59:24 GMT 2025","Mon Aug 25 10:59:27 GMT 2025","3498","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 10:58:47 GMT 2025","Mon Aug 25 10:58:47 GMT 2025","616","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Mon Aug 25 11:02:12 GMT 2025","Mon Aug 25 11:02:14 GMT 2025","2378","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","130","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","121","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Mon Aug 25 10:59:30 GMT 2025","Mon Aug 25 10:59:32 GMT 2025","2376","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 10:59:22 GMT 2025","Mon Aug 25 10:59:24 GMT 2025","1534","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Mon Aug 25 10:59:03 GMT 2025","Mon Aug 25 10:59:03 GMT 2025","106","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Mon Aug 25 10:58:50 GMT 2025","Mon Aug 25 10:58:50 GMT 2025","175","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Mon Aug 25 10:59:46 GMT 2025","Mon Aug 25 10:59:48 GMT 2025","2238","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","127","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Mon Aug 25 11:09:42 GMT 2025","Mon Aug 25 11:09:42 GMT 2025","247","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Mon Aug 25 11:02:23 GMT 2025","Mon Aug 25 11:02:27 GMT 2025","3672","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Mon Aug 25 10:59:15 GMT 2025","Mon Aug 25 10:59:17 GMT 2025","2302","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","118","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Mon Aug 25 11:02:11 GMT 2025","Mon Aug 25 11:02:12 GMT 2025","1102","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Mon Aug 25 11:02:37 GMT 2025","Mon Aug 25 11:02:37 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Mon Aug 25 11:02:27 GMT 2025","Mon Aug 25 11:02:29 GMT 2025","2238","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Mon Aug 25 11:01:35 GMT 2025","Mon Aug 25 11:01:38 GMT 2025","2203","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Mon Aug 25 11:00:35 GMT 2025","Mon Aug 25 11:00:35 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
