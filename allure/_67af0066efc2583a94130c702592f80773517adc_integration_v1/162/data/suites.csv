"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Mon Aug 25 11:09:16 GMT 2025","Mon Aug 25 11:09:16 GMT 2025","59","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Mon Aug 25 10:59:01 GMT 2025","Mon Aug 25 10:59:01 GMT 2025","57","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Mon Aug 25 11:02:10 GMT 2025","Mon Aug 25 11:02:11 GMT 2025","1231","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Mon Aug 25 11:02:27 GMT 2025","Mon Aug 25 11:09:12 GMT 2025","405492","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Mon Aug 25 11:09:16 GMT 2025","Mon Aug 25 11:09:16 GMT 2025","74","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","61","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","54","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Mon Aug 25 11:09:18 GMT 2025","Mon Aug 25 11:09:18 GMT 2025","7","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Mon Aug 25 10:59:11 GMT 2025","Mon Aug 25 10:59:14 GMT 2025","2524","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 11:01:05 GMT 2025","Mon Aug 25 11:01:06 GMT 2025","1185","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Mon Aug 25 10:59:52 GMT 2025","Mon Aug 25 10:59:53 GMT 2025","1125","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","19","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Mon Aug 25 11:01:14 GMT 2025","Mon Aug 25 11:01:16 GMT 2025","2286","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Mon Aug 25 11:09:18 GMT 2025","Mon Aug 25 11:09:18 GMT 2025","63","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","52","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Mon Aug 25 10:59:14 GMT 2025","Mon Aug 25 10:59:16 GMT 2025","2483","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","15","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Mon Aug 25 11:01:42 GMT 2025","Mon Aug 25 11:02:01 GMT 2025","18553","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Mon Aug 25 11:02:05 GMT 2025","Mon Aug 25 11:02:06 GMT 2025","1680","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Mon Aug 25 10:59:48 GMT 2025","Mon Aug 25 10:59:52 GMT 2025","3536","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Mon Aug 25 11:01:26 GMT 2025","Mon Aug 25 11:01:28 GMT 2025","2244","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Mon Aug 25 11:02:02 GMT 2025","Mon Aug 25 11:02:05 GMT 2025","2413","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Mon Aug 25 10:59:21 GMT 2025","Mon Aug 25 10:59:22 GMT 2025","1173","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Mon Aug 25 10:59:16 GMT 2025","Mon Aug 25 10:59:19 GMT 2025","2389","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 10:59:31 GMT 2025","Mon Aug 25 10:59:33 GMT 2025","2461","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","54","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Mon Aug 25 11:01:33 GMT 2025","Mon Aug 25 11:01:35 GMT 2025","2218","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Mon Aug 25 11:01:06 GMT 2025","Mon Aug 25 11:01:11 GMT 2025","4785","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Mon Aug 25 10:59:28 GMT 2025","Mon Aug 25 10:59:31 GMT 2025","2327","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 10:59:47 GMT 2025","Mon Aug 25 10:59:48 GMT 2025","1239","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Mon Aug 25 10:58:53 GMT 2025","Mon Aug 25 10:58:56 GMT 2025","2938","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Mon Aug 25 11:00:02 GMT 2025","Mon Aug 25 11:00:06 GMT 2025","3315","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"skipped","Mon Aug 25 11:00:29 GMT 2025","Mon Aug 25 11:00:29 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Mon Aug 25 10:58:48 GMT 2025","Mon Aug 25 10:58:49 GMT 2025","508","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","56","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Mon Aug 25 11:00:06 GMT 2025","Mon Aug 25 11:00:08 GMT 2025","2513","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","32","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Mon Aug 25 11:01:35 GMT 2025","Mon Aug 25 11:01:37 GMT 2025","2302","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Mon Aug 25 11:02:23 GMT 2025","Mon Aug 25 11:02:27 GMT 2025","3830","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Mon Aug 25 11:00:11 GMT 2025","Mon Aug 25 11:00:13 GMT 2025","2428","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Mon Aug 25 11:02:06 GMT 2025","Mon Aug 25 11:02:07 GMT 2025","445","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Mon Aug 25 10:58:49 GMT 2025","Mon Aug 25 10:58:50 GMT 2025","535","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Mon Aug 25 11:01:21 GMT 2025","Mon Aug 25 11:01:24 GMT 2025","2407","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Mon Aug 25 11:09:16 GMT 2025","Mon Aug 25 11:09:16 GMT 2025","170","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Mon Aug 25 11:00:23 GMT 2025","Mon Aug 25 11:00:27 GMT 2025","3700","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","17","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Mon Aug 25 11:01:14 GMT 2025","Mon Aug 25 11:01:14 GMT 2025","531","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","50","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Mon Aug 25 10:59:57 GMT 2025","Mon Aug 25 11:00:00 GMT 2025","2590","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Mon Aug 25 11:01:24 GMT 2025","Mon Aug 25 11:01:26 GMT 2025","1239","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Mon Aug 25 10:58:46 GMT 2025","Mon Aug 25 10:58:48 GMT 2025","1776","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Mon Aug 25 11:01:28 GMT 2025","Mon Aug 25 11:01:30 GMT 2025","2589","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","15","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","19","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Mon Aug 25 11:00:55 GMT 2025","Mon Aug 25 11:00:56 GMT 2025","605","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Mon Aug 25 11:02:18 GMT 2025","Mon Aug 25 11:02:19 GMT 2025","1081","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","59","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","52","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Mon Aug 25 11:09:18 GMT 2025","Mon Aug 25 11:09:19 GMT 2025","245","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Mon Aug 25 11:01:39 GMT 2025","Mon Aug 25 11:01:40 GMT 2025","1344","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Mon Aug 25 10:59:39 GMT 2025","Mon Aug 25 10:59:43 GMT 2025","4135","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Mon Aug 25 11:09:18 GMT 2025","Mon Aug 25 11:09:18 GMT 2025","51","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Mon Aug 25 11:01:40 GMT 2025","Mon Aug 25 11:01:42 GMT 2025","2245","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Mon Aug 25 10:59:01 GMT 2025","Mon Aug 25 10:59:02 GMT 2025","39","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Mon Aug 25 11:02:11 GMT 2025","Mon Aug 25 11:02:14 GMT 2025","3733","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Mon Aug 25 11:00:21 GMT 2025","Mon Aug 25 11:00:23 GMT 2025","2356","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Mon Aug 25 11:01:19 GMT 2025","Mon Aug 25 11:01:21 GMT 2025","2470","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Mon Aug 25 11:09:16 GMT 2025","Mon Aug 25 11:09:16 GMT 2025","80","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","17","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","52","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Mon Aug 25 11:01:32 GMT 2025","Mon Aug 25 11:01:33 GMT 2025","1186","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Mon Aug 25 10:59:02 GMT 2025","Mon Aug 25 10:59:04 GMT 2025","2314","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","47","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Mon Aug 25 11:02:19 GMT 2025","Mon Aug 25 11:02:21 GMT 2025","1281","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Mon Aug 25 11:09:16 GMT 2025","Mon Aug 25 11:09:16 GMT 2025","77","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Mon Aug 25 11:00:00 GMT 2025","Mon Aug 25 11:00:02 GMT 2025","2413","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","52","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Mon Aug 25 11:00:08 GMT 2025","Mon Aug 25 11:00:11 GMT 2025","2461","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","51","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","17","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Mon Aug 25 11:00:18 GMT 2025","Mon Aug 25 11:00:21 GMT 2025","2800","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Mon Aug 25 11:00:16 GMT 2025","Mon Aug 25 11:00:18 GMT 2025","2316","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:55 GMT 2025","22914","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Mon Aug 25 10:59:55 GMT 2025","Mon Aug 25 10:59:57 GMT 2025","2353","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Mon Aug 25 10:59:25 GMT 2025","Mon Aug 25 10:59:28 GMT 2025","3657","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 11:00:57 GMT 2025","Mon Aug 25 11:01:00 GMT 2025","2645","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Mon Aug 25 10:58:59 GMT 2025","Mon Aug 25 10:59:01 GMT 2025","2507","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","54","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Mon Aug 25 10:59:53 GMT 2025","Mon Aug 25 10:59:55 GMT 2025","2452","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Mon Aug 25 11:00:56 GMT 2025","Mon Aug 25 11:00:57 GMT 2025","1114","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Mon Aug 25 10:58:56 GMT 2025","Mon Aug 25 10:58:59 GMT 2025","2824","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","17","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","54","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Mon Aug 25 11:01:24 GMT 2025","Mon Aug 25 11:01:24 GMT 2025","511","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Mon Aug 25 11:02:01 GMT 2025","Mon Aug 25 11:02:02 GMT 2025","1262","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Mon Aug 25 10:59:06 GMT 2025","Mon Aug 25 10:59:09 GMT 2025","2355","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 11:00:29 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","2982","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Mon Aug 25 11:01:16 GMT 2025","Mon Aug 25 11:01:19 GMT 2025","2627","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Mon Aug 25 11:00:27 GMT 2025","Mon Aug 25 11:00:29 GMT 2025","1995","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","72","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Mon Aug 25 11:09:16 GMT 2025","Mon Aug 25 11:09:16 GMT 2025","71","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Mon Aug 25 11:09:16 GMT 2025","Mon Aug 25 11:09:16 GMT 2025","94","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Mon Aug 25 10:59:04 GMT 2025","Mon Aug 25 10:59:06 GMT 2025","2334","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 10:59:33 GMT 2025","Mon Aug 25 10:59:37 GMT 2025","3615","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Mon Aug 25 11:09:16 GMT 2025","Mon Aug 25 11:09:18 GMT 2025","1548","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Mon Aug 25 10:59:22 GMT 2025","Mon Aug 25 10:59:25 GMT 2025","2693","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 10:59:43 GMT 2025","Mon Aug 25 10:59:47 GMT 2025","3598","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","56","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Mon Aug 25 11:02:07 GMT 2025","Mon Aug 25 11:02:08 GMT 2025","1234","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Mon Aug 25 11:01:11 GMT 2025","Mon Aug 25 11:01:14 GMT 2025","2336","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","17","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","56","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Mon Aug 25 11:00:13 GMT 2025","Mon Aug 25 11:00:16 GMT 2025","2488","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Mon Aug 25 11:02:27 GMT 2025","Mon Aug 25 11:02:27 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Mon Aug 25 10:59:19 GMT 2025","Mon Aug 25 10:59:21 GMT 2025","2306","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 11:09:16 GMT 2025","Mon Aug 25 11:09:16 GMT 2025","60","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Mon Aug 25 11:01:37 GMT 2025","Mon Aug 25 11:01:39 GMT 2025","1323","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","20","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Mon Aug 25 11:02:14 GMT 2025","Mon Aug 25 11:02:18 GMT 2025","3904","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Mon Aug 25 11:01:04 GMT 2025","Mon Aug 25 11:01:05 GMT 2025","1529","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Mon Aug 25 11:09:19 GMT 2025","Mon Aug 25 11:09:19 GMT 2025","11","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Mon Aug 25 11:01:30 GMT 2025","Mon Aug 25 11:01:32 GMT 2025","1207","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Mon Aug 25 10:58:50 GMT 2025","Mon Aug 25 10:58:50 GMT 2025","452","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","110","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Mon Aug 25 10:58:52 GMT 2025","Mon Aug 25 10:58:53 GMT 2025","972","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Mon Aug 25 11:00:57 GMT 2025","Mon Aug 25 11:00:57 GMT 2025","517","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Mon Aug 25 11:01:01 GMT 2025","Mon Aug 25 11:01:04 GMT 2025","2302","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Mon Aug 25 10:58:49 GMT 2025","Mon Aug 25 10:58:49 GMT 2025","497","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Mon Aug 25 10:58:50 GMT 2025","Mon Aug 25 10:58:51 GMT 2025","60","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","21","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Mon Aug 25 11:02:08 GMT 2025","Mon Aug 25 11:02:10 GMT 2025","1585","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Mon Aug 25 11:01:00 GMT 2025","Mon Aug 25 11:01:01 GMT 2025","1336","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Mon Aug 25 11:00:32 GMT 2025","Mon Aug 25 11:00:32 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Mon Aug 25 10:59:09 GMT 2025","Mon Aug 25 10:59:11 GMT 2025","2602","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 10:59:37 GMT 2025","Mon Aug 25 10:59:39 GMT 2025","2200","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Mon Aug 25 10:58:51 GMT 2025","Mon Aug 25 10:58:52 GMT 2025","62","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Mon Aug 25 11:02:21 GMT 2025","Mon Aug 25 11:02:23 GMT 2025","2206","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
