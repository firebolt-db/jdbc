"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","15","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","47","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","11","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [7] http://172.0.0.1:70000, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. The port value should be a positive integer between 1 and 65535. You have the port as:70000",""
"passed","Fri Aug 15 13:00:31 GMT 2025","Fri Aug 15 13:00:31 GMT 2025","18","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutes","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutes()",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","12","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [11] https://mydomain.com, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. You must specify the port.",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","108","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectComplexStruct","shouldInsertAndSelectComplexStruct()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","50","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","30","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldNotFailWhenParametersNotPresentAreSet","shouldNotFailWhenParametersNotPresentAreSet()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","47","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","27","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQuery","shouldThrowExceptionWhenExecutingWrongQuery()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","50","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Fri Aug 15 13:00:17 GMT 2025","Fri Aug 15 13:00:17 GMT 2025","24","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Fri Aug 15 13:00:31 GMT 2025","Fri Aug 15 13:00:31 GMT 2025","8","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","39","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","3","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","45","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","60","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","3","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatAsDoubleUserEngine","nanFloatAsDoubleUserEngine(String) [3] select '-nan'::float",""
"passed","Fri Aug 15 13:00:31 GMT 2025","Fri Aug 15 13:00:31 GMT 2025","20","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDate","shouldReturnTimestampFromDate()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","34","","integration.tests.StatementTest","","integration.tests.StatementTest","cannotChangeToDatabaseThatDoesNotExist","cannotChangeToDatabaseThatDoesNotExist()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","41","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"skipped","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","59","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","68","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Fri Aug 15 13:00:01 GMT 2025","Fri Aug 15 13:00:01 GMT 2025","27","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","66","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Fri Aug 15 13:00:31 GMT 2025","Fri Aug 15 13:00:31 GMT 2025","15","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","56","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Aug 15 13:00:17 GMT 2025","Fri Aug 15 13:00:27 GMT 2025","10031","","integration.tests.StatementTest","","integration.tests.StatementTest","willUseRandomQueryLabelIfNoneExplicitlySet","willUseRandomQueryLabelIfNoneExplicitlySet()",""
"passed","Fri Aug 15 13:00:31 GMT 2025","Fri Aug 15 13:00:31 GMT 2025","21","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSeconds","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSeconds()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","22","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","8","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [2] https://172.0.1.280, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. You must specify the port.",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","55","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStruct","shouldInsertAndSelectStruct()",""
"passed","Fri Aug 15 13:00:01 GMT 2025","Fri Aug 15 13:00:01 GMT 2025","18","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","65","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","4","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","66","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","26","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","51","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectGeography","shouldInsertAndSelectGeography()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","53","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Aug 15 13:00:01 GMT 2025","Fri Aug 15 13:00:01 GMT 2025","14","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Fri Aug 15 13:00:01 GMT 2025","Fri Aug 15 13:00:01 GMT 2025","19","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","18","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","4","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","23","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","44","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","5","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","60","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","39","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","44","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","6","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [6] https://172.0.0.1:-2, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. Invalid port number :-2",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","25","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","46","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","4","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatAsDoubleUserEngine","minusInfFloatAsDoubleUserEngine(String) [1] select '-inf'::float",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","55","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","32","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","30","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryWithJsonError","shouldThrowExceptionWhenExecutingWrongQueryWithJsonError()",""
"passed","Fri Aug 15 13:00:27 GMT 2025","Fri Aug 15 13:00:27 GMT 2025","22","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","43","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","8","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [4] https://172.0.0.1:, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. You must specify the port.",""
"passed","Fri Aug 15 13:00:33 GMT 2025","Fri Aug 15 13:00:33 GMT 2025","16","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Fri Aug 15 13:00:27 GMT 2025","Fri Aug 15 13:00:27 GMT 2025","25","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Fri Aug 15 13:00:01 GMT 2025","Fri Aug 15 13:00:01 GMT 2025","17","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","17","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","24","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","20","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:07 GMT 2025","178","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Fri Aug 15 13:00:27 GMT 2025","Fri Aug 15 13:00:27 GMT 2025","24","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","31","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","6","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [8] https://172.0.0.1:70000, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. The port value should be a positive integer between 1 and 65535. You have the port as:70000",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","59","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","24","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","31","","integration.tests.StatementTest","","integration.tests.StatementTest","forcePgdateTimestampntzIsNotAKnownSettingForCore","forcePgdateTimestampntzIsNotAKnownSettingForCore()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","8","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","27","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Fri Aug 15 13:00:33 GMT 2025","Fri Aug 15 13:00:33 GMT 2025","16","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Fri Aug 15 13:00:27 GMT 2025","Fri Aug 15 13:00:27 GMT 2025","23","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","23","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","75","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","62","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","5","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","43","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","4","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Fri Aug 15 12:59:50 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","107","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","doNotHaveToSpecifyTheDatabaseWhenConnectingToCore","doNotHaveToSpecifyTheDatabaseWhenConnectingToCore()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","45","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","24","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","96","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldInsertAndSelectStruct","shouldInsertAndSelectStruct()",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","8","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [5] http://172.0.0.1:-2, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. Invalid port number :-2",""
"passed","Fri Aug 15 13:00:31 GMT 2025","Fri Aug 15 13:00:33 GMT 2025","1472","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","48","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","37","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","62","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","4","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatAsDoubleUserEngine","nanFloatAsDoubleUserEngine(String) [1] select 'nan'::float",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","39","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Fri Aug 15 13:00:27 GMT 2025","Fri Aug 15 13:00:27 GMT 2025","26","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","17","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","18","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","49","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Fri Aug 15 13:00:01 GMT 2025","Fri Aug 15 13:00:01 GMT 2025","11","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","48","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","54","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","22","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","16","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","5","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatAsDoubleUserEngine","infFloatAsDoubleUserEngine(String) [1] select 'inf'::float",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","46","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","12","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","28","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldSetParametersWithRandomIndex","shouldSetParametersWithRandomIndex()",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","146","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","canConnectToFirebotlCoreOverHttps","canConnectToFirebotlCoreOverHttps()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","23","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","114","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldInsertAndSelectComplexStruct","shouldInsertAndSelectComplexStruct()",""
"passed","Fri Aug 15 13:00:31 GMT 2025","Fri Aug 15 13:00:31 GMT 2025","8","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Fri Aug 15 13:00:17 GMT 2025","Fri Aug 15 13:00:17 GMT 2025","21","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","32","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","17","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","5","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [3] http://172.0.0.1:, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. You must specify the port.",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","64","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbInCore","connectToNotExistingDbInCore()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","21","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","30","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","43","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","25","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForCore","setWrongParameterOnUserEngineForCore()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","37","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Fri Aug 15 13:00:27 GMT 2025","Fri Aug 15 13:00:27 GMT 2025","37","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","4","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatAsDoubleUserEngine","infFloatAsDoubleUserEngine(String) [2] select '+inf'::float",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","4","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","6","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","81","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","84","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","30","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","4","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Fri Aug 15 13:00:01 GMT 2025","Fri Aug 15 13:00:01 GMT 2025","35","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","4","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","27","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Fri Aug 15 13:00:27 GMT 2025","Fri Aug 15 13:00:27 GMT 2025","44","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","5","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Fri Aug 15 13:00:01 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","19","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","28","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","37","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldSetParametersWithRepeatingValues","shouldSetParametersWithRepeatingValues()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","71","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldInsertAndSelectGeography","shouldInsertAndSelectGeography()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","22","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","20","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","58","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","52","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 13:00:01 GMT 2025","10088","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","preparedStatementBatchesWorkIfMergeParameterProvided","preparedStatementBatchesWorkIfMergeParameterProvided()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","70","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Fri Aug 15 13:00:31 GMT 2025","Fri Aug 15 13:00:31 GMT 2025","19","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptz","shouldReturnTimestampFromTimestamptz()",""
"passed","Fri Aug 15 13:00:27 GMT 2025","Fri Aug 15 13:00:27 GMT 2025","34","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","23","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [1] http://172.0.1.280, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. You must specify the port.",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","45","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Aug 15 13:00:33 GMT 2025","Fri Aug 15 13:00:33 GMT 2025","72","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Fri Aug 15 13:00:33 GMT 2025","Fri Aug 15 13:00:33 GMT 2025","11","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","3","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatAsDoubleUserEngine","nanFloatAsDoubleUserEngine(String) [2] select '+nan'::float",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","26","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Fri Aug 15 13:00:31 GMT 2025","Fri Aug 15 13:00:31 GMT 2025","10","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","48","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","51","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampWithTimezone","shouldFetchTimestampWithTimezone()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","57","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","canUseTimestampParameterWithSqlType","canUseTimestampParameterWithSqlType()",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","98","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","33","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldResetTheParameterIndex","shouldResetTheParameterIndex()",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","44","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Aug 15 13:00:07 GMT 2025","Fri Aug 15 13:00:17 GMT 2025","10052","","integration.tests.StatementTest","","integration.tests.StatementTest","canSetQueryLabelMultipleTimes","canSetQueryLabelMultipleTimes()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","56","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","31","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldFailWhenParameterNotProvided","shouldFailWhenParameterNotProvided()",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","79","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldReplaceParamMarkersInMultistatementStatement","shouldReplaceParamMarkersInMultistatementStatement()",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","4","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","30","","integration.tests.StatementTest","","integration.tests.StatementTest","doNotSupportStatements","doNotSupportStatements(String, String) [1] USE ENGINE ""test_engine"", USE ENGINE is not supported in Firebolt Core",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","8","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [9] localhost:8080, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. You did not pass in the protocol. It has to be either http or https.",""
"passed","Fri Aug 15 13:00:03 GMT 2025","Fri Aug 15 13:00:03 GMT 2025","30","","integration.tests.PreparedStatementFbNumericTest","","integration.tests.PreparedStatementFbNumericTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Fri Aug 15 12:59:51 GMT 2025","Fri Aug 15 12:59:51 GMT 2025","6","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","cannotConnectToFireboltCoreWithInvalidUrl","cannotConnectToFireboltCoreWithInvalidUrl(String, String) [10] http://mydomain.com, Invalid URL format. URL must be in the form: <protocol>://<host>:<port>. You must specify the port.",""
"passed","Fri Aug 15 13:00:33 GMT 2025","Fri Aug 15 13:00:33 GMT 2025","331","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Fri Aug 15 13:00:02 GMT 2025","Fri Aug 15 13:00:02 GMT 2025","9","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Fri Aug 15 13:00:04 GMT 2025","Fri Aug 15 13:00:04 GMT 2025","59","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Fri Aug 15 13:00:06 GMT 2025","Fri Aug 15 13:00:06 GMT 2025","31","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Fri Aug 15 13:00:05 GMT 2025","Fri Aug 15 13:00:05 GMT 2025","39","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
