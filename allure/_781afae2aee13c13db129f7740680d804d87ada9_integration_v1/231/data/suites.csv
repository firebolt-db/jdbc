"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sat Nov 01 05:52:58 GMT 2025","Sat Nov 01 05:53:01 GMT 2025","3030","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Sat Nov 01 05:55:24 GMT 2025","Sat Nov 01 05:55:26 GMT 2025","2048","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Sat Nov 01 05:53:43 GMT 2025","Sat Nov 01 05:53:48 GMT 2025","4952","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Sat Nov 01 05:52:36 GMT 2025","Sat Nov 01 05:52:39 GMT 2025","3045","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Sat Nov 01 05:51:46 GMT 2025","Sat Nov 01 05:51:46 GMT 2025","113","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","36","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","37","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Sat Nov 01 05:51:42 GMT 2025","Sat Nov 01 05:51:43 GMT 2025","1081","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Sat Nov 01 06:01:49 GMT 2025","Sat Nov 01 06:01:49 GMT 2025","155","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Sat Nov 01 05:51:44 GMT 2025","Sat Nov 01 05:51:44 GMT 2025","139","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Sat Nov 01 06:01:49 GMT 2025","Sat Nov 01 06:01:49 GMT 2025","118","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Sat Nov 01 05:52:12 GMT 2025","Sat Nov 01 05:52:15 GMT 2025","3248","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Nov 01 05:54:36 GMT 2025","Sat Nov 01 05:54:38 GMT 2025","1283","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Sat Nov 01 06:01:49 GMT 2025","Sat Nov 01 06:01:49 GMT 2025","142","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Sat Nov 01 05:54:16 GMT 2025","Sat Nov 01 05:54:18 GMT 2025","1632","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Sat Nov 01 05:54:25 GMT 2025","Sat Nov 01 05:54:28 GMT 2025","3063","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Sat Nov 01 05:54:44 GMT 2025","Sat Nov 01 05:54:47 GMT 2025","2118","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Sat Nov 01 05:53:35 GMT 2025","Sat Nov 01 05:53:38 GMT 2025","3438","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Sat Nov 01 05:53:48 GMT 2025","Sat Nov 01 05:53:48 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Sat Nov 01 05:54:22 GMT 2025","Sat Nov 01 05:54:23 GMT 2025","1641","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Sat Nov 01 05:52:21 GMT 2025","Sat Nov 01 05:52:24 GMT 2025","3295","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Nov 01 05:55:16 GMT 2025","Sat Nov 01 05:55:17 GMT 2025","927","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Sat Nov 01 06:01:52 GMT 2025","Sat Nov 01 06:01:52 GMT 2025","297","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","36","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Sat Nov 01 05:52:55 GMT 2025","Sat Nov 01 05:52:58 GMT 2025","2808","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Sat Nov 01 05:53:16 GMT 2025","Sat Nov 01 05:53:19 GMT 2025","3301","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Sat Nov 01 05:51:46 GMT 2025","Sat Nov 01 05:51:46 GMT 2025","118","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Sat Nov 01 05:51:46 GMT 2025","Sat Nov 01 05:51:46 GMT 2025","117","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Sat Nov 01 05:53:01 GMT 2025","Sat Nov 01 05:53:04 GMT 2025","3500","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Sat Nov 01 05:54:28 GMT 2025","Sat Nov 01 05:54:29 GMT 2025","719","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Sat Nov 01 05:55:21 GMT 2025","Sat Nov 01 05:55:23 GMT 2025","2287","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Sat Nov 01 05:54:33 GMT 2025","Sat Nov 01 05:54:34 GMT 2025","1634","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Sat Nov 01 05:55:26 GMT 2025","Sat Nov 01 05:55:28 GMT 2025","1340","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Sat Nov 01 05:55:17 GMT 2025","Sat Nov 01 05:55:21 GMT 2025","4301","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Sat Nov 01 05:55:12 GMT 2025","Sat Nov 01 05:55:14 GMT 2025","2114","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Sat Nov 01 05:51:38 GMT 2025","Sat Nov 01 05:51:40 GMT 2025","1831","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Sat Nov 01 05:54:49 GMT 2025","Sat Nov 01 05:55:06 GMT 2025","16899","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Sat Nov 01 05:53:29 GMT 2025","Sat Nov 01 05:53:32 GMT 2025","3011","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Sat Nov 01 06:01:52 GMT 2025","Sat Nov 01 06:01:52 GMT 2025","14","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Sat Nov 01 05:51:46 GMT 2025","Sat Nov 01 05:51:46 GMT 2025","123","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Sat Nov 01 06:01:49 GMT 2025","Sat Nov 01 06:01:51 GMT 2025","1631","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Sat Nov 01 05:54:41 GMT 2025","Sat Nov 01 05:54:42 GMT 2025","1067","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Sat Nov 01 05:54:38 GMT 2025","Sat Nov 01 05:54:39 GMT 2025","1355","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Sat Nov 01 05:53:08 GMT 2025","Sat Nov 01 05:53:12 GMT 2025","4855","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Sat Nov 01 05:54:34 GMT 2025","Sat Nov 01 05:54:36 GMT 2025","1314","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Sat Nov 01 05:51:55 GMT 2025","Sat Nov 01 05:51:57 GMT 2025","2516","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Sat Nov 01 05:51:45 GMT 2025","Sat Nov 01 05:51:45 GMT 2025","125","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Sat Nov 01 05:51:46 GMT 2025","Sat Nov 01 05:51:46 GMT 2025","115","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Sat Nov 01 05:55:30 GMT 2025","Sat Nov 01 06:01:45 GMT 2025","374847","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"skipped","Sat Nov 01 05:53:43 GMT 2025","Sat Nov 01 05:53:43 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Sat Nov 01 05:52:17 GMT 2025","Sat Nov 01 05:52:21 GMT 2025","3642","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Nov 01 05:51:40 GMT 2025","Sat Nov 01 05:51:41 GMT 2025","728","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Sat Nov 01 05:55:30 GMT 2025","Sat Nov 01 05:55:30 GMT 2025","0","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Sat Nov 01 05:54:13 GMT 2025","Sat Nov 01 05:54:15 GMT 2025","2244","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Sat Nov 01 05:51:45 GMT 2025","Sat Nov 01 05:51:45 GMT 2025","115","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Sat Nov 01 05:54:39 GMT 2025","Sat Nov 01 05:54:40 GMT 2025","1194","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Sat Nov 01 05:52:44 GMT 2025","Sat Nov 01 05:52:48 GMT 2025","3573","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Sat Nov 01 05:52:48 GMT 2025","Sat Nov 01 05:52:49 GMT 2025","1573","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Sat Nov 01 05:54:20 GMT 2025","Sat Nov 01 05:54:20 GMT 2025","754","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Sat Nov 01 05:54:23 GMT 2025","Sat Nov 01 05:54:25 GMT 2025","1586","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Sat Nov 01 05:54:47 GMT 2025","Sat Nov 01 05:54:48 GMT 2025","1136","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Sat Nov 01 05:55:08 GMT 2025","Sat Nov 01 05:55:10 GMT 2025","1981","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Sat Nov 01 05:55:14 GMT 2025","Sat Nov 01 05:55:16 GMT 2025","1307","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Sat Nov 01 05:54:36 GMT 2025","Sat Nov 01 05:54:36 GMT 2025","723","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Sat Nov 01 06:01:49 GMT 2025","Sat Nov 01 06:01:49 GMT 2025","114","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Sat Nov 01 05:51:45 GMT 2025","Sat Nov 01 05:51:45 GMT 2025","114","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Sat Nov 01 05:53:12 GMT 2025","Sat Nov 01 05:53:16 GMT 2025","3222","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Sat Nov 01 05:51:44 GMT 2025","Sat Nov 01 05:51:44 GMT 2025","168","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Sat Nov 01 05:51:43 GMT 2025","Sat Nov 01 05:51:43 GMT 2025","532","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:54:13 GMT 2025","23461","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Sat Nov 01 05:54:31 GMT 2025","Sat Nov 01 05:54:33 GMT 2025","1415","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Sat Nov 01 05:53:04 GMT 2025","Sat Nov 01 05:53:08 GMT 2025","3141","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Sat Nov 01 05:53:25 GMT 2025","Sat Nov 01 05:53:29 GMT 2025","3249","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Sat Nov 01 05:51:46 GMT 2025","Sat Nov 01 05:51:46 GMT 2025","79","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Sat Nov 01 05:54:40 GMT 2025","Sat Nov 01 05:54:41 GMT 2025","1165","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Sat Nov 01 05:54:48 GMT 2025","Sat Nov 01 05:54:49 GMT 2025","927","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Sat Nov 01 05:52:15 GMT 2025","Sat Nov 01 05:52:17 GMT 2025","1783","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Sat Nov 01 05:51:44 GMT 2025","Sat Nov 01 05:51:45 GMT 2025","120","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Sat Nov 01 06:01:52 GMT 2025","Sat Nov 01 06:01:52 GMT 2025","72","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Sat Nov 01 05:54:20 GMT 2025","Sat Nov 01 05:54:22 GMT 2025","1382","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Sat Nov 01 06:01:48 GMT 2025","Sat Nov 01 06:01:49 GMT 2025","116","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Sat Nov 01 05:51:47 GMT 2025","Sat Nov 01 05:51:49 GMT 2025","2753","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Sat Nov 01 05:54:15 GMT 2025","Sat Nov 01 05:54:16 GMT 2025","1630","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Sat Nov 01 05:51:49 GMT 2025","Sat Nov 01 05:51:52 GMT 2025","2665","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Sat Nov 01 05:51:45 GMT 2025","Sat Nov 01 05:51:45 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Sat Nov 01 05:55:28 GMT 2025","Sat Nov 01 05:55:30 GMT 2025","2042","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Sat Nov 01 05:54:29 GMT 2025","Sat Nov 01 05:54:30 GMT 2025","1158","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Sat Nov 01 05:51:44 GMT 2025","Sat Nov 01 05:51:44 GMT 2025","130","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Sat Nov 01 05:52:00 GMT 2025","Sat Nov 01 05:52:02 GMT 2025","2311","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Sat Nov 01 06:01:52 GMT 2025","Sat Nov 01 06:01:52 GMT 2025","9","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Sat Nov 01 05:52:49 GMT 2025","Sat Nov 01 05:52:54 GMT 2025","4377","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Sat Nov 01 05:52:39 GMT 2025","Sat Nov 01 05:52:44 GMT 2025","5651","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Sat Nov 01 05:51:43 GMT 2025","Sat Nov 01 05:51:44 GMT 2025","126","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Sat Nov 01 06:01:51 GMT 2025","Sat Nov 01 06:01:51 GMT 2025","109","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Sat Nov 01 05:51:52 GMT 2025","Sat Nov 01 05:51:55 GMT 2025","2597","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Sat Nov 01 05:53:22 GMT 2025","Sat Nov 01 05:53:25 GMT 2025","3122","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Sat Nov 01 06:01:49 GMT 2025","Sat Nov 01 06:01:49 GMT 2025","197","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Sat Nov 01 05:52:07 GMT 2025","Sat Nov 01 05:52:08 GMT 2025","1064","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Nov 01 05:51:46 GMT 2025","Sat Nov 01 05:51:46 GMT 2025","122","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","36","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Sat Nov 01 05:52:31 GMT 2025","Sat Nov 01 05:52:36 GMT 2025","4826","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Sat Nov 01 05:51:46 GMT 2025","Sat Nov 01 05:51:46 GMT 2025","121","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Sat Nov 01 05:51:45 GMT 2025","Sat Nov 01 05:51:45 GMT 2025","124","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Sat Nov 01 05:51:41 GMT 2025","Sat Nov 01 05:51:42 GMT 2025","720","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Sat Nov 01 05:51:57 GMT 2025","Sat Nov 01 05:52:00 GMT 2025","2416","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Nov 01 05:51:45 GMT 2025","Sat Nov 01 05:51:45 GMT 2025","118","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Sat Nov 01 05:52:08 GMT 2025","Sat Nov 01 05:52:10 GMT 2025","2187","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Nov 01 05:55:10 GMT 2025","Sat Nov 01 05:55:11 GMT 2025","1445","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Sat Nov 01 05:54:42 GMT 2025","Sat Nov 01 05:54:43 GMT 2025","1064","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Sat Nov 01 06:01:49 GMT 2025","Sat Nov 01 06:01:49 GMT 2025","148","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Sat Nov 01 05:52:27 GMT 2025","Sat Nov 01 05:52:31 GMT 2025","3304","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Nov 01 05:51:57 GMT 2025","Sat Nov 01 05:51:57 GMT 2025","73","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Sat Nov 01 05:52:10 GMT 2025","Sat Nov 01 05:52:12 GMT 2025","2267","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Nov 01 05:52:02 GMT 2025","Sat Nov 01 05:52:05 GMT 2025","2458","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Nov 01 05:54:18 GMT 2025","Sat Nov 01 05:54:20 GMT 2025","1392","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Sat Nov 01 06:01:48 GMT 2025","Sat Nov 01 06:01:48 GMT 2025","232","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Sat Nov 01 05:54:30 GMT 2025","Sat Nov 01 05:54:31 GMT 2025","1397","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Sat Nov 01 05:52:54 GMT 2025","Sat Nov 01 05:52:55 GMT 2025","1302","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Sat Nov 01 05:53:32 GMT 2025","Sat Nov 01 05:53:35 GMT 2025","3501","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Sat Nov 01 05:55:11 GMT 2025","Sat Nov 01 05:55:12 GMT 2025","967","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Sat Nov 01 05:55:06 GMT 2025","Sat Nov 01 05:55:08 GMT 2025","2339","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Sat Nov 01 05:51:45 GMT 2025","Sat Nov 01 05:51:46 GMT 2025","117","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Sat Nov 01 05:51:57 GMT 2025","Sat Nov 01 05:51:57 GMT 2025","88","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Sat Nov 01 05:53:38 GMT 2025","Sat Nov 01 05:53:43 GMT 2025","4873","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Sat Nov 01 05:55:23 GMT 2025","Sat Nov 01 05:55:24 GMT 2025","1018","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Sat Nov 01 05:53:49 GMT 2025","Sat Nov 01 05:53:49 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Sat Nov 01 05:54:43 GMT 2025","Sat Nov 01 05:54:44 GMT 2025","1006","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Sat Nov 01 05:52:05 GMT 2025","Sat Nov 01 05:52:07 GMT 2025","2070","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Nov 01 05:52:24 GMT 2025","Sat Nov 01 05:52:27 GMT 2025","3196","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Nov 01 05:51:45 GMT 2025","Sat Nov 01 05:51:45 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Sat Nov 01 05:53:19 GMT 2025","Sat Nov 01 05:53:22 GMT 2025","3223","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
