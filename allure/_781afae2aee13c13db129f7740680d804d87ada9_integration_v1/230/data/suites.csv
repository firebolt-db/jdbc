"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Fri Oct 31 06:12:21 GMT 2025","Fri Oct 31 06:12:23 GMT 2025","1790","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Fri Oct 31 06:15:50 GMT 2025","Fri Oct 31 06:15:53 GMT 2025","3360","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Fri Oct 31 06:13:39 GMT 2025","Fri Oct 31 06:13:42 GMT 2025","3361","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"skipped","Fri Oct 31 06:13:56 GMT 2025","Fri Oct 31 06:13:56 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:02 GMT 2025","70","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Fri Oct 31 06:15:01 GMT 2025","Fri Oct 31 06:15:03 GMT 2025","1635","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Fri Oct 31 06:15:10 GMT 2025","Fri Oct 31 06:15:11 GMT 2025","1691","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:01 GMT 2025","73","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Fri Oct 31 06:11:54 GMT 2025","Fri Oct 31 06:11:54 GMT 2025","140","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Fri Oct 31 06:14:51 GMT 2025","Fri Oct 31 06:14:53 GMT 2025","1503","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Fri Oct 31 06:11:57 GMT 2025","Fri Oct 31 06:11:59 GMT 2025","2739","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Oct 31 06:11:46 GMT 2025","Fri Oct 31 06:11:48 GMT 2025","2478","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Fri Oct 31 06:23:11 GMT 2025","Fri Oct 31 06:23:11 GMT 2025","210","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Fri Oct 31 06:15:53 GMT 2025","Fri Oct 31 06:15:55 GMT 2025","1537","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Fri Oct 31 06:15:41 GMT 2025","Fri Oct 31 06:15:42 GMT 2025","1777","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Fri Oct 31 06:11:54 GMT 2025","Fri Oct 31 06:11:54 GMT 2025","159","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Fri Oct 31 06:12:09 GMT 2025","Fri Oct 31 06:12:14 GMT 2025","4493","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Oct 31 06:11:40 GMT 2025","Fri Oct 31 06:11:41 GMT 2025","217","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Fri Oct 31 06:13:14 GMT 2025","Fri Oct 31 06:13:17 GMT 2025","3366","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Fri Oct 31 06:14:02 GMT 2025","Fri Oct 31 06:14:02 GMT 2025","71","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Fri Oct 31 06:15:36 GMT 2025","Fri Oct 31 06:15:37 GMT 2025","1758","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Fri Oct 31 06:13:25 GMT 2025","Fri Oct 31 06:13:29 GMT 2025","3433","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Fri Oct 31 06:12:33 GMT 2025","Fri Oct 31 06:12:37 GMT 2025","3528","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Oct 31 06:14:32 GMT 2025","Fri Oct 31 06:14:35 GMT 2025","2635","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Fri Oct 31 06:23:08 GMT 2025","Fri Oct 31 06:23:09 GMT 2025","282","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Fri Oct 31 06:13:17 GMT 2025","Fri Oct 31 06:13:22 GMT 2025","4917","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Fri Oct 31 06:15:08 GMT 2025","Fri Oct 31 06:15:10 GMT 2025","1620","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Fri Oct 31 06:14:53 GMT 2025","Fri Oct 31 06:14:55 GMT 2025","1843","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Fri Oct 31 06:11:41 GMT 2025","Fri Oct 31 06:11:41 GMT 2025","216","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:01 GMT 2025","74","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:01 GMT 2025","71","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Fri Oct 31 06:14:55 GMT 2025","Fri Oct 31 06:14:56 GMT 2025","1690","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Fri Oct 31 06:11:37 GMT 2025","Fri Oct 31 06:11:37 GMT 2025","762","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Fri Oct 31 06:14:39 GMT 2025","Fri Oct 31 06:14:41 GMT 2025","1661","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Fri Oct 31 06:15:00 GMT 2025","Fri Oct 31 06:15:01 GMT 2025","1679","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Fri Oct 31 06:12:42 GMT 2025","Fri Oct 31 06:12:46 GMT 2025","3472","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Fri Oct 31 06:12:56 GMT 2025","Fri Oct 31 06:13:01 GMT 2025","5012","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Fri Oct 31 06:15:44 GMT 2025","Fri Oct 31 06:15:46 GMT 2025","1663","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Fri Oct 31 06:15:37 GMT 2025","Fri Oct 31 06:15:39 GMT 2025","1612","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Fri Oct 31 06:14:56 GMT 2025","Fri Oct 31 06:14:58 GMT 2025","1694","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Fri Oct 31 06:13:01 GMT 2025","Fri Oct 31 06:13:03 GMT 2025","1776","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Fri Oct 31 06:15:46 GMT 2025","Fri Oct 31 06:15:50 GMT 2025","3502","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Fri Oct 31 06:13:03 GMT 2025","Fri Oct 31 06:13:06 GMT 2025","3440","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Fri Oct 31 06:11:40 GMT 2025","Fri Oct 31 06:11:40 GMT 2025","223","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:01 GMT 2025","69","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Fri Oct 31 06:12:46 GMT 2025","Fri Oct 31 06:12:51 GMT 2025","5199","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Fri Oct 31 06:11:37 GMT 2025","Fri Oct 31 06:11:38 GMT 2025","228","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Fri Oct 31 06:16:01 GMT 2025","Fri Oct 31 06:16:01 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Fri Oct 31 06:13:06 GMT 2025","Fri Oct 31 06:13:10 GMT 2025","3442","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Fri Oct 31 06:23:08 GMT 2025","Fri Oct 31 06:23:08 GMT 2025","221","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Fri Oct 31 06:11:48 GMT 2025","Fri Oct 31 06:11:51 GMT 2025","2680","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Fri Oct 31 06:13:10 GMT 2025","Fri Oct 31 06:13:14 GMT 2025","3677","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Fri Oct 31 06:11:34 GMT 2025","Fri Oct 31 06:11:35 GMT 2025","840","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Fri Oct 31 06:13:51 GMT 2025","Fri Oct 31 06:13:56 GMT 2025","5066","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Fri Oct 31 06:11:35 GMT 2025","Fri Oct 31 06:11:36 GMT 2025","629","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Fri Oct 31 06:15:13 GMT 2025","Fri Oct 31 06:15:15 GMT 2025","1719","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Fri Oct 31 06:14:46 GMT 2025","Fri Oct 31 06:14:48 GMT 2025","1400","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Fri Oct 31 06:23:11 GMT 2025","Fri Oct 31 06:23:11 GMT 2025","46","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Fri Oct 31 06:23:07 GMT 2025","Fri Oct 31 06:23:07 GMT 2025","381","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:01 GMT 2025","74","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Fri Oct 31 06:15:39 GMT 2025","Fri Oct 31 06:15:41 GMT 2025","1677","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Fri Oct 31 06:11:36 GMT 2025","Fri Oct 31 06:11:37 GMT 2025","717","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Fri Oct 31 06:13:56 GMT 2025","Fri Oct 31 06:14:00 GMT 2025","4428","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Fri Oct 31 06:13:46 GMT 2025","Fri Oct 31 06:13:51 GMT 2025","5085","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Fri Oct 31 06:14:48 GMT 2025","Fri Oct 31 06:14:49 GMT 2025","1749","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Fri Oct 31 06:11:42 GMT 2025","Fri Oct 31 06:11:42 GMT 2025","221","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Fri Oct 31 06:14:02 GMT 2025","Fri Oct 31 06:14:02 GMT 2025","71","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Fri Oct 31 06:11:39 GMT 2025","Fri Oct 31 06:11:39 GMT 2025","219","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Fri Oct 31 06:14:30 GMT 2025","Fri Oct 31 06:14:32 GMT 2025","1990","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Fri Oct 31 06:15:11 GMT 2025","Fri Oct 31 06:15:13 GMT 2025","1811","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Fri Oct 31 06:11:41 GMT 2025","Fri Oct 31 06:11:42 GMT 2025","217","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:01 GMT 2025","70","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Fri Oct 31 06:11:42 GMT 2025","Fri Oct 31 06:11:42 GMT 2025","220","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:01 GMT 2025","73","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Fri Oct 31 06:12:26 GMT 2025","Fri Oct 31 06:12:30 GMT 2025","3530","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Oct 31 06:11:39 GMT 2025","Fri Oct 31 06:11:39 GMT 2025","222","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Fri Oct 31 06:11:42 GMT 2025","Fri Oct 31 06:11:43 GMT 2025","143","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Fri Oct 31 06:11:41 GMT 2025","Fri Oct 31 06:11:41 GMT 2025","213","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Fri Oct 31 06:11:39 GMT 2025","Fri Oct 31 06:11:39 GMT 2025","215","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Fri Oct 31 06:12:54 GMT 2025","Fri Oct 31 06:12:56 GMT 2025","1884","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Fri Oct 31 06:11:41 GMT 2025","Fri Oct 31 06:11:41 GMT 2025","220","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Fri Oct 31 06:16:01 GMT 2025","Fri Oct 31 06:23:03 GMT 2025","421982","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Fri Oct 31 06:13:32 GMT 2025","Fri Oct 31 06:13:36 GMT 2025","3352","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Fri Oct 31 06:14:02 GMT 2025","Fri Oct 31 06:14:02 GMT 2025","72","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Fri Oct 31 06:14:02 GMT 2025","Fri Oct 31 06:14:02 GMT 2025","71","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Fri Oct 31 06:11:38 GMT 2025","Fri Oct 31 06:11:39 GMT 2025","238","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Fri Oct 31 06:12:02 GMT 2025","Fri Oct 31 06:12:05 GMT 2025","2681","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Oct 31 06:11:59 GMT 2025","Fri Oct 31 06:12:02 GMT 2025","2797","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Oct 31 06:11:40 GMT 2025","Fri Oct 31 06:11:40 GMT 2025","216","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Fri Oct 31 06:15:34 GMT 2025","Fri Oct 31 06:15:36 GMT 2025","1825","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Fri Oct 31 06:14:26 GMT 2025","Fri Oct 31 06:14:28 GMT 2025","2715","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Fri Oct 31 06:23:09 GMT 2025","Fri Oct 31 06:23:09 GMT 2025","282","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Fri Oct 31 06:11:43 GMT 2025","Fri Oct 31 06:11:46 GMT 2025","2962","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Fri Oct 31 06:15:06 GMT 2025","Fri Oct 31 06:15:08 GMT 2025","1666","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:01 GMT 2025","70","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Fri Oct 31 06:14:02 GMT 2025","Fri Oct 31 06:14:02 GMT 2025","77","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Fri Oct 31 06:15:55 GMT 2025","Fri Oct 31 06:15:56 GMT 2025","1708","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Fri Oct 31 06:23:07 GMT 2025","Fri Oct 31 06:23:08 GMT 2025","222","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Fri Oct 31 06:12:30 GMT 2025","Fri Oct 31 06:12:33 GMT 2025","3459","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Oct 31 06:15:05 GMT 2025","Fri Oct 31 06:15:06 GMT 2025","1771","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Fri Oct 31 06:13:36 GMT 2025","Fri Oct 31 06:13:39 GMT 2025","3535","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Fri Oct 31 06:11:39 GMT 2025","Fri Oct 31 06:11:39 GMT 2025","223","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Fri Oct 31 06:12:18 GMT 2025","Fri Oct 31 06:12:21 GMT 2025","3651","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Fri Oct 31 06:11:51 GMT 2025","Fri Oct 31 06:11:54 GMT 2025","2653","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Fri Oct 31 06:23:07 GMT 2025","Fri Oct 31 06:23:07 GMT 2025","231","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Fri Oct 31 06:23:08 GMT 2025","Fri Oct 31 06:23:08 GMT 2025","355","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Fri Oct 31 06:14:02 GMT 2025","Fri Oct 31 06:14:02 GMT 2025","71","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Fri Oct 31 06:23:11 GMT 2025","Fri Oct 31 06:23:11 GMT 2025","8","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Fri Oct 31 06:14:58 GMT 2025","Fri Oct 31 06:15:00 GMT 2025","1907","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Fri Oct 31 06:11:42 GMT 2025","Fri Oct 31 06:11:42 GMT 2025","228","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Fri Oct 31 06:13:29 GMT 2025","Fri Oct 31 06:13:32 GMT 2025","3535","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Fri Oct 31 06:12:05 GMT 2025","Fri Oct 31 06:12:09 GMT 2025","4426","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Oct 31 06:14:35 GMT 2025","Fri Oct 31 06:14:37 GMT 2025","2012","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Fri Oct 31 06:11:38 GMT 2025","Fri Oct 31 06:11:38 GMT 2025","217","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Fri Oct 31 06:15:58 GMT 2025","Fri Oct 31 06:16:01 GMT 2025","3360","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Fri Oct 31 06:12:14 GMT 2025","Fri Oct 31 06:12:18 GMT 2025","3849","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Oct 31 06:13:22 GMT 2025","Fri Oct 31 06:13:25 GMT 2025","3396","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Fri Oct 31 06:12:51 GMT 2025","Fri Oct 31 06:12:54 GMT 2025","3345","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Fri Oct 31 06:23:11 GMT 2025","Fri Oct 31 06:23:12 GMT 2025","9","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Fri Oct 31 06:15:56 GMT 2025","Fri Oct 31 06:15:58 GMT 2025","1610","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Fri Oct 31 06:23:08 GMT 2025","Fri Oct 31 06:23:08 GMT 2025","292","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Fri Oct 31 06:11:41 GMT 2025","Fri Oct 31 06:11:41 GMT 2025","223","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:01 GMT 2025","71","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Fri Oct 31 06:14:28 GMT 2025","Fri Oct 31 06:14:30 GMT 2025","2009","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Fri Oct 31 06:23:09 GMT 2025","Fri Oct 31 06:23:11 GMT 2025","1726","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Fri Oct 31 06:11:54 GMT 2025","Fri Oct 31 06:11:57 GMT 2025","2641","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Oct 31 06:14:02 GMT 2025","Fri Oct 31 06:14:02 GMT 2025","70","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Fri Oct 31 06:14:02 GMT 2025","Fri Oct 31 06:14:26 GMT 2025","23678","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Fri Oct 31 06:14:49 GMT 2025","Fri Oct 31 06:14:51 GMT 2025","1769","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Fri Oct 31 06:11:39 GMT 2025","Fri Oct 31 06:11:40 GMT 2025","216","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Fri Oct 31 06:14:42 GMT 2025","Fri Oct 31 06:14:46 GMT 2025","3743","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Fri Oct 31 06:15:03 GMT 2025","Fri Oct 31 06:15:05 GMT 2025","1604","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Fri Oct 31 06:11:40 GMT 2025","Fri Oct 31 06:11:40 GMT 2025","218","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Fri Oct 31 06:11:32 GMT 2025","Fri Oct 31 06:11:34 GMT 2025","2089","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Fri Oct 31 06:15:15 GMT 2025","Fri Oct 31 06:15:34 GMT 2025","18716","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Fri Oct 31 06:12:37 GMT 2025","Fri Oct 31 06:12:42 GMT 2025","5491","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Fri Oct 31 06:14:01 GMT 2025","Fri Oct 31 06:14:01 GMT 2025","72","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Fri Oct 31 06:13:42 GMT 2025","Fri Oct 31 06:13:46 GMT 2025","3418","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Fri Oct 31 06:23:11 GMT 2025","Fri Oct 31 06:23:11 GMT 2025","248","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Fri Oct 31 06:14:41 GMT 2025","Fri Oct 31 06:14:42 GMT 2025","1666","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Fri Oct 31 06:12:23 GMT 2025","Fri Oct 31 06:12:26 GMT 2025","3238","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Fri Oct 31 06:15:42 GMT 2025","Fri Oct 31 06:15:44 GMT 2025","2070","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Fri Oct 31 06:14:37 GMT 2025","Fri Oct 31 06:14:39 GMT 2025","2015","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
