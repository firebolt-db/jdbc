"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","50","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Wed Aug 20 05:54:17 GMT 2025","Wed Aug 20 05:54:18 GMT 2025","510","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Wed Aug 20 05:52:12 GMT 2025","Wed Aug 20 05:52:15 GMT 2025","3153","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","54","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Wed Aug 20 05:54:31 GMT 2025","Wed Aug 20 05:54:35 GMT 2025","4599","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Wed Aug 20 05:52:28 GMT 2025","Wed Aug 20 05:52:31 GMT 2025","3088","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 20 06:02:59 GMT 2025","Wed Aug 20 06:03:01 GMT 2025","1489","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Wed Aug 20 05:54:58 GMT 2025","Wed Aug 20 05:55:01 GMT 2025","2671","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","31","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Wed Aug 20 05:52:21 GMT 2025","Wed Aug 20 05:52:24 GMT 2025","2838","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 20 05:56:02 GMT 2025","Wed Aug 20 06:02:55 GMT 2025","412779","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Wed Aug 20 06:02:59 GMT 2025","Wed Aug 20 06:02:59 GMT 2025","64","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Wed Aug 20 05:53:27 GMT 2025","Wed Aug 20 05:53:29 GMT 2025","2020","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","15","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","51","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","70","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Wed Aug 20 05:53:10 GMT 2025","Wed Aug 20 05:53:13 GMT 2025","2955","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","46","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Wed Aug 20 05:54:35 GMT 2025","Wed Aug 20 05:54:38 GMT 2025","3016","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Wed Aug 20 05:55:40 GMT 2025","Wed Aug 20 05:55:42 GMT 2025","2695","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Wed Aug 20 05:54:19 GMT 2025","Wed Aug 20 05:54:22 GMT 2025","2655","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Wed Aug 20 05:54:49 GMT 2025","Wed Aug 20 05:54:51 GMT 2025","1553","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Wed Aug 20 05:55:38 GMT 2025","Wed Aug 20 05:55:40 GMT 2025","1424","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Wed Aug 20 05:51:51 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","656","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","56","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Wed Aug 20 06:03:01 GMT 2025","Wed Aug 20 06:03:01 GMT 2025","47","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","15","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Wed Aug 20 06:02:59 GMT 2025","Wed Aug 20 06:02:59 GMT 2025","62","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Wed Aug 20 05:51:47 GMT 2025","Wed Aug 20 05:51:49 GMT 2025","1745","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Wed Aug 20 05:55:43 GMT 2025","Wed Aug 20 05:55:44 GMT 2025","1443","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Wed Aug 20 05:53:23 GMT 2025","Wed Aug 20 05:53:27 GMT 2025","3978","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Wed Aug 20 05:53:07 GMT 2025","Wed Aug 20 05:53:10 GMT 2025","2980","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Wed Aug 20 05:52:46 GMT 2025","Wed Aug 20 05:52:52 GMT 2025","5860","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Wed Aug 20 05:52:09 GMT 2025","Wed Aug 20 05:52:12 GMT 2025","3098","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 20 05:53:35 GMT 2025","Wed Aug 20 05:53:37 GMT 2025","2698","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Wed Aug 20 05:53:20 GMT 2025","Wed Aug 20 05:53:23 GMT 2025","2785","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Wed Aug 20 05:55:51 GMT 2025","Wed Aug 20 05:55:53 GMT 2025","2827","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","50","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Wed Aug 20 05:52:02 GMT 2025","Wed Aug 20 05:52:02 GMT 2025","35","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Wed Aug 20 05:55:12 GMT 2025","Wed Aug 20 05:55:15 GMT 2025","2927","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Wed Aug 20 06:03:01 GMT 2025","Wed Aug 20 06:03:01 GMT 2025","282","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Wed Aug 20 05:54:45 GMT 2025","Wed Aug 20 05:54:47 GMT 2025","1609","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:54:15 GMT 2025","25794","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Wed Aug 20 05:51:50 GMT 2025","Wed Aug 20 05:51:51 GMT 2025","409","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","15","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Wed Aug 20 05:55:38 GMT 2025","Wed Aug 20 05:55:38 GMT 2025","525","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"skipped","Wed Aug 20 05:53:46 GMT 2025","Wed Aug 20 05:53:46 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Wed Aug 20 05:53:02 GMT 2025","Wed Aug 20 05:53:05 GMT 2025","2935","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Wed Aug 20 05:52:02 GMT 2025","Wed Aug 20 05:52:03 GMT 2025","842","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:54 GMT 2025","1102","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Wed Aug 20 05:52:34 GMT 2025","Wed Aug 20 05:52:39 GMT 2025","4525","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 20 05:55:46 GMT 2025","Wed Aug 20 05:55:51 GMT 2025","4025","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Wed Aug 20 05:54:51 GMT 2025","Wed Aug 20 05:54:54 GMT 2025","2683","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Wed Aug 20 06:02:59 GMT 2025","Wed Aug 20 06:02:59 GMT 2025","75","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Wed Aug 20 05:52:39 GMT 2025","Wed Aug 20 05:52:43 GMT 2025","4510","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","15","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Wed Aug 20 05:53:13 GMT 2025","Wed Aug 20 05:53:18 GMT 2025","4192","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Wed Aug 20 05:55:08 GMT 2025","Wed Aug 20 05:55:09 GMT 2025","1433","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Wed Aug 20 05:55:55 GMT 2025","Wed Aug 20 05:55:58 GMT 2025","2794","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Wed Aug 20 05:55:42 GMT 2025","Wed Aug 20 05:55:43 GMT 2025","537","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","65","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Wed Aug 20 05:53:29 GMT 2025","Wed Aug 20 05:53:32 GMT 2025","2729","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","55","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Wed Aug 20 05:54:38 GMT 2025","Wed Aug 20 05:54:40 GMT 2025","1501","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Wed Aug 20 05:53:00 GMT 2025","Wed Aug 20 05:53:02 GMT 2025","1398","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","52","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Wed Aug 20 06:02:59 GMT 2025","Wed Aug 20 06:02:59 GMT 2025","60","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","15","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Wed Aug 20 05:54:56 GMT 2025","Wed Aug 20 05:54:58 GMT 2025","1703","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","64","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Wed Aug 20 05:52:18 GMT 2025","Wed Aug 20 05:52:21 GMT 2025","2747","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 20 05:51:49 GMT 2025","Wed Aug 20 05:51:50 GMT 2025","736","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Wed Aug 20 05:52:24 GMT 2025","Wed Aug 20 05:52:25 GMT 2025","1313","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Wed Aug 20 05:55:02 GMT 2025","Wed Aug 20 05:55:05 GMT 2025","2824","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Wed Aug 20 05:54:25 GMT 2025","Wed Aug 20 05:54:27 GMT 2025","1468","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Wed Aug 20 05:55:44 GMT 2025","Wed Aug 20 05:55:46 GMT 2025","2044","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Wed Aug 20 05:51:57 GMT 2025","Wed Aug 20 05:52:00 GMT 2025","2763","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Wed Aug 20 05:52:15 GMT 2025","Wed Aug 20 05:52:18 GMT 2025","2808","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","61","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","52","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","18","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Wed Aug 20 05:55:09 GMT 2025","Wed Aug 20 05:55:12 GMT 2025","2843","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Wed Aug 20 05:52:03 GMT 2025","Wed Aug 20 05:52:07 GMT 2025","4052","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","53","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Wed Aug 20 05:55:35 GMT 2025","Wed Aug 20 05:55:36 GMT 2025","529","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Wed Aug 20 05:54:54 GMT 2025","Wed Aug 20 05:54:56 GMT 2025","2673","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Wed Aug 20 05:55:53 GMT 2025","Wed Aug 20 05:55:55 GMT 2025","1608","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Wed Aug 20 05:52:43 GMT 2025","Wed Aug 20 05:52:46 GMT 2025","2630","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Wed Aug 20 05:55:58 GMT 2025","Wed Aug 20 05:56:02 GMT 2025","4182","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Wed Aug 20 05:52:00 GMT 2025","Wed Aug 20 05:52:02 GMT 2025","2158","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Wed Aug 20 06:02:59 GMT 2025","Wed Aug 20 06:02:59 GMT 2025","61","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Wed Aug 20 05:54:22 GMT 2025","Wed Aug 20 05:54:25 GMT 2025","3099","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","17","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Wed Aug 20 05:54:15 GMT 2025","Wed Aug 20 05:54:17 GMT 2025","1851","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Wed Aug 20 05:55:05 GMT 2025","Wed Aug 20 05:55:08 GMT 2025","2727","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Wed Aug 20 06:03:01 GMT 2025","Wed Aug 20 06:03:01 GMT 2025","61","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Wed Aug 20 05:53:05 GMT 2025","Wed Aug 20 05:53:07 GMT 2025","2652","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","48","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Wed Aug 20 05:53:18 GMT 2025","Wed Aug 20 05:53:20 GMT 2025","2731","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Wed Aug 20 05:51:50 GMT 2025","Wed Aug 20 05:51:50 GMT 2025","597","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Wed Aug 20 06:03:01 GMT 2025","Wed Aug 20 06:03:01 GMT 2025","10","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Wed Aug 20 05:54:40 GMT 2025","Wed Aug 20 05:54:43 GMT 2025","2808","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Wed Aug 20 05:54:18 GMT 2025","Wed Aug 20 05:54:19 GMT 2025","1620","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Wed Aug 20 06:02:58 GMT 2025","Wed Aug 20 06:02:59 GMT 2025","275","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Wed Aug 20 05:53:42 GMT 2025","Wed Aug 20 05:53:46 GMT 2025","4229","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Wed Aug 20 05:54:43 GMT 2025","Wed Aug 20 05:54:45 GMT 2025","2620","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Wed Aug 20 05:52:07 GMT 2025","Wed Aug 20 05:52:09 GMT 2025","1947","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","110","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Wed Aug 20 05:52:02 GMT 2025","Wed Aug 20 05:52:02 GMT 2025","65","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Wed Aug 20 05:52:56 GMT 2025","Wed Aug 20 05:53:00 GMT 2025","4163","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Wed Aug 20 05:54:47 GMT 2025","Wed Aug 20 05:54:49 GMT 2025","2548","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Wed Aug 20 05:51:52 GMT 2025","Wed Aug 20 05:51:52 GMT 2025","56","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","58","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Wed Aug 20 05:52:31 GMT 2025","Wed Aug 20 05:52:34 GMT 2025","3282","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","15","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Wed Aug 20 05:52:52 GMT 2025","Wed Aug 20 05:52:55 GMT 2025","3137","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","50","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Wed Aug 20 05:51:53 GMT 2025","Wed Aug 20 05:51:53 GMT 2025","50","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Wed Aug 20 06:03:01 GMT 2025","Wed Aug 20 06:03:01 GMT 2025","5","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Wed Aug 20 05:55:15 GMT 2025","Wed Aug 20 05:55:35 GMT 2025","20726","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Wed Aug 20 05:54:29 GMT 2025","Wed Aug 20 05:54:31 GMT 2025","1248","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Wed Aug 20 05:55:01 GMT 2025","Wed Aug 20 05:55:02 GMT 2025","1404","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Wed Aug 20 05:53:32 GMT 2025","Wed Aug 20 05:53:35 GMT 2025","2787","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Wed Aug 20 05:53:46 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","3331","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","15","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","38","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","15","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Wed Aug 20 05:53:49 GMT 2025","Wed Aug 20 05:53:49 GMT 2025","16","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Wed Aug 20 06:02:59 GMT 2025","Wed Aug 20 06:02:59 GMT 2025","69","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Wed Aug 20 06:02:59 GMT 2025","Wed Aug 20 06:02:59 GMT 2025","102","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Wed Aug 20 05:51:54 GMT 2025","Wed Aug 20 05:51:57 GMT 2025","2756","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Wed Aug 20 05:53:37 GMT 2025","Wed Aug 20 05:53:42 GMT 2025","4254","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Wed Aug 20 05:52:55 GMT 2025","Wed Aug 20 05:52:56 GMT 2025","1383","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Wed Aug 20 05:55:36 GMT 2025","Wed Aug 20 05:55:38 GMT 2025","1791","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Wed Aug 20 05:56:02 GMT 2025","Wed Aug 20 05:56:02 GMT 2025","0","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Wed Aug 20 05:52:25 GMT 2025","Wed Aug 20 05:52:28 GMT 2025","2851","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Wed Aug 20 05:54:27 GMT 2025","Wed Aug 20 05:54:29 GMT 2025","2826","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
