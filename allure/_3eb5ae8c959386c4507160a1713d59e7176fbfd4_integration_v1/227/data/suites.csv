"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Tue Oct 28 06:11:49 GMT 2025","Tue Oct 28 06:11:52 GMT 2025","3158","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Tue Oct 28 06:11:59 GMT 2025","Tue Oct 28 06:12:02 GMT 2025","3416","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Tue Oct 28 06:10:52 GMT 2025","Tue Oct 28 06:10:52 GMT 2025","175","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Tue Oct 28 06:10:49 GMT 2025","Tue Oct 28 06:10:50 GMT 2025","269","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Tue Oct 28 06:14:19 GMT 2025","Tue Oct 28 06:14:21 GMT 2025","2057","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Tue Oct 28 06:10:47 GMT 2025","Tue Oct 28 06:10:47 GMT 2025","293","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Tue Oct 28 06:13:50 GMT 2025","Tue Oct 28 06:13:51 GMT 2025","1175","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Tue Oct 28 06:11:25 GMT 2025","Tue Oct 28 06:11:27 GMT 2025","2583","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Tue Oct 28 06:11:53 GMT 2025","Tue Oct 28 06:11:55 GMT 2025","2344","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Tue Oct 28 06:21:43 GMT 2025","Tue Oct 28 06:21:44 GMT 2025","353","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Tue Oct 28 06:11:55 GMT 2025","Tue Oct 28 06:11:59 GMT 2025","3330","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Tue Oct 28 06:10:48 GMT 2025","Tue Oct 28 06:10:49 GMT 2025","271","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Tue Oct 28 06:12:32 GMT 2025","Tue Oct 28 06:12:32 GMT 2025","85","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Tue Oct 28 06:14:15 GMT 2025","Tue Oct 28 06:14:16 GMT 2025","1169","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Tue Oct 28 06:11:12 GMT 2025","Tue Oct 28 06:11:14 GMT 2025","2213","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Tue Oct 28 06:11:02 GMT 2025","Tue Oct 28 06:11:02 GMT 2025","171","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Tue Oct 28 06:11:29 GMT 2025","Tue Oct 28 06:11:32 GMT 2025","2351","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Tue Oct 28 06:10:51 GMT 2025","Tue Oct 28 06:10:51 GMT 2025","265","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Tue Oct 28 06:12:13 GMT 2025","Tue Oct 28 06:12:15 GMT 2025","2150","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Tue Oct 28 06:13:48 GMT 2025","Tue Oct 28 06:13:50 GMT 2025","2082","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Tue Oct 28 06:11:35 GMT 2025","Tue Oct 28 06:11:39 GMT 2025","4039","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Tue Oct 28 06:13:41 GMT 2025","Tue Oct 28 06:13:44 GMT 2025","3214","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Tue Oct 28 06:10:50 GMT 2025","Tue Oct 28 06:10:50 GMT 2025","262","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Tue Oct 28 06:12:33 GMT 2025","Tue Oct 28 06:12:33 GMT 2025","83","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Tue Oct 28 06:14:31 GMT 2025","Tue Oct 28 06:14:33 GMT 2025","1343","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Tue Oct 28 06:12:17 GMT 2025","Tue Oct 28 06:12:19 GMT 2025","2154","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Tue Oct 28 06:10:53 GMT 2025","Tue Oct 28 06:10:55 GMT 2025","2423","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Tue Oct 28 06:12:23 GMT 2025","Tue Oct 28 06:12:26 GMT 2025","2576","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Tue Oct 28 06:13:44 GMT 2025","Tue Oct 28 06:13:46 GMT 2025","2127","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Tue Oct 28 06:14:13 GMT 2025","Tue Oct 28 06:14:15 GMT 2025","2001","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Tue Oct 28 06:12:33 GMT 2025","Tue Oct 28 06:12:33 GMT 2025","83","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Tue Oct 28 06:14:11 GMT 2025","Tue Oct 28 06:14:13 GMT 2025","1660","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Tue Oct 28 06:10:55 GMT 2025","Tue Oct 28 06:10:57 GMT 2025","2190","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Tue Oct 28 06:10:47 GMT 2025","Tue Oct 28 06:10:48 GMT 2025","271","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Tue Oct 28 06:14:36 GMT 2025","Tue Oct 28 06:14:36 GMT 2025","0","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Tue Oct 28 06:10:45 GMT 2025","Tue Oct 28 06:10:46 GMT 2025","689","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Tue Oct 28 06:10:47 GMT 2025","Tue Oct 28 06:10:47 GMT 2025","273","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Tue Oct 28 06:13:11 GMT 2025","Tue Oct 28 06:13:13 GMT 2025","2058","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Tue Oct 28 06:10:46 GMT 2025","Tue Oct 28 06:10:46 GMT 2025","272","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Tue Oct 28 06:14:28 GMT 2025","Tue Oct 28 06:14:30 GMT 2025","2627","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Tue Oct 28 06:21:47 GMT 2025","Tue Oct 28 06:21:47 GMT 2025","260","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Tue Oct 28 06:13:32 GMT 2025","Tue Oct 28 06:13:35 GMT 2025","2210","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Tue Oct 28 06:12:08 GMT 2025","Tue Oct 28 06:12:10 GMT 2025","2359","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Tue Oct 28 06:11:21 GMT 2025","Tue Oct 28 06:11:22 GMT 2025","1227","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Tue Oct 28 06:12:32 GMT 2025","Tue Oct 28 06:12:32 GMT 2025","84","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Tue Oct 28 06:13:35 GMT 2025","Tue Oct 28 06:13:39 GMT 2025","4114","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Tue Oct 28 06:12:10 GMT 2025","Tue Oct 28 06:12:13 GMT 2025","2203","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Tue Oct 28 06:10:57 GMT 2025","Tue Oct 28 06:10:59 GMT 2025","2167","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Tue Oct 28 06:13:03 GMT 2025","Tue Oct 28 06:13:05 GMT 2025","2325","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Tue Oct 28 06:10:50 GMT 2025","Tue Oct 28 06:10:50 GMT 2025","263","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Tue Oct 28 06:12:15 GMT 2025","Tue Oct 28 06:12:17 GMT 2025","2178","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Tue Oct 28 06:10:48 GMT 2025","Tue Oct 28 06:10:48 GMT 2025","270","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Tue Oct 28 06:12:33 GMT 2025","Tue Oct 28 06:12:33 GMT 2025","83","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Tue Oct 28 06:11:43 GMT 2025","Tue Oct 28 06:11:47 GMT 2025","4003","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Tue Oct 28 06:10:49 GMT 2025","Tue Oct 28 06:10:49 GMT 2025","268","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Tue Oct 28 06:21:44 GMT 2025","Tue Oct 28 06:21:45 GMT 2025","338","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Tue Oct 28 06:21:42 GMT 2025","Tue Oct 28 06:21:43 GMT 2025","437","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Tue Oct 28 06:12:19 GMT 2025","Tue Oct 28 06:12:21 GMT 2025","2150","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Tue Oct 28 06:14:21 GMT 2025","Tue Oct 28 06:14:23 GMT 2025","1876","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Tue Oct 28 06:12:33 GMT 2025","Tue Oct 28 06:12:33 GMT 2025","83","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Tue Oct 28 06:12:29 GMT 2025","Tue Oct 28 06:12:31 GMT 2025","2558","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Tue Oct 28 06:12:33 GMT 2025","Tue Oct 28 06:12:33 GMT 2025","85","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Tue Oct 28 06:10:41 GMT 2025","Tue Oct 28 06:10:43 GMT 2025","2073","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Tue Oct 28 06:10:50 GMT 2025","Tue Oct 28 06:10:50 GMT 2025","266","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Tue Oct 28 06:11:02 GMT 2025","Tue Oct 28 06:11:02 GMT 2025","213","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Tue Oct 28 06:12:21 GMT 2025","Tue Oct 28 06:12:23 GMT 2025","2269","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Tue Oct 28 06:10:52 GMT 2025","Tue Oct 28 06:10:52 GMT 2025","280","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Tue Oct 28 06:12:32 GMT 2025","Tue Oct 28 06:12:32 GMT 2025","85","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Tue Oct 28 06:21:43 GMT 2025","Tue Oct 28 06:21:43 GMT 2025","265","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Tue Oct 28 06:14:33 GMT 2025","Tue Oct 28 06:14:34 GMT 2025","1672","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Tue Oct 28 06:10:51 GMT 2025","Tue Oct 28 06:10:51 GMT 2025","262","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Tue Oct 28 06:13:00 GMT 2025","Tue Oct 28 06:13:03 GMT 2025","2852","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Tue Oct 28 06:21:43 GMT 2025","Tue Oct 28 06:21:43 GMT 2025","259","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Tue Oct 28 06:12:32 GMT 2025","Tue Oct 28 06:12:32 GMT 2025","83","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Tue Oct 28 06:12:33 GMT 2025","Tue Oct 28 06:12:33 GMT 2025","83","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Tue Oct 28 06:10:51 GMT 2025","Tue Oct 28 06:10:52 GMT 2025","281","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Tue Oct 28 06:21:45 GMT 2025","Tue Oct 28 06:21:45 GMT 2025","342","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Tue Oct 28 06:13:09 GMT 2025","Tue Oct 28 06:13:11 GMT 2025","2168","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Tue Oct 28 06:13:13 GMT 2025","Tue Oct 28 06:13:18 GMT 2025","4722","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Tue Oct 28 06:10:45 GMT 2025","Tue Oct 28 06:10:45 GMT 2025","769","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Tue Oct 28 06:12:33 GMT 2025","Tue Oct 28 06:12:54 GMT 2025","20643","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Tue Oct 28 06:13:07 GMT 2025","Tue Oct 28 06:13:09 GMT 2025","2220","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Tue Oct 28 06:12:57 GMT 2025","Tue Oct 28 06:13:00 GMT 2025","2300","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Tue Oct 28 06:13:46 GMT 2025","Tue Oct 28 06:13:48 GMT 2025","1435","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Tue Oct 28 06:21:44 GMT 2025","Tue Oct 28 06:21:44 GMT 2025","436","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Tue Oct 28 06:11:14 GMT 2025","Tue Oct 28 06:11:16 GMT 2025","2166","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Tue Oct 28 06:13:51 GMT 2025","Tue Oct 28 06:13:53 GMT 2025","1981","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Tue Oct 28 06:21:47 GMT 2025","Tue Oct 28 06:21:47 GMT 2025","9","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Tue Oct 28 06:11:22 GMT 2025","Tue Oct 28 06:11:25 GMT 2025","2674","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Tue Oct 28 06:12:26 GMT 2025","Tue Oct 28 06:12:29 GMT 2025","2780","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Tue Oct 28 06:10:51 GMT 2025","Tue Oct 28 06:10:51 GMT 2025","266","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Tue Oct 28 06:13:24 GMT 2025","Tue Oct 28 06:13:27 GMT 2025","2816","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Tue Oct 28 06:11:05 GMT 2025","Tue Oct 28 06:11:08 GMT 2025","2833","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Tue Oct 28 06:13:53 GMT 2025","Tue Oct 28 06:13:55 GMT 2025","2179","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Tue Oct 28 06:13:27 GMT 2025","Tue Oct 28 06:13:30 GMT 2025","2982","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Tue Oct 28 06:14:30 GMT 2025","Tue Oct 28 06:14:31 GMT 2025","1196","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Tue Oct 28 06:13:18 GMT 2025","Tue Oct 28 06:13:21 GMT 2025","2799","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Tue Oct 28 06:21:47 GMT 2025","Tue Oct 28 06:21:47 GMT 2025","45","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Tue Oct 28 06:11:16 GMT 2025","Tue Oct 28 06:11:18 GMT 2025","2184","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Tue Oct 28 06:12:54 GMT 2025","Tue Oct 28 06:12:57 GMT 2025","3527","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Tue Oct 28 06:10:50 GMT 2025","Tue Oct 28 06:10:51 GMT 2025","262","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Tue Oct 28 06:11:32 GMT 2025","Tue Oct 28 06:11:35 GMT 2025","3362","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Tue Oct 28 06:21:45 GMT 2025","Tue Oct 28 06:21:47 GMT 2025","1706","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"skipped","Tue Oct 28 06:12:29 GMT 2025","Tue Oct 28 06:12:29 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Tue Oct 28 06:11:10 GMT 2025","Tue Oct 28 06:11:12 GMT 2025","2133","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Tue Oct 28 06:10:44 GMT 2025","Tue Oct 28 06:10:45 GMT 2025","573","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Tue Oct 28 06:11:27 GMT 2025","Tue Oct 28 06:11:29 GMT 2025","2252","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Tue Oct 28 06:14:16 GMT 2025","Tue Oct 28 06:14:17 GMT 2025","1159","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Tue Oct 28 06:10:48 GMT 2025","Tue Oct 28 06:10:48 GMT 2025","267","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Tue Oct 28 06:12:32 GMT 2025","Tue Oct 28 06:12:32 GMT 2025","84","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Tue Oct 28 06:12:32 GMT 2025","Tue Oct 28 06:12:32 GMT 2025","83","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Tue Oct 28 06:12:32 GMT 2025","Tue Oct 28 06:12:33 GMT 2025","84","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Tue Oct 28 06:11:52 GMT 2025","Tue Oct 28 06:11:53 GMT 2025","1259","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Tue Oct 28 06:14:17 GMT 2025","Tue Oct 28 06:14:19 GMT 2025","1530","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Tue Oct 28 06:11:39 GMT 2025","Tue Oct 28 06:11:43 GMT 2025","3750","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Tue Oct 28 06:13:58 GMT 2025","Tue Oct 28 06:14:11 GMT 2025","13795","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Tue Oct 28 06:13:21 GMT 2025","Tue Oct 28 06:13:24 GMT 2025","3335","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Tue Oct 28 06:12:05 GMT 2025","Tue Oct 28 06:12:08 GMT 2025","3242","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Tue Oct 28 06:13:55 GMT 2025","Tue Oct 28 06:13:56 GMT 2025","1455","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Tue Oct 28 06:13:05 GMT 2025","Tue Oct 28 06:13:07 GMT 2025","2099","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Tue Oct 28 06:13:56 GMT 2025","Tue Oct 28 06:13:58 GMT 2025","1271","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Tue Oct 28 06:13:39 GMT 2025","Tue Oct 28 06:13:41 GMT 2025","2071","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Tue Oct 28 06:11:08 GMT 2025","Tue Oct 28 06:11:10 GMT 2025","2173","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Tue Oct 28 06:11:02 GMT 2025","Tue Oct 28 06:11:05 GMT 2025","2778","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Tue Oct 28 06:12:02 GMT 2025","Tue Oct 28 06:12:05 GMT 2025","2588","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Tue Oct 28 06:12:32 GMT 2025","Tue Oct 28 06:12:32 GMT 2025","83","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Tue Oct 28 06:10:43 GMT 2025","Tue Oct 28 06:10:44 GMT 2025","786","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Tue Oct 28 06:12:33 GMT 2025","Tue Oct 28 06:12:33 GMT 2025","84","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Tue Oct 28 06:12:32 GMT 2025","Tue Oct 28 06:12:32 GMT 2025","84","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Tue Oct 28 06:12:32 GMT 2025","Tue Oct 28 06:12:32 GMT 2025","84","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Tue Oct 28 06:12:33 GMT 2025","Tue Oct 28 06:12:33 GMT 2025","82","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Tue Oct 28 06:21:47 GMT 2025","Tue Oct 28 06:21:47 GMT 2025","7","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Tue Oct 28 06:10:49 GMT 2025","Tue Oct 28 06:10:49 GMT 2025","266","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Tue Oct 28 06:14:34 GMT 2025","Tue Oct 28 06:14:36 GMT 2025","1906","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Tue Oct 28 06:10:49 GMT 2025","Tue Oct 28 06:10:49 GMT 2025","264","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Tue Oct 28 06:10:59 GMT 2025","Tue Oct 28 06:11:02 GMT 2025","2136","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Tue Oct 28 06:11:18 GMT 2025","Tue Oct 28 06:11:21 GMT 2025","2200","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Tue Oct 28 06:14:36 GMT 2025","Tue Oct 28 06:21:39 GMT 2025","422543","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Tue Oct 28 06:21:43 GMT 2025","Tue Oct 28 06:21:43 GMT 2025","265","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Tue Oct 28 06:11:47 GMT 2025","Tue Oct 28 06:11:49 GMT 2025","1727","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Tue Oct 28 06:13:30 GMT 2025","Tue Oct 28 06:13:32 GMT 2025","2207","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Tue Oct 28 06:14:23 GMT 2025","Tue Oct 28 06:14:28 GMT 2025","4586","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Tue Oct 28 06:21:47 GMT 2025","Tue Oct 28 06:21:47 GMT 2025","229","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
