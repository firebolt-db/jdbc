"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Mon Oct 27 15:22:45 GMT 2025","Mon Oct 27 15:22:46 GMT 2025","1071","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Mon Oct 27 15:23:27 GMT 2025","Mon Oct 27 15:23:28 GMT 2025","1199","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Mon Oct 27 15:20:36 GMT 2025","Mon Oct 27 15:20:38 GMT 2025","2157","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Oct 27 15:20:29 GMT 2025","Mon Oct 27 15:20:31 GMT 2025","2207","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Oct 27 15:20:10 GMT 2025","Mon Oct 27 15:20:12 GMT 2025","2177","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Mon Oct 27 15:30:37 GMT 2025","Mon Oct 27 15:30:37 GMT 2025","333","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Mon Oct 27 15:30:40 GMT 2025","Mon Oct 27 15:30:40 GMT 2025","55","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Mon Oct 27 15:20:04 GMT 2025","Mon Oct 27 15:20:04 GMT 2025","249","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Mon Oct 27 15:20:08 GMT 2025","Mon Oct 27 15:20:08 GMT 2025","137","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Mon Oct 27 15:30:37 GMT 2025","Mon Oct 27 15:30:37 GMT 2025","204","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Mon Oct 27 15:22:29 GMT 2025","Mon Oct 27 15:22:30 GMT 2025","1100","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Mon Oct 27 15:20:33 GMT 2025","Mon Oct 27 15:20:34 GMT 2025","1195","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","62","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Mon Oct 27 15:30:37 GMT 2025","Mon Oct 27 15:30:37 GMT 2025","271","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Mon Oct 27 15:22:31 GMT 2025","Mon Oct 27 15:22:33 GMT 2025","2175","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Mon Oct 27 15:22:30 GMT 2025","Mon Oct 27 15:22:31 GMT 2025","1100","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Mon Oct 27 15:21:45 GMT 2025","Mon Oct 27 15:21:45 GMT 2025","64","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Mon Oct 27 15:21:11 GMT 2025","Mon Oct 27 15:21:15 GMT 2025","3097","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Mon Oct 27 15:20:04 GMT 2025","Mon Oct 27 15:20:04 GMT 2025","242","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Mon Oct 27 15:23:20 GMT 2025","Mon Oct 27 15:23:22 GMT 2025","2342","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Mon Oct 27 15:20:43 GMT 2025","Mon Oct 27 15:20:46 GMT 2025","3346","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Mon Oct 27 15:30:40 GMT 2025","Mon Oct 27 15:30:40 GMT 2025","8","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Mon Oct 27 15:20:07 GMT 2025","Mon Oct 27 15:20:07 GMT 2025","202","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Mon Oct 27 15:30:40 GMT 2025","Mon Oct 27 15:30:40 GMT 2025","187","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Mon Oct 27 15:20:06 GMT 2025","Mon Oct 27 15:20:06 GMT 2025","211","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Mon Oct 27 15:20:34 GMT 2025","Mon Oct 27 15:20:36 GMT 2025","2020","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","63","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Mon Oct 27 15:23:12 GMT 2025","Mon Oct 27 15:23:13 GMT 2025","1193","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Mon Oct 27 15:21:00 GMT 2025","Mon Oct 27 15:21:03 GMT 2025","2741","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Mon Oct 27 15:30:38 GMT 2025","Mon Oct 27 15:30:38 GMT 2025","258","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Mon Oct 27 15:22:20 GMT 2025","Mon Oct 27 15:22:23 GMT 2025","3082","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","62","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Mon Oct 27 15:21:09 GMT 2025","Mon Oct 27 15:21:11 GMT 2025","2212","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Mon Oct 27 15:21:29 GMT 2025","Mon Oct 27 15:21:33 GMT 2025","3593","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Mon Oct 27 15:23:08 GMT 2025","Mon Oct 27 15:23:10 GMT 2025","1579","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Mon Oct 27 15:20:15 GMT 2025","Mon Oct 27 15:20:17 GMT 2025","2001","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Mon Oct 27 15:21:07 GMT 2025","Mon Oct 27 15:21:09 GMT 2025","2333","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Mon Oct 27 15:20:04 GMT 2025","Mon Oct 27 15:20:04 GMT 2025","241","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Mon Oct 27 15:20:06 GMT 2025","Mon Oct 27 15:20:06 GMT 2025","209","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Mon Oct 27 15:23:13 GMT 2025","Mon Oct 27 15:23:14 GMT 2025","1044","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Mon Oct 27 15:20:20 GMT 2025","Mon Oct 27 15:20:23 GMT 2025","2305","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"skipped","Mon Oct 27 15:21:40 GMT 2025","Mon Oct 27 15:21:40 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","62","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","68","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Mon Oct 27 15:20:05 GMT 2025","Mon Oct 27 15:20:06 GMT 2025","217","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Mon Oct 27 15:23:32 GMT 2025","Mon Oct 27 15:30:32 GMT 2025","420091","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","61","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Mon Oct 27 15:20:05 GMT 2025","Mon Oct 27 15:20:05 GMT 2025","241","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Mon Oct 27 15:20:03 GMT 2025","Mon Oct 27 15:20:04 GMT 2025","206","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Mon Oct 27 15:22:35 GMT 2025","Mon Oct 27 15:22:37 GMT 2025","1991","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Mon Oct 27 15:30:40 GMT 2025","Mon Oct 27 15:30:40 GMT 2025","6","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Mon Oct 27 15:30:36 GMT 2025","Mon Oct 27 15:30:37 GMT 2025","194","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Mon Oct 27 15:20:52 GMT 2025","Mon Oct 27 15:20:55 GMT 2025","2335","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Mon Oct 27 15:23:14 GMT 2025","Mon Oct 27 15:23:16 GMT 2025","2192","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Mon Oct 27 15:22:42 GMT 2025","Mon Oct 27 15:22:44 GMT 2025","2298","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Mon Oct 27 15:23:10 GMT 2025","Mon Oct 27 15:23:12 GMT 2025","2047","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Mon Oct 27 15:22:24 GMT 2025","Mon Oct 27 15:22:27 GMT 2025","2739","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Mon Oct 27 15:22:33 GMT 2025","Mon Oct 27 15:22:35 GMT 2025","1686","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Mon Oct 27 15:20:31 GMT 2025","Mon Oct 27 15:20:33 GMT 2025","2173","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Oct 27 15:20:07 GMT 2025","Mon Oct 27 15:20:08 GMT 2025","204","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Mon Oct 27 15:21:40 GMT 2025","Mon Oct 27 15:21:45 GMT 2025","4633","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Mon Oct 27 15:30:36 GMT 2025","Mon Oct 27 15:30:36 GMT 2025","360","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:22:08 GMT 2025","21957","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Mon Oct 27 15:22:48 GMT 2025","Mon Oct 27 15:22:50 GMT 2025","1142","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Mon Oct 27 15:23:29 GMT 2025","Mon Oct 27 15:23:32 GMT 2025","2496","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Mon Oct 27 15:20:23 GMT 2025","Mon Oct 27 15:20:25 GMT 2025","2101","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Oct 27 15:20:18 GMT 2025","Mon Oct 27 15:20:20 GMT 2025","2134","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Oct 27 15:21:27 GMT 2025","Mon Oct 27 15:21:29 GMT 2025","2889","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Mon Oct 27 15:20:07 GMT 2025","Mon Oct 27 15:20:07 GMT 2025","209","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","61","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Mon Oct 27 15:21:17 GMT 2025","Mon Oct 27 15:21:19 GMT 2025","2171","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Mon Oct 27 15:22:19 GMT 2025","Mon Oct 27 15:22:20 GMT 2025","1054","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Mon Oct 27 15:30:37 GMT 2025","Mon Oct 27 15:30:38 GMT 2025","256","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Mon Oct 27 15:20:01 GMT 2025","Mon Oct 27 15:20:02 GMT 2025","1178","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Mon Oct 27 15:20:48 GMT 2025","Mon Oct 27 15:20:52 GMT 2025","3910","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Mon Oct 27 15:20:06 GMT 2025","Mon Oct 27 15:20:07 GMT 2025","209","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Mon Oct 27 15:22:27 GMT 2025","Mon Oct 27 15:22:29 GMT 2025","1929","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Mon Oct 27 15:21:45 GMT 2025","Mon Oct 27 15:21:45 GMT 2025","63","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Mon Oct 27 15:21:45 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Mon Oct 27 15:21:15 GMT 2025","Mon Oct 27 15:21:17 GMT 2025","2158","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Mon Oct 27 15:30:36 GMT 2025","Mon Oct 27 15:30:36 GMT 2025","204","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Mon Oct 27 15:22:46 GMT 2025","Mon Oct 27 15:22:48 GMT 2025","2070","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Mon Oct 27 15:22:44 GMT 2025","Mon Oct 27 15:22:45 GMT 2025","1103","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Mon Oct 27 15:20:17 GMT 2025","Mon Oct 27 15:20:18 GMT 2025","1335","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Oct 27 15:21:03 GMT 2025","Mon Oct 27 15:21:07 GMT 2025","3875","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Mon Oct 27 15:19:57 GMT 2025","Mon Oct 27 15:19:59 GMT 2025","2006","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Mon Oct 27 15:21:19 GMT 2025","Mon Oct 27 15:21:21 GMT 2025","2204","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Mon Oct 27 15:23:26 GMT 2025","Mon Oct 27 15:23:27 GMT 2025","1224","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Mon Oct 27 15:20:03 GMT 2025","Mon Oct 27 15:20:03 GMT 2025","214","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Mon Oct 27 15:21:45 GMT 2025","Mon Oct 27 15:21:45 GMT 2025","63","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Mon Oct 27 15:20:02 GMT 2025","Mon Oct 27 15:20:03 GMT 2025","1007","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Mon Oct 27 15:23:32 GMT 2025","Mon Oct 27 15:23:32 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Mon Oct 27 15:22:16 GMT 2025","Mon Oct 27 15:22:17 GMT 2025","1130","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Mon Oct 27 15:23:22 GMT 2025","Mon Oct 27 15:23:26 GMT 2025","3390","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Mon Oct 27 15:21:33 GMT 2025","Mon Oct 27 15:21:37 GMT 2025","3910","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Mon Oct 27 15:23:28 GMT 2025","Mon Oct 27 15:23:29 GMT 2025","1204","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","62","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Mon Oct 27 15:23:16 GMT 2025","Mon Oct 27 15:23:18 GMT 2025","1504","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Mon Oct 27 15:21:45 GMT 2025","Mon Oct 27 15:21:45 GMT 2025","64","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Mon Oct 27 15:22:23 GMT 2025","Mon Oct 27 15:22:24 GMT 2025","1398","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Mon Oct 27 15:20:27 GMT 2025","Mon Oct 27 15:20:29 GMT 2025","1564","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Oct 27 15:20:06 GMT 2025","Mon Oct 27 15:20:06 GMT 2025","232","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","62","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Mon Oct 27 15:21:37 GMT 2025","Mon Oct 27 15:21:40 GMT 2025","3341","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Mon Oct 27 15:20:59 GMT 2025","Mon Oct 27 15:21:00 GMT 2025","1105","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Mon Oct 27 15:20:17 GMT 2025","Mon Oct 27 15:20:17 GMT 2025","148","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Mon Oct 27 15:19:59 GMT 2025","Mon Oct 27 15:20:00 GMT 2025","911","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Mon Oct 27 15:20:25 GMT 2025","Mon Oct 27 15:20:27 GMT 2025","2252","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Oct 27 15:23:18 GMT 2025","Mon Oct 27 15:23:20 GMT 2025","2111","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Mon Oct 27 15:20:55 GMT 2025","Mon Oct 27 15:20:56 GMT 2025","1204","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Mon Oct 27 15:22:52 GMT 2025","Mon Oct 27 15:23:08 GMT 2025","16479","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Mon Oct 27 15:22:13 GMT 2025","Mon Oct 27 15:22:14 GMT 2025","1150","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Mon Oct 27 15:22:10 GMT 2025","Mon Oct 27 15:22:11 GMT 2025","1163","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Mon Oct 27 15:22:41 GMT 2025","Mon Oct 27 15:22:42 GMT 2025","997","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","64","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Mon Oct 27 15:20:00 GMT 2025","Mon Oct 27 15:20:00 GMT 2025","710","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Mon Oct 27 15:20:12 GMT 2025","Mon Oct 27 15:20:15 GMT 2025","2246","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Mon Oct 27 15:20:05 GMT 2025","Mon Oct 27 15:20:05 GMT 2025","219","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Mon Oct 27 15:30:38 GMT 2025","Mon Oct 27 15:30:40 GMT 2025","1712","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Mon Oct 27 15:20:07 GMT 2025","Mon Oct 27 15:20:07 GMT 2025","207","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Mon Oct 27 15:22:50 GMT 2025","Mon Oct 27 15:22:52 GMT 2025","2344","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Mon Oct 27 15:20:07 GMT 2025","Mon Oct 27 15:20:07 GMT 2025","211","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Mon Oct 27 15:21:23 GMT 2025","Mon Oct 27 15:21:27 GMT 2025","3159","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","61","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Mon Oct 27 15:20:04 GMT 2025","Mon Oct 27 15:20:05 GMT 2025","219","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Mon Oct 27 15:22:08 GMT 2025","Mon Oct 27 15:22:10 GMT 2025","1912","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Mon Oct 27 15:22:11 GMT 2025","Mon Oct 27 15:22:13 GMT 2025","1568","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Mon Oct 27 15:20:41 GMT 2025","Mon Oct 27 15:20:43 GMT 2025","2201","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Oct 27 15:22:14 GMT 2025","Mon Oct 27 15:22:16 GMT 2025","1553","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Mon Oct 27 15:20:38 GMT 2025","Mon Oct 27 15:20:41 GMT 2025","2350","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Oct 27 15:22:17 GMT 2025","Mon Oct 27 15:22:19 GMT 2025","1737","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Mon Oct 27 15:20:06 GMT 2025","Mon Oct 27 15:20:06 GMT 2025","202","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Mon Oct 27 15:20:46 GMT 2025","Mon Oct 27 15:20:48 GMT 2025","2028","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Mon Oct 27 15:20:08 GMT 2025","Mon Oct 27 15:20:10 GMT 2025","2083","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Mon Oct 27 15:22:37 GMT 2025","Mon Oct 27 15:22:39 GMT 2025","1915","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Mon Oct 27 15:22:39 GMT 2025","Mon Oct 27 15:22:41 GMT 2025","2162","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Mon Oct 27 15:21:21 GMT 2025","Mon Oct 27 15:21:23 GMT 2025","2267","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Mon Oct 27 15:20:17 GMT 2025","Mon Oct 27 15:20:17 GMT 2025","125","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Mon Oct 27 15:20:05 GMT 2025","Mon Oct 27 15:20:05 GMT 2025","223","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Mon Oct 27 15:21:46 GMT 2025","Mon Oct 27 15:21:46 GMT 2025","61","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Mon Oct 27 15:20:56 GMT 2025","Mon Oct 27 15:20:59 GMT 2025","3395","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Mon Oct 27 15:30:40 GMT 2025","Mon Oct 27 15:30:40 GMT 2025","279","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
