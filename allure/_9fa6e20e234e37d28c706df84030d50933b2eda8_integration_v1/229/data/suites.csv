"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Oct 30 05:51:52 GMT 2025","Thu Oct 30 05:51:54 GMT 2025","1634","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Thu Oct 30 05:53:37 GMT 2025","Thu Oct 30 05:53:38 GMT 2025","1069","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Thu Oct 30 05:54:06 GMT 2025","Thu Oct 30 05:54:06 GMT 2025","575","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","19","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Thu Oct 30 05:53:48 GMT 2025","Thu Oct 30 05:53:49 GMT 2025","1076","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Thu Oct 30 06:01:32 GMT 2025","Thu Oct 30 06:01:33 GMT 2025","292","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Thu Oct 30 05:52:11 GMT 2025","Thu Oct 30 05:52:13 GMT 2025","2044","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Thu Oct 30 05:51:45 GMT 2025","Thu Oct 30 05:51:47 GMT 2025","1910","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 30 06:01:30 GMT 2025","Thu Oct 30 06:01:30 GMT 2025","87","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Thu Oct 30 06:01:30 GMT 2025","Thu Oct 30 06:01:30 GMT 2025","115","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Thu Oct 30 05:54:09 GMT 2025","Thu Oct 30 05:54:11 GMT 2025","2335","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","21","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Thu Oct 30 05:52:40 GMT 2025","Thu Oct 30 05:52:42 GMT 2025","2124","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Thu Oct 30 05:51:59 GMT 2025","Thu Oct 30 05:51:59 GMT 2025","613","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Thu Oct 30 05:51:34 GMT 2025","Thu Oct 30 05:51:35 GMT 2025","754","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Thu Oct 30 05:52:13 GMT 2025","Thu Oct 30 05:52:16 GMT 2025","3818","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Thu Oct 30 05:51:39 GMT 2025","Thu Oct 30 05:51:41 GMT 2025","1844","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","86","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Thu Oct 30 06:01:32 GMT 2025","Thu Oct 30 06:01:32 GMT 2025","9","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Thu Oct 30 05:53:50 GMT 2025","Thu Oct 30 05:53:51 GMT 2025","1126","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Thu Oct 30 05:51:37 GMT 2025","Thu Oct 30 05:51:37 GMT 2025","73","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Thu Oct 30 05:51:37 GMT 2025","Thu Oct 30 05:51:37 GMT 2025","77","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Thu Oct 30 05:51:37 GMT 2025","Thu Oct 30 05:51:37 GMT 2025","74","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Thu Oct 30 05:53:47 GMT 2025","Thu Oct 30 05:53:48 GMT 2025","1346","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Thu Oct 30 05:52:16 GMT 2025","Thu Oct 30 05:52:18 GMT 2025","1935","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Thu Oct 30 05:51:37 GMT 2025","Thu Oct 30 05:51:37 GMT 2025","75","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Thu Oct 30 06:01:30 GMT 2025","Thu Oct 30 06:01:30 GMT 2025","106","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Thu Oct 30 05:53:43 GMT 2025","Thu Oct 30 05:53:44 GMT 2025","598","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","23","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Thu Oct 30 05:53:42 GMT 2025","Thu Oct 30 05:53:43 GMT 2025","1141","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","19","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Thu Oct 30 05:52:38 GMT 2025","Thu Oct 30 05:52:40 GMT 2025","2068","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","48","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Thu Oct 30 05:53:52 GMT 2025","Thu Oct 30 05:54:03 GMT 2025","10936","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Thu Oct 30 05:54:18 GMT 2025","Thu Oct 30 05:54:18 GMT 2025","628","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Thu Oct 30 05:52:28 GMT 2025","Thu Oct 30 05:52:30 GMT 2025","2148","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Thu Oct 30 05:53:49 GMT 2025","Thu Oct 30 05:53:50 GMT 2025","1169","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Thu Oct 30 05:53:21 GMT 2025","Thu Oct 30 05:53:22 GMT 2025","1004","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Thu Oct 30 05:53:28 GMT 2025","Thu Oct 30 05:53:29 GMT 2025","1022","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Thu Oct 30 05:51:42 GMT 2025","Thu Oct 30 05:51:44 GMT 2025","1589","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Thu Oct 30 05:53:45 GMT 2025","Thu Oct 30 05:53:47 GMT 2025","1886","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Thu Oct 30 05:54:05 GMT 2025","Thu Oct 30 05:54:05 GMT 2025","668","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Thu Oct 30 05:53:32 GMT 2025","Thu Oct 30 05:53:35 GMT 2025","2138","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","19","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Thu Oct 30 05:51:32 GMT 2025","Thu Oct 30 05:51:34 GMT 2025","1997","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Thu Oct 30 05:54:14 GMT 2025","Thu Oct 30 05:54:16 GMT 2025","1975","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","72","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Thu Oct 30 05:53:39 GMT 2025","Thu Oct 30 05:53:40 GMT 2025","1142","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Thu Oct 30 05:51:59 GMT 2025","Thu Oct 30 05:52:02 GMT 2025","2084","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","72","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","20","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Thu Oct 30 06:01:30 GMT 2025","Thu Oct 30 06:01:30 GMT 2025","118","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Thu Oct 30 05:51:44 GMT 2025","Thu Oct 30 05:51:45 GMT 2025","1597","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","70","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","20","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Thu Oct 30 06:01:30 GMT 2025","Thu Oct 30 06:01:30 GMT 2025","81","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Thu Oct 30 05:51:54 GMT 2025","Thu Oct 30 05:51:55 GMT 2025","1540","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 30 05:53:51 GMT 2025","Thu Oct 30 05:53:52 GMT 2025","572","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Thu Oct 30 05:52:54 GMT 2025","Thu Oct 30 05:52:57 GMT 2025","2932","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Thu Oct 30 05:54:22 GMT 2025","Thu Oct 30 05:54:22 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","19","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Thu Oct 30 05:52:36 GMT 2025","Thu Oct 30 05:52:38 GMT 2025","2049","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Thu Oct 30 05:53:36 GMT 2025","Thu Oct 30 05:53:37 GMT 2025","996","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Thu Oct 30 05:54:11 GMT 2025","Thu Oct 30 05:54:14 GMT 2025","2220","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Thu Oct 30 05:51:45 GMT 2025","Thu Oct 30 05:51:45 GMT 2025","47","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","70","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","70","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Thu Oct 30 05:51:37 GMT 2025","Thu Oct 30 05:51:37 GMT 2025","82","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","19","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Thu Oct 30 05:53:35 GMT 2025","Thu Oct 30 05:53:36 GMT 2025","911","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","20","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Thu Oct 30 05:53:38 GMT 2025","Thu Oct 30 05:53:39 GMT 2025","1108","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Thu Oct 30 06:01:29 GMT 2025","Thu Oct 30 06:01:30 GMT 2025","225","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Thu Oct 30 05:52:24 GMT 2025","Thu Oct 30 05:52:26 GMT 2025","2220","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","77","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Thu Oct 30 05:52:57 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","3004","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Thu Oct 30 05:52:26 GMT 2025","Thu Oct 30 05:52:28 GMT 2025","2248","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","66","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Thu Oct 30 05:54:03 GMT 2025","Thu Oct 30 05:54:03 GMT 2025","607","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Thu Oct 30 06:01:32 GMT 2025","Thu Oct 30 06:01:32 GMT 2025","66","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","75","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Thu Oct 30 05:51:37 GMT 2025","Thu Oct 30 05:51:37 GMT 2025","124","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Thu Oct 30 05:51:35 GMT 2025","Thu Oct 30 05:51:36 GMT 2025","641","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Thu Oct 30 05:53:44 GMT 2025","Thu Oct 30 05:53:45 GMT 2025","908","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Thu Oct 30 05:51:49 GMT 2025","Thu Oct 30 05:51:51 GMT 2025","1517","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 30 05:52:23 GMT 2025","Thu Oct 30 05:52:24 GMT 2025","563","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Thu Oct 30 05:51:45 GMT 2025","Thu Oct 30 05:51:45 GMT 2025","70","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Thu Oct 30 05:53:40 GMT 2025","Thu Oct 30 05:53:42 GMT 2025","2184","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Thu Oct 30 05:54:18 GMT 2025","Thu Oct 30 05:54:22 GMT 2025","4037","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Thu Oct 30 05:53:18 GMT 2025","Thu Oct 30 05:53:20 GMT 2025","1461","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"skipped","Thu Oct 30 05:52:57 GMT 2025","Thu Oct 30 05:52:57 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Thu Oct 30 05:52:05 GMT 2025","Thu Oct 30 05:52:07 GMT 2025","2157","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","65","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Thu Oct 30 05:51:41 GMT 2025","Thu Oct 30 05:51:42 GMT 2025","1634","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Thu Oct 30 05:53:20 GMT 2025","Thu Oct 30 05:53:21 GMT 2025","1010","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Thu Oct 30 05:54:16 GMT 2025","Thu Oct 30 05:54:18 GMT 2025","2181","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","19","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Thu Oct 30 05:52:50 GMT 2025","Thu Oct 30 05:52:54 GMT 2025","3228","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Thu Oct 30 05:52:18 GMT 2025","Thu Oct 30 05:52:19 GMT 2025","1077","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","20","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","21","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Thu Oct 30 05:53:29 GMT 2025","Thu Oct 30 05:53:31 GMT 2025","2578","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","78","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","20","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Thu Oct 30 05:52:42 GMT 2025","Thu Oct 30 05:52:44 GMT 2025","2158","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","19","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Thu Oct 30 05:52:30 GMT 2025","Thu Oct 30 05:52:32 GMT 2025","2105","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Thu Oct 30 06:01:33 GMT 2025","Thu Oct 30 06:01:33 GMT 2025","15","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Thu Oct 30 05:51:36 GMT 2025","Thu Oct 30 05:51:37 GMT 2025","656","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Thu Oct 30 05:52:46 GMT 2025","Thu Oct 30 05:52:48 GMT 2025","2130","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Thu Oct 30 05:52:48 GMT 2025","Thu Oct 30 05:52:50 GMT 2025","2075","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","22","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Thu Oct 30 05:52:44 GMT 2025","Thu Oct 30 05:52:46 GMT 2025","2208","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Thu Oct 30 05:51:37 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","69","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Thu Oct 30 05:54:08 GMT 2025","Thu Oct 30 05:54:09 GMT 2025","1095","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Thu Oct 30 05:53:24 GMT 2025","Thu Oct 30 05:53:25 GMT 2025","583","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Thu Oct 30 05:53:22 GMT 2025","Thu Oct 30 05:53:24 GMT 2025","2244","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Thu Oct 30 05:51:38 GMT 2025","Thu Oct 30 05:51:38 GMT 2025","67","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Thu Oct 30 05:52:02 GMT 2025","Thu Oct 30 05:52:03 GMT 2025","1337","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 30 06:01:32 GMT 2025","Thu Oct 30 06:01:32 GMT 2025","74","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Thu Oct 30 05:53:26 GMT 2025","Thu Oct 30 05:53:28 GMT 2025","2148","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Thu Oct 30 05:52:03 GMT 2025","Thu Oct 30 05:52:05 GMT 2025","2298","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 30 05:52:19 GMT 2025","Thu Oct 30 05:52:23 GMT 2025","3705","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Thu Oct 30 05:54:03 GMT 2025","Thu Oct 30 05:54:05 GMT 2025","1271","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Thu Oct 30 05:52:07 GMT 2025","Thu Oct 30 05:52:11 GMT 2025","3220","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Thu Oct 30 05:51:57 GMT 2025","Thu Oct 30 05:51:59 GMT 2025","1722","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 30 05:54:05 GMT 2025","Thu Oct 30 05:54:06 GMT 2025","525","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:18 GMT 2025","18140","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Thu Oct 30 05:53:31 GMT 2025","Thu Oct 30 05:53:32 GMT 2025","1110","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Thu Oct 30 05:54:22 GMT 2025","Thu Oct 30 06:01:26 GMT 2025","423726","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Thu Oct 30 05:51:35 GMT 2025","Thu Oct 30 05:51:35 GMT 2025","565","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Thu Oct 30 06:01:30 GMT 2025","Thu Oct 30 06:01:30 GMT 2025","85","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Thu Oct 30 05:51:55 GMT 2025","Thu Oct 30 05:51:57 GMT 2025","1691","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Thu Oct 30 05:53:00 GMT 2025","Thu Oct 30 05:53:00 GMT 2025","19","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Thu Oct 30 05:51:47 GMT 2025","Thu Oct 30 05:51:49 GMT 2025","1706","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 30 05:54:06 GMT 2025","Thu Oct 30 05:54:08 GMT 2025","1420","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Thu Oct 30 06:01:30 GMT 2025","Thu Oct 30 06:01:32 GMT 2025","1479","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Thu Oct 30 05:53:25 GMT 2025","Thu Oct 30 05:53:26 GMT 2025","999","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Thu Oct 30 06:01:30 GMT 2025","Thu Oct 30 06:01:30 GMT 2025","130","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Thu Oct 30 05:51:37 GMT 2025","Thu Oct 30 05:51:37 GMT 2025","96","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Thu Oct 30 05:51:51 GMT 2025","Thu Oct 30 05:51:52 GMT 2025","1638","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Thu Oct 30 05:52:32 GMT 2025","Thu Oct 30 05:52:36 GMT 2025","3095","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
