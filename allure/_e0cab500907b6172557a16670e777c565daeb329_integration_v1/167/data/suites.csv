"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sat Aug 30 06:12:09 GMT 2025","Sat Aug 30 06:12:11 GMT 2025","2982","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Sat Aug 30 06:21:22 GMT 2025","Sat Aug 30 06:21:24 GMT 2025","1677","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Sat Aug 30 06:13:01 GMT 2025","Sat Aug 30 06:13:04 GMT 2025","2669","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Sat Aug 30 06:10:42 GMT 2025","Sat Aug 30 06:10:44 GMT 2025","1974","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Sat Aug 30 06:11:39 GMT 2025","Sat Aug 30 06:11:42 GMT 2025","3118","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Sat Aug 30 06:14:06 GMT 2025","Sat Aug 30 06:14:07 GMT 2025","1170","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Sat Aug 30 06:13:50 GMT 2025","Sat Aug 30 06:13:52 GMT 2025","1178","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Sat Aug 30 06:11:04 GMT 2025","Sat Aug 30 06:11:06 GMT 2025","2128","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Aug 30 06:10:48 GMT 2025","Sat Aug 30 06:10:48 GMT 2025","214","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Sat Aug 30 06:10:48 GMT 2025","Sat Aug 30 06:10:48 GMT 2025","227","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Sat Aug 30 06:13:09 GMT 2025","Sat Aug 30 06:13:12 GMT 2025","3017","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Sat Aug 30 06:13:30 GMT 2025","Sat Aug 30 06:13:31 GMT 2025","1388","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Sat Aug 30 06:10:50 GMT 2025","Sat Aug 30 06:10:50 GMT 2025","206","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Sat Aug 30 06:10:52 GMT 2025","Sat Aug 30 06:10:55 GMT 2025","2683","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Sat Aug 30 06:12:25 GMT 2025","Sat Aug 30 06:12:25 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Sat Aug 30 06:21:24 GMT 2025","Sat Aug 30 06:21:24 GMT 2025","11","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Sat Aug 30 06:12:56 GMT 2025","Sat Aug 30 06:12:57 GMT 2025","1107","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Sat Aug 30 06:13:07 GMT 2025","Sat Aug 30 06:13:09 GMT 2025","2168","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Sat Aug 30 06:11:01 GMT 2025","Sat Aug 30 06:11:02 GMT 2025","136","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Sat Aug 30 06:12:55 GMT 2025","Sat Aug 30 06:12:56 GMT 2025","1398","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Sat Aug 30 06:13:56 GMT 2025","Sat Aug 30 06:13:58 GMT 2025","2340","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Sat Aug 30 06:13:52 GMT 2025","Sat Aug 30 06:13:53 GMT 2025","1151","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Sat Aug 30 06:10:48 GMT 2025","Sat Aug 30 06:10:48 GMT 2025","214","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Sat Aug 30 06:12:24 GMT 2025","Sat Aug 30 06:12:24 GMT 2025","67","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Sat Aug 30 06:14:04 GMT 2025","Sat Aug 30 06:14:06 GMT 2025","1727","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Sat Aug 30 06:21:20 GMT 2025","Sat Aug 30 06:21:21 GMT 2025","224","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Sat Aug 30 06:13:33 GMT 2025","Sat Aug 30 06:13:49 GMT 2025","16080","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Sat Aug 30 06:21:24 GMT 2025","Sat Aug 30 06:21:24 GMT 2025","219","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Sat Aug 30 06:10:52 GMT 2025","Sat Aug 30 06:10:52 GMT 2025","138","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Sat Aug 30 06:11:45 GMT 2025","Sat Aug 30 06:11:47 GMT 2025","1673","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Sat Aug 30 06:13:16 GMT 2025","Sat Aug 30 06:13:17 GMT 2025","1011","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Sat Aug 30 06:12:57 GMT 2025","Sat Aug 30 06:12:59 GMT 2025","2392","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Sat Aug 30 06:12:25 GMT 2025","Sat Aug 30 06:12:25 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Sat Aug 30 06:13:24 GMT 2025","Sat Aug 30 06:13:25 GMT 2025","1460","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Sat Aug 30 06:14:00 GMT 2025","Sat Aug 30 06:14:02 GMT 2025","2045","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Sat Aug 30 06:12:24 GMT 2025","Sat Aug 30 06:12:24 GMT 2025","67","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Sat Aug 30 06:11:42 GMT 2025","Sat Aug 30 06:11:43 GMT 2025","954","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Sat Aug 30 06:12:25 GMT 2025","Sat Aug 30 06:12:25 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Sat Aug 30 06:12:11 GMT 2025","Sat Aug 30 06:12:16 GMT 2025","4341","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Sat Aug 30 06:10:59 GMT 2025","Sat Aug 30 06:11:01 GMT 2025","2108","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Sat Aug 30 06:11:02 GMT 2025","Sat Aug 30 06:11:04 GMT 2025","2304","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Aug 30 06:12:24 GMT 2025","Sat Aug 30 06:12:24 GMT 2025","67","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Sat Aug 30 06:13:20 GMT 2025","Sat Aug 30 06:13:21 GMT 2025","1342","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Sat Aug 30 06:11:08 GMT 2025","Sat Aug 30 06:11:10 GMT 2025","2141","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Aug 30 06:12:25 GMT 2025","Sat Aug 30 06:12:48 GMT 2025","22584","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Sat Aug 30 06:12:59 GMT 2025","Sat Aug 30 06:13:01 GMT 2025","1477","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Sat Aug 30 06:21:21 GMT 2025","Sat Aug 30 06:21:22 GMT 2025","280","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Sat Aug 30 06:11:01 GMT 2025","Sat Aug 30 06:11:01 GMT 2025","151","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Sat Aug 30 06:12:24 GMT 2025","Sat Aug 30 06:12:24 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Sat Aug 30 06:10:48 GMT 2025","Sat Aug 30 06:10:49 GMT 2025","212","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Sat Aug 30 06:11:49 GMT 2025","Sat Aug 30 06:11:50 GMT 2025","1620","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Sat Aug 30 06:12:51 GMT 2025","Sat Aug 30 06:12:53 GMT 2025","2247","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Sat Aug 30 06:10:51 GMT 2025","Sat Aug 30 06:10:51 GMT 2025","207","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Sat Aug 30 06:10:50 GMT 2025","Sat Aug 30 06:10:50 GMT 2025","205","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Sat Aug 30 06:13:58 GMT 2025","Sat Aug 30 06:14:00 GMT 2025","1686","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Sat Aug 30 06:12:25 GMT 2025","Sat Aug 30 06:12:25 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Sat Aug 30 06:14:09 GMT 2025","Sat Aug 30 06:14:11 GMT 2025","2480","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Sat Aug 30 06:11:10 GMT 2025","Sat Aug 30 06:11:13 GMT 2025","2319","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Aug 30 06:11:13 GMT 2025","Sat Aug 30 06:11:15 GMT 2025","2167","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Aug 30 06:12:25 GMT 2025","Sat Aug 30 06:12:25 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Sat Aug 30 06:13:14 GMT 2025","Sat Aug 30 06:13:16 GMT 2025","2727","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Sat Aug 30 06:10:51 GMT 2025","Sat Aug 30 06:10:51 GMT 2025","211","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Sat Aug 30 06:11:55 GMT 2025","Sat Aug 30 06:11:57 GMT 2025","2375","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Sat Aug 30 06:14:02 GMT 2025","Sat Aug 30 06:14:04 GMT 2025","2539","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Sat Aug 30 06:12:16 GMT 2025","Sat Aug 30 06:12:19 GMT 2025","3663","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Sat Aug 30 06:11:15 GMT 2025","Sat Aug 30 06:11:17 GMT 2025","2302","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Aug 30 06:10:55 GMT 2025","Sat Aug 30 06:10:57 GMT 2025","2358","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Sat Aug 30 06:14:12 GMT 2025","Sat Aug 30 06:21:16 GMT 2025","424891","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Sat Aug 30 06:21:24 GMT 2025","Sat Aug 30 06:21:24 GMT 2025","6","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Sat Aug 30 06:12:25 GMT 2025","Sat Aug 30 06:12:25 GMT 2025","67","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Sat Aug 30 06:10:45 GMT 2025","Sat Aug 30 06:10:46 GMT 2025","956","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Sat Aug 30 06:10:48 GMT 2025","Sat Aug 30 06:10:48 GMT 2025","254","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Sat Aug 30 06:13:26 GMT 2025","Sat Aug 30 06:13:27 GMT 2025","1239","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Sat Aug 30 06:11:57 GMT 2025","Sat Aug 30 06:12:00 GMT 2025","2780","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Sat Aug 30 06:13:27 GMT 2025","Sat Aug 30 06:13:30 GMT 2025","2298","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Sat Aug 30 06:13:19 GMT 2025","Sat Aug 30 06:13:20 GMT 2025","1269","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Sat Aug 30 06:12:24 GMT 2025","Sat Aug 30 06:12:24 GMT 2025","67","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Sat Aug 30 06:21:24 GMT 2025","Sat Aug 30 06:21:24 GMT 2025","54","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Sat Aug 30 06:11:53 GMT 2025","Sat Aug 30 06:11:55 GMT 2025","2330","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Sat Aug 30 06:12:53 GMT 2025","Sat Aug 30 06:12:55 GMT 2025","1226","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Sat Aug 30 06:21:20 GMT 2025","Sat Aug 30 06:21:20 GMT 2025","224","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Sat Aug 30 06:11:22 GMT 2025","Sat Aug 30 06:11:24 GMT 2025","1685","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Aug 30 06:11:26 GMT 2025","Sat Aug 30 06:11:27 GMT 2025","1457","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Aug 30 06:13:31 GMT 2025","Sat Aug 30 06:13:33 GMT 2025","2321","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Sat Aug 30 06:12:24 GMT 2025","Sat Aug 30 06:12:24 GMT 2025","67","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Sat Aug 30 06:10:49 GMT 2025","Sat Aug 30 06:10:49 GMT 2025","211","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Sat Aug 30 06:12:24 GMT 2025","Sat Aug 30 06:12:24 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Sat Aug 30 06:21:22 GMT 2025","Sat Aug 30 06:21:22 GMT 2025","299","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Sat Aug 30 06:10:50 GMT 2025","Sat Aug 30 06:10:50 GMT 2025","208","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Sat Aug 30 06:10:51 GMT 2025","Sat Aug 30 06:10:52 GMT 2025","212","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Sat Aug 30 06:13:49 GMT 2025","Sat Aug 30 06:13:50 GMT 2025","1029","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Sat Aug 30 06:13:12 GMT 2025","Sat Aug 30 06:13:14 GMT 2025","1339","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Sat Aug 30 06:14:07 GMT 2025","Sat Aug 30 06:14:09 GMT 2025","1662","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Sat Aug 30 06:13:17 GMT 2025","Sat Aug 30 06:13:19 GMT 2025","1212","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Sat Aug 30 06:12:03 GMT 2025","Sat Aug 30 06:12:06 GMT 2025","2754","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Sat Aug 30 06:11:36 GMT 2025","Sat Aug 30 06:11:38 GMT 2025","2084","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Sat Aug 30 06:21:20 GMT 2025","Sat Aug 30 06:21:20 GMT 2025","394","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Sat Aug 30 06:12:24 GMT 2025","Sat Aug 30 06:12:24 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Sat Aug 30 06:21:21 GMT 2025","Sat Aug 30 06:21:21 GMT 2025","293","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Sat Aug 30 06:11:47 GMT 2025","Sat Aug 30 06:11:49 GMT 2025","1798","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Sat Aug 30 06:11:19 GMT 2025","Sat Aug 30 06:11:20 GMT 2025","930","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Sat Aug 30 06:10:44 GMT 2025","Sat Aug 30 06:10:45 GMT 2025","693","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Sat Aug 30 06:12:24 GMT 2025","Sat Aug 30 06:12:24 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Sat Aug 30 06:13:25 GMT 2025","Sat Aug 30 06:13:26 GMT 2025","1075","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Sat Aug 30 06:10:51 GMT 2025","Sat Aug 30 06:10:51 GMT 2025","208","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Sat Aug 30 06:12:19 GMT 2025","Sat Aug 30 06:12:24 GMT 2025","4098","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Sat Aug 30 06:12:24 GMT 2025","Sat Aug 30 06:12:25 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Sat Aug 30 06:10:49 GMT 2025","Sat Aug 30 06:10:49 GMT 2025","207","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Sat Aug 30 06:10:50 GMT 2025","Sat Aug 30 06:10:50 GMT 2025","207","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Sat Aug 30 06:13:21 GMT 2025","Sat Aug 30 06:13:24 GMT 2025","2437","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Sat Aug 30 06:14:12 GMT 2025","Sat Aug 30 06:14:12 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Sat Aug 30 06:10:44 GMT 2025","Sat Aug 30 06:10:44 GMT 2025","662","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Sat Aug 30 06:11:20 GMT 2025","Sat Aug 30 06:11:22 GMT 2025","1801","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Aug 30 06:11:06 GMT 2025","Sat Aug 30 06:11:08 GMT 2025","2170","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Aug 30 06:10:49 GMT 2025","Sat Aug 30 06:10:50 GMT 2025","208","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Sat Aug 30 06:10:47 GMT 2025","Sat Aug 30 06:10:47 GMT 2025","218","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Sat Aug 30 06:13:53 GMT 2025","Sat Aug 30 06:13:54 GMT 2025","1090","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Sat Aug 30 06:12:50 GMT 2025","Sat Aug 30 06:12:51 GMT 2025","1268","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Sat Aug 30 06:10:50 GMT 2025","Sat Aug 30 06:10:51 GMT 2025","206","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Sat Aug 30 06:11:17 GMT 2025","Sat Aug 30 06:11:19 GMT 2025","2258","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Aug 30 06:13:54 GMT 2025","Sat Aug 30 06:13:56 GMT 2025","1814","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Sat Aug 30 06:11:50 GMT 2025","Sat Aug 30 06:11:53 GMT 2025","2600","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Sat Aug 30 06:21:20 GMT 2025","Sat Aug 30 06:21:20 GMT 2025","213","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Sat Aug 30 06:10:51 GMT 2025","Sat Aug 30 06:10:51 GMT 2025","204","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Sat Aug 30 06:12:25 GMT 2025","Sat Aug 30 06:12:25 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Sat Aug 30 06:12:25 GMT 2025","Sat Aug 30 06:12:25 GMT 2025","66","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Sat Aug 30 06:12:00 GMT 2025","Sat Aug 30 06:12:03 GMT 2025","2916","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Sat Aug 30 06:11:27 GMT 2025","Sat Aug 30 06:11:31 GMT 2025","3221","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Sat Aug 30 06:13:06 GMT 2025","Sat Aug 30 06:13:07 GMT 2025","1287","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Sat Aug 30 06:11:24 GMT 2025","Sat Aug 30 06:11:26 GMT 2025","2180","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Aug 30 06:21:24 GMT 2025","Sat Aug 30 06:21:24 GMT 2025","250","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Sat Aug 30 06:21:21 GMT 2025","Sat Aug 30 06:21:21 GMT 2025","352","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Sat Aug 30 06:12:48 GMT 2025","Sat Aug 30 06:12:50 GMT 2025","2097","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"skipped","Sat Aug 30 06:12:19 GMT 2025","Sat Aug 30 06:12:19 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Sat Aug 30 06:11:43 GMT 2025","Sat Aug 30 06:11:45 GMT 2025","2019","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Sat Aug 30 06:11:38 GMT 2025","Sat Aug 30 06:11:39 GMT 2025","941","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Sat Aug 30 06:10:57 GMT 2025","Sat Aug 30 06:10:59 GMT 2025","2091","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Sat Aug 30 06:12:06 GMT 2025","Sat Aug 30 06:12:09 GMT 2025","2588","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Sat Aug 30 06:10:46 GMT 2025","Sat Aug 30 06:10:47 GMT 2025","754","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Sat Aug 30 06:10:49 GMT 2025","Sat Aug 30 06:10:49 GMT 2025","212","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Sat Aug 30 06:11:33 GMT 2025","Sat Aug 30 06:11:36 GMT 2025","3068","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Sat Aug 30 06:11:31 GMT 2025","Sat Aug 30 06:11:33 GMT 2025","2155","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Sat Aug 30 06:13:04 GMT 2025","Sat Aug 30 06:13:06 GMT 2025","2142","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
