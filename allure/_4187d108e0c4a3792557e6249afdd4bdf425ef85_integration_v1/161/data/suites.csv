"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Mon Aug 25 05:53:07 GMT 2025","Mon Aug 25 05:53:10 GMT 2025","3267","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Mon Aug 25 06:02:06 GMT 2025","Mon Aug 25 06:02:06 GMT 2025","104","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Mon Aug 25 05:52:32 GMT 2025","Mon Aug 25 05:52:35 GMT 2025","2196","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 05:53:47 GMT 2025","Mon Aug 25 05:53:47 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Mon Aug 25 05:54:55 GMT 2025","Mon Aug 25 05:54:57 GMT 2025","1418","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Mon Aug 25 06:02:04 GMT 2025","Mon Aug 25 06:02:04 GMT 2025","182","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Mon Aug 25 05:52:27 GMT 2025","Mon Aug 25 05:52:28 GMT 2025","992","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 05:52:25 GMT 2025","Mon Aug 25 05:52:27 GMT 2025","2162","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 05:55:15 GMT 2025","Mon Aug 25 05:55:15 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Mon Aug 25 05:53:46 GMT 2025","Mon Aug 25 05:53:46 GMT 2025","33","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Mon Aug 25 05:52:07 GMT 2025","Mon Aug 25 05:52:07 GMT 2025","523","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Mon Aug 25 05:54:44 GMT 2025","Mon Aug 25 05:54:45 GMT 2025","1315","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Mon Aug 25 06:02:06 GMT 2025","Mon Aug 25 06:02:07 GMT 2025","250","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Mon Aug 25 06:02:04 GMT 2025","Mon Aug 25 06:02:04 GMT 2025","128","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Mon Aug 25 05:54:36 GMT 2025","Mon Aug 25 05:54:38 GMT 2025","1386","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Mon Aug 25 05:53:16 GMT 2025","Mon Aug 25 05:53:19 GMT 2025","3002","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Mon Aug 25 05:52:14 GMT 2025","Mon Aug 25 05:52:15 GMT 2025","1000","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Mon Aug 25 05:54:43 GMT 2025","Mon Aug 25 05:54:44 GMT 2025","1276","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Mon Aug 25 05:53:31 GMT 2025","Mon Aug 25 05:53:33 GMT 2025","2203","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Mon Aug 25 05:55:00 GMT 2025","Mon Aug 25 05:55:01 GMT 2025","1305","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Mon Aug 25 05:55:06 GMT 2025","Mon Aug 25 05:55:08 GMT 2025","1963","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Mon Aug 25 05:54:13 GMT 2025","Mon Aug 25 05:54:16 GMT 2025","3383","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Mon Aug 25 05:53:47 GMT 2025","Mon Aug 25 05:53:47 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Mon Aug 25 05:52:11 GMT 2025","Mon Aug 25 05:52:11 GMT 2025","101","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Mon Aug 25 05:53:14 GMT 2025","Mon Aug 25 05:53:16 GMT 2025","2729","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Mon Aug 25 05:52:37 GMT 2025","Mon Aug 25 05:52:39 GMT 2025","1939","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Mon Aug 25 06:02:07 GMT 2025","Mon Aug 25 06:02:07 GMT 2025","11","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Mon Aug 25 05:52:08 GMT 2025","Mon Aug 25 05:52:08 GMT 2025","626","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Mon Aug 25 05:54:11 GMT 2025","Mon Aug 25 05:54:13 GMT 2025","1681","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Mon Aug 25 05:52:20 GMT 2025","Mon Aug 25 05:52:20 GMT 2025","62","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Mon Aug 25 05:53:46 GMT 2025","Mon Aug 25 05:53:46 GMT 2025","56","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Mon Aug 25 05:55:09 GMT 2025","Mon Aug 25 05:55:11 GMT 2025","2125","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Mon Aug 25 05:52:58 GMT 2025","Mon Aug 25 05:53:01 GMT 2025","2835","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Mon Aug 25 05:52:11 GMT 2025","Mon Aug 25 05:52:11 GMT 2025","101","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Mon Aug 25 05:54:45 GMT 2025","Mon Aug 25 05:54:55 GMT 2025","9839","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
"passed","Mon Aug 25 05:53:47 GMT 2025","Mon Aug 25 05:53:47 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Mon Aug 25 05:53:19 GMT 2025","Mon Aug 25 05:53:22 GMT 2025","2849","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Mon Aug 25 05:53:47 GMT 2025","Mon Aug 25 05:53:47 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Mon Aug 25 06:02:03 GMT 2025","Mon Aug 25 06:02:04 GMT 2025","121","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Mon Aug 25 05:52:05 GMT 2025","Mon Aug 25 05:52:06 GMT 2025","1841","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Mon Aug 25 05:53:47 GMT 2025","Mon Aug 25 05:53:47 GMT 2025","33","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Mon Aug 25 05:52:46 GMT 2025","Mon Aug 25 05:52:49 GMT 2025","2576","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 05:54:21 GMT 2025","Mon Aug 25 05:54:24 GMT 2025","2890","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Mon Aug 25 05:53:33 GMT 2025","Mon Aug 25 05:53:34 GMT 2025","1533","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Mon Aug 25 05:52:10 GMT 2025","Mon Aug 25 05:52:10 GMT 2025","119","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Mon Aug 25 05:55:01 GMT 2025","Mon Aug 25 05:55:03 GMT 2025","1523","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Mon Aug 25 05:52:11 GMT 2025","Mon Aug 25 05:52:11 GMT 2025","100","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Mon Aug 25 05:52:43 GMT 2025","Mon Aug 25 05:52:46 GMT 2025","3071","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 05:53:10 GMT 2025","Mon Aug 25 05:53:14 GMT 2025","3720","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Mon Aug 25 05:54:25 GMT 2025","Mon Aug 25 05:54:28 GMT 2025","3016","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Mon Aug 25 05:54:18 GMT 2025","Mon Aug 25 05:54:21 GMT 2025","3176","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Mon Aug 25 05:54:57 GMT 2025","Mon Aug 25 05:54:58 GMT 2025","1054","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Mon Aug 25 05:53:40 GMT 2025","Mon Aug 25 05:53:43 GMT 2025","3139","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Mon Aug 25 05:52:20 GMT 2025","Mon Aug 25 05:52:23 GMT 2025","2414","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 05:52:11 GMT 2025","Mon Aug 25 05:52:12 GMT 2025","65","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Mon Aug 25 05:52:20 GMT 2025","Mon Aug 25 05:52:20 GMT 2025","95","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Mon Aug 25 06:02:04 GMT 2025","Mon Aug 25 06:02:04 GMT 2025","160","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Mon Aug 25 05:54:09 GMT 2025","Mon Aug 25 05:54:10 GMT 2025","1233","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Mon Aug 25 05:52:10 GMT 2025","Mon Aug 25 05:52:10 GMT 2025","98","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Mon Aug 25 05:54:38 GMT 2025","Mon Aug 25 05:54:39 GMT 2025","1157","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Mon Aug 25 05:53:24 GMT 2025","Mon Aug 25 05:53:26 GMT 2025","2009","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"skipped","Mon Aug 25 05:53:43 GMT 2025","Mon Aug 25 05:53:43 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Mon Aug 25 05:53:47 GMT 2025","Mon Aug 25 05:53:47 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Mon Aug 25 06:02:04 GMT 2025","Mon Aug 25 06:02:04 GMT 2025","140","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Mon Aug 25 05:52:23 GMT 2025","Mon Aug 25 05:52:25 GMT 2025","2139","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 05:52:10 GMT 2025","Mon Aug 25 05:52:10 GMT 2025","106","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Mon Aug 25 06:02:04 GMT 2025","Mon Aug 25 06:02:04 GMT 2025","112","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Mon Aug 25 06:02:06 GMT 2025","Mon Aug 25 06:02:06 GMT 2025","5","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Mon Aug 25 05:52:11 GMT 2025","Mon Aug 25 05:52:11 GMT 2025","108","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Mon Aug 25 05:53:38 GMT 2025","Mon Aug 25 05:53:40 GMT 2025","2667","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Mon Aug 25 05:54:24 GMT 2025","Mon Aug 25 05:54:25 GMT 2025","705","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Mon Aug 25 05:53:34 GMT 2025","Mon Aug 25 05:53:38 GMT 2025","3183","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Mon Aug 25 05:55:04 GMT 2025","Mon Aug 25 05:55:06 GMT 2025","2326","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Mon Aug 25 06:02:03 GMT 2025","Mon Aug 25 06:02:03 GMT 2025","228","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Mon Aug 25 06:02:06 GMT 2025","Mon Aug 25 06:02:06 GMT 2025","51","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Mon Aug 25 05:54:42 GMT 2025","Mon Aug 25 05:54:43 GMT 2025","1078","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Mon Aug 25 05:54:10 GMT 2025","Mon Aug 25 05:54:11 GMT 2025","1481","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Mon Aug 25 05:53:46 GMT 2025","Mon Aug 25 05:53:46 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Mon Aug 25 05:54:34 GMT 2025","Mon Aug 25 05:54:35 GMT 2025","1174","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Mon Aug 25 05:52:11 GMT 2025","Mon Aug 25 05:52:11 GMT 2025","95","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Mon Aug 25 05:52:09 GMT 2025","Mon Aug 25 05:52:10 GMT 2025","161","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Mon Aug 25 05:53:47 GMT 2025","Mon Aug 25 05:54:05 GMT 2025","17810","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Mon Aug 25 05:55:13 GMT 2025","Mon Aug 25 05:55:15 GMT 2025","1990","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Mon Aug 25 05:54:05 GMT 2025","Mon Aug 25 05:54:05 GMT 2025","717","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Mon Aug 25 05:52:08 GMT 2025","Mon Aug 25 05:52:09 GMT 2025","665","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Mon Aug 25 05:52:41 GMT 2025","Mon Aug 25 05:52:43 GMT 2025","1872","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 05:52:09 GMT 2025","Mon Aug 25 05:52:09 GMT 2025","111","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Mon Aug 25 05:52:28 GMT 2025","Mon Aug 25 05:52:30 GMT 2025","2151","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 05:54:32 GMT 2025","Mon Aug 25 05:54:33 GMT 2025","659","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Mon Aug 25 05:52:11 GMT 2025","Mon Aug 25 05:52:11 GMT 2025","100","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Mon Aug 25 05:54:31 GMT 2025","Mon Aug 25 05:54:32 GMT 2025","1216","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Mon Aug 25 05:53:43 GMT 2025","Mon Aug 25 05:53:46 GMT 2025","2616","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Mon Aug 25 05:53:47 GMT 2025","Mon Aug 25 05:53:47 GMT 2025","33","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Mon Aug 25 05:52:12 GMT 2025","Mon Aug 25 05:52:14 GMT 2025","2724","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Mon Aug 25 05:53:01 GMT 2025","Mon Aug 25 05:53:02 GMT 2025","1175","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Mon Aug 25 05:52:15 GMT 2025","Mon Aug 25 05:52:18 GMT 2025","2074","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Mon Aug 25 05:53:47 GMT 2025","Mon Aug 25 05:53:47 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Mon Aug 25 05:55:15 GMT 2025","Mon Aug 25 06:02:00 GMT 2025","404334","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Mon Aug 25 05:52:49 GMT 2025","Mon Aug 25 05:52:52 GMT 2025","2721","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Mon Aug 25 05:54:58 GMT 2025","Mon Aug 25 05:54:59 GMT 2025","1324","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Mon Aug 25 05:53:46 GMT 2025","Mon Aug 25 05:53:46 GMT 2025","33","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"passed","Mon Aug 25 05:52:10 GMT 2025","Mon Aug 25 05:52:10 GMT 2025","99","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Mon Aug 25 05:53:22 GMT 2025","Mon Aug 25 05:53:24 GMT 2025","2346","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Mon Aug 25 05:54:28 GMT 2025","Mon Aug 25 05:54:30 GMT 2025","1642","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Mon Aug 25 05:54:59 GMT 2025","Mon Aug 25 05:55:00 GMT 2025","1026","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Mon Aug 25 05:54:40 GMT 2025","Mon Aug 25 05:54:42 GMT 2025","1398","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Mon Aug 25 05:54:35 GMT 2025","Mon Aug 25 05:54:36 GMT 2025","1153","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Mon Aug 25 06:02:04 GMT 2025","Mon Aug 25 06:02:06 GMT 2025","1569","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Mon Aug 25 05:54:16 GMT 2025","Mon Aug 25 05:54:18 GMT 2025","1920","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Mon Aug 25 05:52:18 GMT 2025","Mon Aug 25 05:52:20 GMT 2025","2434","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Mon Aug 25 05:53:29 GMT 2025","Mon Aug 25 05:53:31 GMT 2025","2006","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Mon Aug 25 05:52:10 GMT 2025","Mon Aug 25 05:52:10 GMT 2025","102","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Mon Aug 25 05:52:11 GMT 2025","Mon Aug 25 05:52:11 GMT 2025","103","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Mon Aug 25 05:52:10 GMT 2025","Mon Aug 25 05:52:10 GMT 2025","103","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Mon Aug 25 05:52:11 GMT 2025","Mon Aug 25 05:52:11 GMT 2025","106","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Mon Aug 25 05:53:26 GMT 2025","Mon Aug 25 05:53:29 GMT 2025","2226","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Mon Aug 25 05:52:10 GMT 2025","Mon Aug 25 05:52:10 GMT 2025","108","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Mon Aug 25 05:53:47 GMT 2025","Mon Aug 25 05:53:47 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Mon Aug 25 05:52:35 GMT 2025","Mon Aug 25 05:52:37 GMT 2025","2349","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 05:53:46 GMT 2025","Mon Aug 25 05:53:47 GMT 2025","35","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Mon Aug 25 05:52:10 GMT 2025","Mon Aug 25 05:52:10 GMT 2025","115","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Mon Aug 25 05:55:11 GMT 2025","Mon Aug 25 05:55:13 GMT 2025","2177","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Mon Aug 25 05:55:03 GMT 2025","Mon Aug 25 05:55:04 GMT 2025","953","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Mon Aug 25 05:53:46 GMT 2025","Mon Aug 25 05:53:46 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Mon Aug 25 05:52:11 GMT 2025","Mon Aug 25 05:52:11 GMT 2025","100","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Mon Aug 25 05:52:30 GMT 2025","Mon Aug 25 05:52:32 GMT 2025","2399","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Mon Aug 25 05:55:08 GMT 2025","Mon Aug 25 05:55:09 GMT 2025","1047","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Mon Aug 25 05:53:46 GMT 2025","Mon Aug 25 05:53:46 GMT 2025","34","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Mon Aug 25 06:02:04 GMT 2025","Mon Aug 25 06:02:04 GMT 2025","143","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Mon Aug 25 05:53:46 GMT 2025","Mon Aug 25 05:53:46 GMT 2025","33","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Mon Aug 25 05:52:39 GMT 2025","Mon Aug 25 05:52:41 GMT 2025","2363","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Mon Aug 25 05:53:02 GMT 2025","Mon Aug 25 05:53:05 GMT 2025","3366","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Mon Aug 25 05:54:05 GMT 2025","Mon Aug 25 05:54:07 GMT 2025","1561","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Mon Aug 25 05:53:46 GMT 2025","Mon Aug 25 05:53:46 GMT 2025","33","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Mon Aug 25 05:52:07 GMT 2025","Mon Aug 25 05:52:08 GMT 2025","545","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Mon Aug 25 05:54:33 GMT 2025","Mon Aug 25 05:54:34 GMT 2025","1120","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Mon Aug 25 05:52:52 GMT 2025","Mon Aug 25 05:52:55 GMT 2025","3382","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Mon Aug 25 05:52:10 GMT 2025","Mon Aug 25 05:52:11 GMT 2025","106","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Mon Aug 25 05:54:39 GMT 2025","Mon Aug 25 05:54:40 GMT 2025","1174","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Mon Aug 25 05:52:55 GMT 2025","Mon Aug 25 05:52:58 GMT 2025","3112","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Mon Aug 25 05:54:07 GMT 2025","Mon Aug 25 05:54:09 GMT 2025","1658","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Mon Aug 25 05:54:30 GMT 2025","Mon Aug 25 05:54:31 GMT 2025","1395","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Mon Aug 25 05:53:05 GMT 2025","Mon Aug 25 05:53:07 GMT 2025","1095","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
