"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sat Sep 06 06:14:30 GMT 2025","Sat Sep 06 06:14:31 GMT 2025","1039","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnSystemEngineOnUserEngine","setWrongParameterOnSystemEngineOnUserEngine()",""
"passed","Sat Sep 06 06:21:57 GMT 2025","Sat Sep 06 06:21:58 GMT 2025","127","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting","shouldReturnTimestampFromDateWhenUsingTime_zoneSetting()",""
"passed","Sat Sep 06 06:11:41 GMT 2025","Sat Sep 06 06:11:43 GMT 2025","2210","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Sep 06 06:14:29 GMT 2025","Sat Sep 06 06:14:30 GMT 2025","824","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [2] select 1 as ""lower"", 2 as ""UPPER"", 3 AS ""MiXeD"", lower,UPPER,MiXeD",""
"passed","Sat Sep 06 06:13:05 GMT 2025","Sat Sep 06 06:13:05 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [2] select '+inf'::float",""
"skipped","Sat Sep 06 06:13:03 GMT 2025","Sat Sep 06 06:13:03 GMT 2025","0","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBooleanFromVariousObjects","shouldFetchBooleanFromVariousObjects(Object, Object)",""
"passed","Sat Sep 06 06:11:21 GMT 2025","Sat Sep 06 06:11:21 GMT 2025","104","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:true",""
"passed","Sat Sep 06 06:14:31 GMT 2025","Sat Sep 06 06:14:32 GMT 2025","1139","","integration.tests.StatementTest","","integration.tests.StatementTest","failingQuery","failingQuery(String) [1] SELECT CONVERT(varchar, 3.14)",""
"passed","Sat Sep 06 06:12:56 GMT 2025","Sat Sep 06 06:13:00 GMT 2025","3983","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsInBatch","shouldInsertRecordsInBatch()",""
"passed","Sat Sep 06 06:11:24 GMT 2025","Sat Sep 06 06:11:24 GMT 2025","97","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumns","shouldReturnColumns()",""
"passed","Sat Sep 06 06:11:23 GMT 2025","Sat Sep 06 06:11:23 GMT 2025","94","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [10] null, public, null, TABLE, integration_test, tables;columns;views",""
"passed","Sat Sep 06 06:11:23 GMT 2025","Sat Sep 06 06:11:23 GMT 2025","96","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [4] null, null, null, TABLE, integration_test, views;tables",""
"passed","Sat Sep 06 06:22:00 GMT 2025","Sat Sep 06 06:22:00 GMT 2025","8","","integration.tests.client.UsageTrackingTest","","integration.tests.client.UsageTrackingTest","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo","shouldSendRequestWithUserAgentHeaderContainingDriverAndClientInfo()",""
"passed","Sat Sep 06 06:11:23 GMT 2025","Sat Sep 06 06:11:23 GMT 2025","100","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [11] null, public, null, TABLE;VIEW, integration_test, tables;columns;views",""
"passed","Sat Sep 06 06:14:28 GMT 2025","Sat Sep 06 06:14:29 GMT 2025","1105","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseSelect","mixedCaseSelect(String, String) [1] select 1 as lower, 2 as UPPER, 3 AS MiXeD, lower,upper,mixed",""
"passed","Sat Sep 06 06:11:58 GMT 2025","Sat Sep 06 06:12:01 GMT 2025","2782","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Sep 06 06:11:23 GMT 2025","Sat Sep 06 06:11:23 GMT 2025","96","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [8] null, public, null, null, integration_test, tables;columns;views",""
"passed","Sat Sep 06 06:12:49 GMT 2025","Sat Sep 06 06:12:51 GMT 2025","2314","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(Long.class)",""
"passed","Sat Sep 06 06:11:23 GMT 2025","Sat Sep 06 06:11:24 GMT 2025","93","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [13] null, information_schema, null, TABLE, null, integration_test",""
"passed","Sat Sep 06 06:12:04 GMT 2025","Sat Sep 06 06:12:08 GMT 2025","4229","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullableBiDimensionalArray","nullableBiDimensionalArray()",""
"passed","Sat Sep 06 06:13:27 GMT 2025","Sat Sep 06 06:13:30 GMT 2025","2433","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [2] -1",""
"passed","Sat Sep 06 06:13:51 GMT 2025","Sat Sep 06 06:13:53 GMT 2025","2171","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [1] 1",""
"passed","Sat Sep 06 06:11:51 GMT 2025","Sat Sep 06 06:11:52 GMT 2025","1251","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","byteaArray","byteaArray()",""
"passed","Sat Sep 06 06:12:28 GMT 2025","Sat Sep 06 06:12:30 GMT 2025","2782","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [2] 2019-07-31 11:15:13.0, 2019-07-31, true",""
"passed","Sat Sep 06 06:11:24 GMT 2025","Sat Sep 06 06:11:24 GMT 2025","52","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getMetadata","getMetadata()",""
"passed","Sat Sep 06 06:13:30 GMT 2025","Sat Sep 06 06:13:32 GMT 2025","2181","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [3] 100",""
"passed","Sat Sep 06 06:14:09 GMT 2025","Sat Sep 06 06:14:10 GMT 2025","1380","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:/* {""app"": ""dbt"", ""dbt_version"": ""0.20.0"", ""profile_name"": ""jaffle_shop"", ""target_name"": ""fb_app"", ""connection_name"": ""macro_stage_external_sources""} */;",""
"passed","Sat Sep 06 06:11:32 GMT 2025","Sat Sep 06 06:11:34 GMT 2025","2102","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Sep 06 06:12:01 GMT 2025","Sat Sep 06 06:12:04 GMT 2025","2520","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","nullArrays","nullArrays(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [2] select '+nan'::real",""
"passed","Sat Sep 06 06:12:33 GMT 2025","Sat Sep 06 06:12:35 GMT 2025","2415","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [4] 2019-07-31 11:15:13.0, 2019-07-31, false",""
"passed","Sat Sep 06 06:13:26 GMT 2025","Sat Sep 06 06:13:27 GMT 2025","1665","","integration.tests.StatementTest","","integration.tests.StatementTest","unlimitedMaxFieldSize","unlimitedMaxFieldSize(int) [1] 0",""
"passed","Sat Sep 06 06:12:25 GMT 2025","Sat Sep 06 06:12:28 GMT 2025","2538","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [1] 2019-07-31T11:15:13, 2019-07-31, true",""
"passed","Sat Sep 06 06:11:22 GMT 2025","Sat Sep 06 06:11:22 GMT 2025","105","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnTable","shouldReturnTable()",""
"passed","Sat Sep 06 06:11:22 GMT 2025","Sat Sep 06 06:11:22 GMT 2025","103","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [1] null, null, null, null, tables;views;integration_test, null",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [2] select '+inf'::double",""
"passed","Sat Sep 06 06:13:05 GMT 2025","Sat Sep 06 06:13:05 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [3] select '-nan'::double",""
"passed","Sat Sep 06 06:14:39 GMT 2025","Sat Sep 06 06:14:43 GMT 2025","4660","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [2] CREATE FACT TABLE ""Case_Test"" (x long), Case_Test, case_test, ""Case_Test""",""
"passed","Sat Sep 06 06:11:22 GMT 2025","Sat Sep 06 06:11:22 GMT 2025","99","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [2] null, null, null, TABLE;VIEW, tables;views;integration_test, null",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [1] select 'nan'::real",""
"passed","Sat Sep 06 06:14:02 GMT 2025","Sat Sep 06 06:14:04 GMT 2025","1962","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:;",""
"passed","Sat Sep 06 06:13:37 GMT 2025","Sat Sep 06 06:13:39 GMT 2025","2193","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnSystemEngine","setCorrectThenWrongParameterOnSystemEngine()",""
"passed","Sat Sep 06 06:14:13 GMT 2025","Sat Sep 06 06:14:14 GMT 2025","1180","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetMultipleResultSets","shouldGetMultipleResultSets()",""
"passed","Sat Sep 06 06:12:18 GMT 2025","Sat Sep 06 06:12:20 GMT 2025","1585","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchBoolean","shouldFetchBoolean()",""
"passed","Sat Sep 06 06:11:22 GMT 2025","Sat Sep 06 06:11:22 GMT 2025","148","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnColumnsFromSelect","shouldReturnColumnsFromSelect()",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [3] select '-nan'::float",""
"passed","Sat Sep 06 06:14:07 GMT 2025","Sat Sep 06 06:14:09 GMT 2025","1875","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:-- SELECT 1;",""
"passed","Sat Sep 06 06:14:04 GMT 2025","Sat Sep 06 06:14:05 GMT 2025","1313","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:     ;",""
"passed","Sat Sep 06 06:11:21 GMT 2025","Sat Sep 06 06:11:21 GMT 2025","513","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectV1","successfulConnectV1(boolean, boolean) using db:true engine:false",""
"passed","Sat Sep 06 06:12:45 GMT 2025","Sat Sep 06 06:12:47 GMT 2025","1621","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) int",""
"passed","Sat Sep 06 06:12:35 GMT 2025","Sat Sep 06 06:12:39 GMT 2025","3577","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectStreams","shouldInsertAndSelectStreams()",""
"passed","Sat Sep 06 06:14:46 GMT 2025","Sat Sep 06 06:14:48 GMT 2025","2014","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults","shouldNotCloseStatementWithCloseOnCompletionIfItHasMoreResults()",""
"passed","Sat Sep 06 06:21:59 GMT 2025","Sat Sep 06 06:22:00 GMT 2025","102","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampntz","shouldReturnTimestampFromTimestampntz()",""
"passed","Sat Sep 06 06:14:55 GMT 2025","Sat Sep 06 06:14:55 GMT 2025","1","","integration.tests.SystemEngineDatabaseMetaDataTest","","integration.tests.SystemEngineDatabaseMetaDataTest","readOnly","readOnly()",""
"passed","Sat Sep 06 06:21:58 GMT 2025","Sat Sep 06 06:21:59 GMT 2025","1527","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldCompareAllTimeStampsWithMultipleThreads","shouldCompareAllTimeStampsWithMultipleThreads()",""
"passed","Sat Sep 06 06:11:23 GMT 2025","Sat Sep 06 06:11:23 GMT 2025","98","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [6] null, null, %account%, null, accounts;service_accounts, tables;columns;views",""
"passed","Sat Sep 06 06:14:51 GMT 2025","Sat Sep 06 06:14:55 GMT 2025","4350","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet","shouldReturnFalseWhenExecutingMultiStatementWithFirstStatementNotReturningAResultSet()",""
"passed","Sat Sep 06 06:13:41 GMT 2025","Sat Sep 06 06:13:45 GMT 2025","3573","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnLimitedNumberOfLines","shouldReturnLimitedNumberOfLines()",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","42","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfFloatUserEngine","minusInfFloatUserEngine(String) [1] select '-inf'::float",""
"passed","Sat Sep 06 06:13:39 GMT 2025","Sat Sep 06 06:13:41 GMT 2025","2271","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet","shouldReturnTrueWhenExecutingMultiStatementWithFirstStatementReturningAResultSet()",""
"passed","Sat Sep 06 06:11:23 GMT 2025","Sat Sep 06 06:11:23 GMT 2025","98","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [5] null, null, null, VIEW, views;tables, integration_test",""
"passed","Sat Sep 06 06:11:24 GMT 2025","Sat Sep 06 06:11:24 GMT 2025","92","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [14] null, information_schema, null, TABLE;VIEW, tables;columns, integration_test",""
"passed","Sat Sep 06 06:13:03 GMT 2025","Sat Sep 06 06:13:05 GMT 2025","2531","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectByteArray","shouldInsertAndSelectByteArray()",""
"passed","Sat Sep 06 06:13:34 GMT 2025","Sat Sep 06 06:13:35 GMT 2025","827","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion","shouldThrowExceptionWhenTryingToReuseStatementClosedOnCompletion()",""
"passed","Sat Sep 06 06:13:58 GMT 2025","Sat Sep 06 06:14:00 GMT 2025","1287","","integration.tests.StatementTest","","integration.tests.StatementTest","setWrongParameterOnUserEngineForV1","setWrongParameterOnUserEngineForV1()",""
"passed","Sat Sep 06 06:11:23 GMT 2025","Sat Sep 06 06:11:23 GMT 2025","95","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [12] null, public, null, VIEW, null, tables;columns;views",""
"passed","Sat Sep 06 06:14:27 GMT 2025","Sat Sep 06 06:14:28 GMT 2025","691","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithEngine","shouldSelect1WithEngine()",""
"passed","Sat Sep 06 06:12:54 GMT 2025","Sat Sep 06 06:12:56 GMT 2025","2326","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldReplaceParamMarkers","shouldReplaceParamMarkers()",""
"passed","Sat Sep 06 06:11:22 GMT 2025","Sat Sep 06 06:11:22 GMT 2025","117","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","shouldReturnSchema","shouldReturnSchema()",""
"passed","Sat Sep 06 06:11:26 GMT 2025","Sat Sep 06 06:11:28 GMT 2025","2125","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitNulls","preparedStatementUsingExplicitNulls()",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [1] select 'nan'::float",""
"passed","Sat Sep 06 06:14:55 GMT 2025","Sat Sep 06 06:21:54 GMT 2025","418636","","integration.tests.TimeoutTest","","integration.tests.TimeoutTest","shouldExecuteRequestWithoutTimeoutV1","shouldExecuteRequestWithoutTimeoutV1()",""
"passed","Sat Sep 06 06:21:57 GMT 2025","Sat Sep 06 06:21:57 GMT 2025","83","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetParsedTimeStampExtTimeObjects","shouldGetParsedTimeStampExtTimeObjects()",""
"passed","Sat Sep 06 06:11:43 GMT 2025","Sat Sep 06 06:11:46 GMT 2025","2706","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringWithNullValues","integerAndStringWithNullValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Sep 06 06:11:23 GMT 2025","Sat Sep 06 06:11:23 GMT 2025","98","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [9] null, information_schema, null, null, tables;columns, integration_test",""
"passed","Sat Sep 06 06:14:43 GMT 2025","Sat Sep 06 06:14:46 GMT 2025","2886","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenExecutingWrongQueryV1","shouldThrowExceptionWhenExecutingWrongQueryV1()",""
"passed","Sat Sep 06 06:13:00 GMT 2025","Sat Sep 06 06:13:03 GMT 2025","2751","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectBlobClob","shouldInsertAndSelectBlobClob()",""
"passed","Sat Sep 06 06:11:22 GMT 2025","Sat Sep 06 06:11:23 GMT 2025","102","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [3] null, null, null, VIEW;TABLE, integration_test;tables;views, null",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [1] select 'inf'::real",""
"passed","Sat Sep 06 06:12:51 GMT 2025","Sat Sep 06 06:12:54 GMT 2025","2099","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) getObject(i, java.util.Map.of(""long"", Integer.class)",""
"passed","Sat Sep 06 06:13:32 GMT 2025","Sat Sep 06 06:13:34 GMT 2025","2124","","integration.tests.StatementTest","","integration.tests.StatementTest","setCorrectThenWrongParameterOnUserEngine","setCorrectThenWrongParameterOnUserEngine()",""
"passed","Sat Sep 06 06:21:58 GMT 2025","Sat Sep 06 06:21:58 GMT 2025","119","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesAndSecondsWhenUsingTime_ZoneSetting()",""
"passed","Sat Sep 06 06:14:00 GMT 2025","Sat Sep 06 06:14:02 GMT 2025","2148","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1WithQueryTimeout","shouldSelect1WithQueryTimeout()",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","43","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfRealUserEngine","minusInfRealUserEngine(String) [1] select '-inf'::real",""
"passed","Sat Sep 06 06:11:17 GMT 2025","Sat Sep 06 06:11:19 GMT 2025","1939","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","unsuccessfulConnectV1","unsuccessfulConnectV1(boolean, boolean) using db:false engine:false",""
"passed","Sat Sep 06 06:21:58 GMT 2025","Sat Sep 06 06:21:58 GMT 2025","116","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings","shouldReturnTimestampFromTimestampTzWithTzWithHoursAndMinutesWhenUsingTime_ZoneSettings()",""
"passed","Sat Sep 06 06:11:28 GMT 2025","Sat Sep 06 06:11:30 GMT 2025","1755","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingExplicitTypedNulls","preparedStatementUsingExplicitTypedNulls()",""
"passed","Sat Sep 06 06:12:08 GMT 2025","Sat Sep 06 06:12:10 GMT 2025","2427","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFailSQLInjectionAttempt","shouldFailSQLInjectionAttempt()",""
"passed","Sat Sep 06 06:13:05 GMT 2025","Sat Sep 06 06:13:05 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [2] select '+nan'::double",""
"passed","Sat Sep 06 06:12:30 GMT 2025","Sat Sep 06 06:12:33 GMT 2025","2663","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchTimestampAndDate","shouldFetchTimestampAndDate(Object, Object, boolean) [3] 2019-07-31T11:15:13, 2019-07-31, false",""
"passed","Sat Sep 06 06:12:16 GMT 2025","Sat Sep 06 06:12:18 GMT 2025","2574","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndSelectDateTime","shouldInsertAndSelectDateTime()",""
"passed","Sat Sep 06 06:14:32 GMT 2025","Sat Sep 06 06:14:33 GMT 2025","1155","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReuseStatementWhenNotCloseOnCompletion","shouldReuseStatementWhenNotCloseOnCompletion()",""
"passed","Sat Sep 06 06:11:49 GMT 2025","Sat Sep 06 06:11:51 GMT 2025","2479","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Sep 06 06:22:00 GMT 2025","Sat Sep 06 06:22:00 GMT 2025","241","","integration.tests.client.TLSTest","","integration.tests.client.TLSTest","shouldUseTLS","shouldUseTLS()",""
"passed","Sat Sep 06 06:13:55 GMT 2025","Sat Sep 06 06:13:57 GMT 2025","1065","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [3] 5",""
"passed","Sat Sep 06 06:13:45 GMT 2025","Sat Sep 06 06:13:46 GMT 2025","899","","integration.tests.StatementTest","","integration.tests.StatementTest","caseInsensitiveGetter","caseInsensitiveGetter()",""
"passed","Sat Sep 06 06:22:00 GMT 2025","Sat Sep 06 06:22:00 GMT 2025","6","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldRetryOn502","shouldRetryOn502()",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infDoubleUserEngine","infDoubleUserEngine(String) [1] select 'inf'::double",""
"passed","Sat Sep 06 06:22:00 GMT 2025","Sat Sep 06 06:22:00 GMT 2025","43","","integration.tests.client.RetryPolicyTest","","integration.tests.client.RetryPolicyTest","shouldThrowExceptionOn400WithoutRetry","shouldThrowExceptionOn400WithoutRetry()",""
"passed","Sat Sep 06 06:11:24 GMT 2025","Sat Sep 06 06:11:24 GMT 2025","97","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [15] null, information_schema, null, VIEW, tables;columns, null",""
"passed","Sat Sep 06 06:12:47 GMT 2025","Sat Sep 06 06:12:49 GMT 2025","2129","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) long",""
"passed","Sat Sep 06 06:13:48 GMT 2025","Sat Sep 06 06:13:50 GMT 2025","2132","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet","shouldReturnTrueWhenExecutingAStatementThatReturnsAResultSet()",""
"passed","Sat Sep 06 06:12:10 GMT 2025","Sat Sep 06 06:12:16 GMT 2025","5490","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertAndRetrieveUrl","shouldInsertAndRetrieveUrl()",""
"passed","Sat Sep 06 06:14:35 GMT 2025","Sat Sep 06 06:14:39 GMT 2025","3297","","integration.tests.StatementTest","","integration.tests.StatementTest","mixedCaseTable","mixedCaseTable(String, String, String, String) [1] CREATE FACT TABLE Case_Test (x long), case_test, Case_Test, case_test",""
"passed","Sat Sep 06 06:12:41 GMT 2025","Sat Sep 06 06:12:45 GMT 2025","4789","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) short",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanRealUserEngine","nanRealUserEngine(String) [3] select '-nan'::real",""
"passed","Sat Sep 06 06:21:57 GMT 2025","Sat Sep 06 06:21:57 GMT 2025","186","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged","shouldRemoveOffsetDIffWhenTimestampOffsetHasChanged()",""
"passed","Sat Sep 06 06:11:32 GMT 2025","Sat Sep 06 06:11:32 GMT 2025","64","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHaveCorrectInfo","shouldHaveCorrectInfo()",""
"passed","Sat Sep 06 06:12:39 GMT 2025","Sat Sep 06 06:12:41 GMT 2025","1609","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldInsertRecordsUsingDifferentNumericTypes","shouldInsertRecordsUsingDifferentNumericTypes(String, CheckedVoidTriFunction, CheckedBiFunction) byte",""
"passed","Sat Sep 06 06:11:52 GMT 2025","Sat Sep 06 06:11:56 GMT 2025","3261","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Sep 06 06:21:57 GMT 2025","Sat Sep 06 06:21:57 GMT 2025","96","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET","shouldRemoveOffsetDIffWhenTimestampOffsetHasChangedCET()",""
"passed","Sat Sep 06 06:11:20 GMT 2025","Sat Sep 06 06:11:21 GMT 2025","511","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","successfulConnectUnsuccessfulSelectV1","successfulConnectUnsuccessfulSelectV1(boolean, boolean) using db:false engine:true",""
"passed","Sat Sep 06 06:13:46 GMT 2025","Sat Sep 06 06:13:48 GMT 2025","2108","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime","successfulSettingOfPropertyThatRequiresAdvancedModePreviouslySetAtRuntime()",""
"passed","Sat Sep 06 06:13:57 GMT 2025","Sat Sep 06 06:13:58 GMT 2025","1951","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [4] 50",""
"passed","Sat Sep 06 06:12:24 GMT 2025","Sat Sep 06 06:12:25 GMT 2025","1404","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldFetchSpecialCharacters","shouldFetchSpecialCharacters()",""
"passed","Sat Sep 06 06:14:10 GMT 2025","Sat Sep 06 06:14:13 GMT 2025","2155","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldGetBooleans","shouldGetBooleans()",""
"passed","Sat Sep 06 06:11:30 GMT 2025","Sat Sep 06 06:11:32 GMT 2025","2270","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingDefaultNulls","preparedStatementUsingDefaultNulls()",""
"passed","Sat Sep 06 06:11:46 GMT 2025","Sat Sep 06 06:11:49 GMT 2025","2529","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","integerAndStringValues","integerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Sep 06 06:11:39 GMT 2025","Sat Sep 06 06:11:41 GMT 2025","2365","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanFloatUserEngine","nanFloatUserEngine(String) [2] select '+nan'::float",""
"passed","Sat Sep 06 06:14:48 GMT 2025","Sat Sep 06 06:14:51 GMT 2025","2224","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldSelect1","shouldSelect1()",""
"passed","Sat Sep 06 06:11:20 GMT 2025","Sat Sep 06 06:11:20 GMT 2025","394","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) SYSTEM_ENGINE",""
"passed","Sat Sep 06 06:21:58 GMT 2025","Sat Sep 06 06:21:58 GMT 2025","164","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings","shouldReturnTimestampFromTimestamptzWithTime_zoneSettings()",""
"passed","Sat Sep 06 06:11:37 GMT 2025","Sat Sep 06 06:11:39 GMT 2025","2094","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntegerAndStringValues","emptyIntegerAndStringValues(PreparedStatementValueSetter) set ARRAY",""
"passed","Sat Sep 06 06:11:32 GMT 2025","Sat Sep 06 06:11:32 GMT 2025","85","","integration.tests.NumericTypesTest","","integration.tests.NumericTypesTest","shouldHandleLargeDecimals","shouldHandleLargeDecimals()",""
"passed","Sat Sep 06 06:13:53 GMT 2025","Sat Sep 06 06:13:55 GMT 2025","2181","","integration.tests.StatementTest","","integration.tests.StatementTest","maxFieldSize","maxFieldSize(int) [2] 3",""
"passed","Sat Sep 06 06:14:33 GMT 2025","Sat Sep 06 06:14:35 GMT 2025","2188","","integration.tests.StatementTest","","integration.tests.StatementTest","nullSortOrder","nullSortOrder()",""
"passed","Sat Sep 06 06:12:20 GMT 2025","Sat Sep 06 06:12:24 GMT 2025","3675","","integration.tests.PreparedStatementTest","","integration.tests.PreparedStatementTest","shouldParReplaceParamMarkersInMultistatementStatement","shouldParReplaceParamMarkersInMultistatementStatement()",""
"passed","Sat Sep 06 06:13:35 GMT 2025","Sat Sep 06 06:13:37 GMT 2025","1953","","integration.tests.StatementTest","","integration.tests.StatementTest","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated","successfulSettingOfPropertyThatRequiresAdvancedModeConfiguredWhenConnectionIsCreated()",""
"passed","Sat Sep 06 06:21:57 GMT 2025","Sat Sep 06 06:21:57 GMT 2025","92","","integration.tests.TimestampTest","","integration.tests.TimestampTest","shouldGetTimeObjectsInDefaultUTCTimezone","shouldGetTimeObjectsInDefaultUTCTimezone()",""
"passed","Sat Sep 06 06:11:20 GMT 2025","Sat Sep 06 06:11:20 GMT 2025","420","","integration.tests.ConnectionTest","","integration.tests.ConnectionTest","connectToNotExistingDbV1","connectToNotExistingDbV1(EngineType) CUSTOM_ENGINE",""
"passed","Sat Sep 06 06:11:24 GMT 2025","Sat Sep 06 06:11:26 GMT 2025","1735","","integration.tests.NullableValuesTest","","integration.tests.NullableValuesTest","preparedStatementUsingStringValueContainsStringNull","preparedStatementUsingStringValueContainsStringNull()",""
"passed","Sat Sep 06 06:13:50 GMT 2025","Sat Sep 06 06:13:51 GMT 2025","960","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets","shouldThrowExceptionWhenTryingToExecuteQueryThatWouldReturnMultipleResultSets()",""
"passed","Sat Sep 06 06:11:34 GMT 2025","Sat Sep 06 06:11:37 GMT 2025","2352","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","intAndStringValues","intAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Sep 06 06:11:23 GMT 2025","Sat Sep 06 06:11:23 GMT 2025","105","","integration.tests.DatabaseMetaDataTest","","integration.tests.DatabaseMetaDataTest","getTables","getTables(String, String, String, String, String, String) [7] null, null, %test, null, integration_test, tables;columns;views",""
"passed","Sat Sep 06 06:13:05 GMT 2025","Sat Sep 06 06:13:05 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","nanDoubleUserEngine","nanDoubleUserEngine(String) [1] select 'nan'::double",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:26 GMT 2025","19712","","integration.tests.StatementCancelTest","","integration.tests.StatementCancelTest","shouldCancelQueryV1","shouldCancelQueryV1()",""
"passed","Sat Sep 06 06:14:05 GMT 2025","Sat Sep 06 06:14:07 GMT 2025","2020","","integration.tests.StatementTest","","integration.tests.StatementTest","empty","empty(String) query:--;",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","41","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","minusInfDoubleUserEngine","minusInfDoubleUserEngine(String) [1] select '-inf'::double",""
"passed","Sat Sep 06 06:13:06 GMT 2025","Sat Sep 06 06:13:06 GMT 2025","40","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infRealUserEngine","infRealUserEngine(String) [2] select '+inf'::real",""
"passed","Sat Sep 06 06:11:56 GMT 2025","Sat Sep 06 06:11:58 GMT 2025","2765","","integration.tests.PreparedStatementArrayTest","","integration.tests.PreparedStatementArrayTest","emptyIntAndStringValues","emptyIntAndStringValues(PreparedStatementValueSetter) set OBJECT",""
"passed","Sat Sep 06 06:13:05 GMT 2025","Sat Sep 06 06:13:05 GMT 2025","62","","integration.tests.SpecialValuesTest","","integration.tests.SpecialValuesTest","infFloatUserEngine","infFloatUserEngine(String) [1] select 'inf'::float",""
"passed","Sat Sep 06 06:14:14 GMT 2025","Sat Sep 06 06:14:27 GMT 2025","13481","","integration.tests.StatementTest","","integration.tests.StatementTest","shouldExecuteBatch","shouldExecuteBatch()",""
